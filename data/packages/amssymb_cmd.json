{
  "approxeq": {
    "command": "approxeq",
    "package": "amssymb",
    "snippet": "approxeq",
    "detail": "‚âä",
    "documentation": "appro equals"
  },
  "backepsilon": {
    "command": "backepsilon",
    "package": "amssymb",
    "snippet": "backepsilon",
    "detail": "œ∂",
    "documentation": "GREEK REVERSED LUNATE EPSILON SYMBOL"
  },
  "backprime": {
    "command": "backprime",
    "package": "amssymb",
    "snippet": "backprime",
    "detail": "‚Äµ",
    "documentation": "reverse prime, not superscripted"
  },
  "backsim": {
    "command": "backsim",
    "package": "amssymb",
    "snippet": "backsim",
    "detail": "‚àΩ",
    "documentation": "reverse similar"
  },
  "backsimeq": {
    "command": "backsimeq",
    "package": "amssymb",
    "snippet": "backsimeq",
    "detail": "‚ãç",
    "documentation": "reverse similar, equals"
  },
  "barwedge": {
    "command": "barwedge",
    "package": "amssymb",
    "snippet": "barwedge",
    "detail": "‚äº",
    "documentation": "logical NAND (bar over wedge)"
  },
  "Bbbk": {
    "command": "Bbbk",
    "package": "amssymb",
    "snippet": "Bbbk",
    "detail": "ùïú",
    "documentation": "MATHEMATICAL DOUBLE-STRUCK SMALL K"
  },
  "because": {
    "command": "because",
    "package": "amssymb",
    "snippet": "because",
    "detail": "‚àµ",
    "documentation": "BECAUSE"
  },
  "beth": {
    "command": "beth",
    "package": "amssymb",
    "snippet": "beth",
    "detail": "‚Ñ∂",
    "documentation": "be hebrew"
  },
  "between": {
    "command": "between",
    "package": "amssymb",
    "snippet": "between",
    "detail": "‚â¨",
    "documentation": "BETWEEN"
  },
  "bigstar": {
    "command": "bigstar",
    "package": "amssymb",
    "snippet": "bigstar",
    "detail": "‚òÖ",
    "documentation": "s filled"
  },
  "blacklozenge": {
    "command": "blacklozenge",
    "package": "amssymb",
    "snippet": "blacklozenge",
    "detail": "‚ß´",
    "documentation": "BLACK LOZENGE"
  },
  "blacksquare": {
    "command": "blacksquare",
    "package": "amssymb",
    "snippet": "blacksquare",
    "detail": "‚¨õ",
    "documentation": "BLACK LARGE SQUARE"
  },
  "blacktriangle": {
    "command": "blacktriangle",
    "package": "amssymb",
    "snippet": "blacktriangle",
    "detail": "‚ñ¥",
    "documentation": "up filled"
  },
  "blacktriangledown": {
    "command": "blacktriangledown",
    "package": "amssymb",
    "snippet": "blacktriangledown",
    "detail": "‚ñæ",
    "documentation": "BLACK DOWN-POINTING SMALL TRIANGLE"
  },
  "blacktriangleleft": {
    "command": "blacktriangleleft",
    "package": "amssymb",
    "snippet": "blacktriangleleft",
    "detail": "‚óÇ",
    "documentation": "lef filled"
  },
  "blacktriangleright": {
    "command": "blacktriangleright",
    "package": "amssymb",
    "snippet": "blacktriangleright",
    "detail": "‚ñ∏",
    "documentation": "righ filled"
  },
  "boxdot": {
    "command": "boxdot",
    "package": "amssymb",
    "snippet": "boxdot",
    "detail": "‚ä°",
    "documentation": "/dotsquare /boxdot b: small dot in box"
  },
  "boxminus": {
    "command": "boxminus",
    "package": "amssymb",
    "snippet": "boxminus",
    "detail": "‚äü",
    "documentation": "minus sign in box"
  },
  "boxplus": {
    "command": "boxplus",
    "package": "amssymb",
    "snippet": "boxplus",
    "detail": "‚äû",
    "documentation": "plus sign in box"
  },
  "boxtimes": {
    "command": "boxtimes",
    "package": "amssymb",
    "snippet": "boxtimes",
    "detail": "‚ä†",
    "documentation": "multiply sign in box"
  },
  "bumpeq": {
    "command": "bumpeq",
    "package": "amssymb",
    "snippet": "bumpeq",
    "detail": "‚âè",
    "documentation": "bumpy equals, equals"
  },
  "Bumpeq": {
    "command": "Bumpeq",
    "package": "amssymb",
    "snippet": "Bumpeq",
    "detail": "‚âé",
    "documentation": "bumpy equals"
  },
  "Cap": {
    "command": "Cap",
    "package": "amssymb",
    "snippet": "Cap",
    "detail": "‚ãí",
    "documentation": "/cap /doublecap b: DOUBLE INTERSECTION"
  },
  "centerdot": {
    "command": "centerdot",
    "package": "amssymb",
    "snippet": "centerdot"
  },
  "circeq": {
    "command": "circeq",
    "package": "amssymb",
    "snippet": "circeq",
    "detail": "‚âó",
    "documentation": "circle, equals"
  },
  "circlearrowleft": {
    "command": "circlearrowleft",
    "package": "amssymb",
    "snippet": "circlearrowleft",
    "detail": "‚Ü∫",
    "documentation": "ANTICLOCKWISE OPEN CIRCLE ARROW"
  },
  "circlearrowright": {
    "command": "circlearrowright",
    "package": "amssymb",
    "snippet": "circlearrowright",
    "detail": "‚Üª",
    "documentation": "CLOCKWISE OPEN CIRCLE ARROW"
  },
  "circledast": {
    "command": "circledast",
    "package": "amssymb",
    "snippet": "circledast",
    "detail": "‚äõ",
    "documentation": "asterisk in circle"
  },
  "circledcirc": {
    "command": "circledcirc",
    "package": "amssymb",
    "snippet": "circledcirc",
    "detail": "‚äö",
    "documentation": "small circle in circle"
  },
  "circleddash": {
    "command": "circleddash",
    "package": "amssymb",
    "snippet": "circleddash",
    "detail": "‚äù",
    "documentation": "hyphen in circle"
  },
  "circledS": {
    "command": "circledS",
    "package": "amssymb",
    "snippet": "circledS"
  },
  "complement": {
    "command": "complement",
    "package": "amssymb",
    "snippet": "complement",
    "detail": "‚àÅ",
    "documentation": "COMPLEMENT sign"
  },
  "Cup": {
    "command": "Cup",
    "package": "amssymb",
    "snippet": "Cup",
    "detail": "‚ãì",
    "documentation": "/cup /doublecup b: DOUBLE UNION"
  },
  "curlyeqprec": {
    "command": "curlyeqprec",
    "package": "amssymb",
    "snippet": "curlyeqprec",
    "detail": "‚ãû",
    "documentation": "curly equals, precedes"
  },
  "curlyeqsucc": {
    "command": "curlyeqsucc",
    "package": "amssymb",
    "snippet": "curlyeqsucc",
    "detail": "‚ãü",
    "documentation": "curly equals, succeeds"
  },
  "curlyvee": {
    "command": "curlyvee",
    "package": "amssymb",
    "snippet": "curlyvee",
    "detail": "‚ãé",
    "documentation": "CURLY LOGICAL OR"
  },
  "curlywedge": {
    "command": "curlywedge",
    "package": "amssymb",
    "snippet": "curlywedge",
    "detail": "‚ãè",
    "documentation": "CURLY LOGICAL AND"
  },
  "curvearrowleft": {
    "command": "curvearrowleft",
    "package": "amssymb",
    "snippet": "curvearrowleft",
    "detail": "‚Ü∂",
    "documentation": "left curved arrow"
  },
  "curvearrowright": {
    "command": "curvearrowright",
    "package": "amssymb",
    "snippet": "curvearrowright",
    "detail": "‚Ü∑",
    "documentation": "right curved arrow"
  },
  "daleth": {
    "command": "daleth",
    "package": "amssymb",
    "snippet": "daleth",
    "detail": "‚Ñ∏",
    "documentation": "dale hebrew"
  },
  "diagdown": {
    "command": "diagdown",
    "package": "amssymb",
    "snippet": "diagdown"
  },
  "diagup": {
    "command": "diagup",
    "package": "amssymb",
    "snippet": "diagup"
  },
  "digamma": {
    "command": "digamma",
    "package": "amssymb",
    "snippet": "digamma",
    "detail": "œù",
    "documentation": "GREEK SMALL LETTER DIGAMMA"
  },
  "divideontimes": {
    "command": "divideontimes",
    "package": "amssymb",
    "snippet": "divideontimes",
    "detail": "‚ãá",
    "documentation": "division on times"
  },
  "doteqdot": {
    "command": "doteqdot",
    "package": "amssymb",
    "snippet": "doteqdot",
    "detail": "‚âë",
    "documentation": "/doteq r: equals, even dots"
  },
  "dotplus": {
    "command": "dotplus",
    "package": "amssymb",
    "snippet": "dotplus",
    "detail": "‚àî",
    "documentation": "plus sign, dot above"
  },
  "doublebarwedge": {
    "command": "doublebarwedge",
    "package": "amssymb",
    "snippet": "doublebarwedge",
    "detail": "‚©û",
    "documentation": "LOGICAL AND WITH DOUBLE OVERBAR"
  },
  "downdownarrows": {
    "command": "downdownarrows",
    "package": "amssymb",
    "snippet": "downdownarrows",
    "detail": "‚áä",
    "documentation": "two down arrows"
  },
  "downharpoonleft": {
    "command": "downharpoonleft",
    "package": "amssymb",
    "snippet": "downharpoonleft",
    "detail": "‚áÉ",
    "documentation": "down harpoon-left"
  },
  "downharpoonright": {
    "command": "downharpoonright",
    "package": "amssymb",
    "snippet": "downharpoonright",
    "detail": "‚áÇ",
    "documentation": "down harpoon-right"
  },
  "eqcirc": {
    "command": "eqcirc",
    "package": "amssymb",
    "snippet": "eqcirc",
    "detail": "‚âñ",
    "documentation": "circle on equals sign"
  },
  "eqsim": {
    "command": "eqsim",
    "package": "amssymb",
    "snippet": "eqsim",
    "detail": "‚âÇ",
    "documentation": "equals, similar"
  },
  "eqslantgtr": {
    "command": "eqslantgtr",
    "package": "amssymb",
    "snippet": "eqslantgtr",
    "detail": "‚™ñ",
    "documentation": "SLANTED EQUAL TO OR GREATER-THAN"
  },
  "eqslantless": {
    "command": "eqslantless",
    "package": "amssymb",
    "snippet": "eqslantless",
    "detail": "‚™ï",
    "documentation": "SLANTED EQUAL TO OR LESS-THAN"
  },
  "eth": {
    "command": "eth",
    "package": "amssymb",
    "snippet": "eth",
    "detail": "√∞",
    "documentation": "eth"
  },
  "fallingdotseq": {
    "command": "fallingdotseq",
    "package": "amssymb",
    "snippet": "fallingdotseq",
    "detail": "‚âí",
    "documentation": "equals, falling dots"
  },
  "Finv": {
    "command": "Finv",
    "package": "amssymb",
    "snippet": "Finv",
    "detail": "‚Ñ≤",
    "documentation": "TURNED CAPITAL F"
  },
  "Game": {
    "command": "Game",
    "package": "amssymb",
    "snippet": "Game",
    "detail": "‚ÖÅ",
    "documentation": "TURNED SANS-SERIF CAPITAL G (amssymb has mirrored G)"
  },
  "geqq": {
    "command": "geqq",
    "package": "amssymb",
    "snippet": "geqq",
    "detail": "‚âß",
    "documentation": "grea double equals"
  },
  "geqslant": {
    "command": "geqslant",
    "package": "amssymb",
    "snippet": "geqslant",
    "detail": "‚©æ",
    "documentation": "GREATER-THAN OR SLANTED EQUAL TO"
  },
  "ggg": {
    "command": "ggg",
    "package": "amssymb",
    "snippet": "ggg",
    "detail": "‚™¢",
    "documentation": "DOUBLE NESTED GREATER-THAN"
  },
  "gimel": {
    "command": "gimel",
    "package": "amssymb",
    "snippet": "gimel",
    "detail": "‚Ñ∑",
    "documentation": "gimel, hebrew"
  },
  "gnapprox": {
    "command": "gnapprox",
    "package": "amssymb",
    "snippet": "gnapprox",
    "detail": "‚™ä",
    "documentation": "GREATER-THAN AND NOT APPROXIMATE"
  },
  "gneq": {
    "command": "gneq",
    "package": "amssymb",
    "snippet": "gneq",
    "detail": "‚™à",
    "documentation": "GREATER-THAN AND SINGLE-LINE NOT EQUAL TO"
  },
  "gneqq": {
    "command": "gneqq",
    "package": "amssymb",
    "snippet": "gneqq",
    "detail": "‚â©",
    "documentation": "grea not double equals"
  },
  "gnsim": {
    "command": "gnsim",
    "package": "amssymb",
    "snippet": "gnsim",
    "detail": "‚ãß",
    "documentation": "grea not similar"
  },
  "gtrapprox": {
    "command": "gtrapprox",
    "package": "amssymb",
    "snippet": "gtrapprox",
    "detail": "‚™Ü",
    "documentation": "GREATER-THAN OR APPROXIMATE"
  },
  "gtrdot": {
    "command": "gtrdot",
    "package": "amssymb",
    "snippet": "gtrdot",
    "detail": "‚ãó",
    "documentation": "greater with dot"
  },
  "gtreqless": {
    "command": "gtreqless",
    "package": "amssymb",
    "snippet": "gtreqless",
    "detail": "‚ãõ",
    "documentation": "grea equals, less"
  },
  "gtreqqless": {
    "command": "gtreqqless",
    "package": "amssymb",
    "snippet": "gtreqqless",
    "detail": "‚™å",
    "documentation": "GREATER-THAN ABOVE DOUBLE-LINE EQUAL ABOVE LESS-THAN"
  },
  "gtrless": {
    "command": "gtrless",
    "package": "amssymb",
    "snippet": "gtrless",
    "detail": "‚â∑",
    "documentation": "grea less"
  },
  "gtrsim": {
    "command": "gtrsim",
    "package": "amssymb",
    "snippet": "gtrsim",
    "detail": "‚â≥",
    "documentation": "grea similar"
  },
  "gvertneqq": {
    "command": "gvertneqq",
    "package": "amssymb",
    "snippet": "gvertneqq"
  },
  "hslash": {
    "command": "hslash",
    "package": "amssymb",
    "snippet": "hslash",
    "detail": "‚Ñè",
    "documentation": "Planck's h over 2pi"
  },
  "intercal": {
    "command": "intercal",
    "package": "amssymb",
    "snippet": "intercal",
    "detail": "‚ä∫",
    "documentation": "intercal"
  },
  "leftarrowtail": {
    "command": "leftarrowtail",
    "package": "amssymb",
    "snippet": "leftarrowtail",
    "detail": "‚Ü¢",
    "documentation": "left arrow-tailed"
  },
  "leftleftarrows": {
    "command": "leftleftarrows",
    "package": "amssymb",
    "snippet": "leftleftarrows",
    "detail": "‚áá",
    "documentation": "two left arrows"
  },
  "leftrightarrows": {
    "command": "leftrightarrows",
    "package": "amssymb",
    "snippet": "leftrightarrows",
    "detail": "‚áÜ",
    "documentation": "left arrow over right arrow"
  },
  "leftrightharpoons": {
    "command": "leftrightharpoons",
    "package": "amssymb",
    "snippet": "leftrightharpoons",
    "detail": "‚áã",
    "documentation": "left harpoon over right"
  },
  "leftrightsquigarrow": {
    "command": "leftrightsquigarrow",
    "package": "amssymb",
    "snippet": "leftrightsquigarrow",
    "detail": "‚Ü≠",
    "documentation": "left and right arr-wavy"
  },
  "leftthreetimes": {
    "command": "leftthreetimes",
    "package": "amssymb",
    "snippet": "leftthreetimes",
    "detail": "‚ãã",
    "documentation": "LEFT SEMIDIRECT PRODUCT"
  },
  "leqq": {
    "command": "leqq",
    "package": "amssymb",
    "snippet": "leqq",
    "detail": "‚â¶",
    "documentation": "less, double equals"
  },
  "leqslant": {
    "command": "leqslant",
    "package": "amssymb",
    "snippet": "leqslant",
    "detail": "‚©Ω",
    "documentation": "LESS-THAN OR SLANTED EQUAL TO"
  },
  "lessapprox": {
    "command": "lessapprox",
    "package": "amssymb",
    "snippet": "lessapprox",
    "detail": "‚™Ö",
    "documentation": "LESS-THAN OR APPROXIMATE"
  },
  "lessdot": {
    "command": "lessdot",
    "package": "amssymb",
    "snippet": "lessdot",
    "detail": "‚ãñ",
    "documentation": "less with dot"
  },
  "lesseqgtr": {
    "command": "lesseqgtr",
    "package": "amssymb",
    "snippet": "lesseqgtr",
    "detail": "‚ãö",
    "documentation": "less, equals, greater"
  },
  "lesseqqgtr": {
    "command": "lesseqqgtr",
    "package": "amssymb",
    "snippet": "lesseqqgtr",
    "detail": "‚™ã",
    "documentation": "LESS-THAN ABOVE DOUBLE-LINE EQUAL ABOVE GREATER-THAN"
  },
  "lessgtr": {
    "command": "lessgtr",
    "package": "amssymb",
    "snippet": "lessgtr",
    "detail": "‚â∂",
    "documentation": "less, greater"
  },
  "lesssim": {
    "command": "lesssim",
    "package": "amssymb",
    "snippet": "lesssim",
    "detail": "‚â≤",
    "documentation": "less, similar"
  },
  "Lleftarrow": {
    "command": "Lleftarrow",
    "package": "amssymb",
    "snippet": "Lleftarrow",
    "detail": "‚áö",
    "documentation": "left triple arrow"
  },
  "lll": {
    "command": "lll",
    "package": "amssymb",
    "snippet": "lll",
    "detail": "‚™°",
    "documentation": "DOUBLE NESTED LESS-THAN"
  },
  "lnapprox": {
    "command": "lnapprox",
    "package": "amssymb",
    "snippet": "lnapprox",
    "detail": "‚™â",
    "documentation": "LESS-THAN AND NOT APPROXIMATE"
  },
  "lneq": {
    "command": "lneq",
    "package": "amssymb",
    "snippet": "lneq",
    "detail": "‚™á",
    "documentation": "LESS-THAN AND SINGLE-LINE NOT EQUAL TO"
  },
  "lneqq": {
    "command": "lneqq",
    "package": "amssymb",
    "snippet": "lneqq",
    "detail": "‚â®",
    "documentation": "less, not double equals"
  },
  "lnsim": {
    "command": "lnsim",
    "package": "amssymb",
    "snippet": "lnsim",
    "detail": "‚ã¶",
    "documentation": "less, not similar"
  },
  "looparrowleft": {
    "command": "looparrowleft",
    "package": "amssymb",
    "snippet": "looparrowleft",
    "detail": "‚Ü´",
    "documentation": "left arrow-looped"
  },
  "looparrowright": {
    "command": "looparrowright",
    "package": "amssymb",
    "snippet": "looparrowright",
    "detail": "‚Ü¨",
    "documentation": "right arrow-looped"
  },
  "lozenge": {
    "command": "lozenge",
    "package": "amssymb",
    "snippet": "lozenge",
    "detail": "‚óä",
    "documentation": "LOZENGE or total mark"
  },
  "Lsh": {
    "command": "Lsh",
    "package": "amssymb",
    "snippet": "Lsh",
    "detail": "‚Ü∞",
    "documentation": "a: UPWARDS ARROW WITH TIP LEFTWARDS"
  },
  "ltimes": {
    "command": "ltimes",
    "package": "amssymb",
    "snippet": "ltimes",
    "detail": "‚ãâ",
    "documentation": "times sign, left closed"
  },
  "lvertneqq": {
    "command": "lvertneqq",
    "package": "amssymb",
    "snippet": "lvertneqq"
  },
  "measuredangle": {
    "command": "measuredangle",
    "package": "amssymb",
    "snippet": "measuredangle",
    "detail": "‚à°",
    "documentation": "MEASURED ANGLE"
  },
  "multimap": {
    "command": "multimap",
    "package": "amssymb",
    "snippet": "multimap",
    "detail": "‚ä∏",
    "documentation": "/MULTIMAP a:"
  },
  "ncong": {
    "command": "ncong",
    "package": "amssymb",
    "snippet": "ncong",
    "detail": "‚âá",
    "documentation": "not congruent with"
  },
  "nexists": {
    "command": "nexists",
    "package": "amssymb",
    "snippet": "nexists",
    "detail": "‚àÑ",
    "documentation": "negated exists"
  },
  "ngeq": {
    "command": "ngeq",
    "package": "amssymb",
    "snippet": "ngeq",
    "detail": "‚â±",
    "documentation": "not greater-than-or-equal"
  },
  "ngeqq": {
    "command": "ngeqq",
    "package": "amssymb",
    "snippet": "ngeqq"
  },
  "ngeqslant": {
    "command": "ngeqslant",
    "package": "amssymb",
    "snippet": "ngeqslant",
    "detail": "‚â±",
    "documentation": "not greater-than-or-equal"
  },
  "ngtr": {
    "command": "ngtr",
    "package": "amssymb",
    "snippet": "ngtr",
    "detail": "‚âØ",
    "documentation": "NOT GREATER-THAN"
  },
  "nleftarrow": {
    "command": "nleftarrow",
    "package": "amssymb",
    "snippet": "nleftarrow",
    "detail": "‚Üö",
    "documentation": "not left arrow"
  },
  "nLeftarrow": {
    "command": "nLeftarrow",
    "package": "amssymb",
    "snippet": "nLeftarrow",
    "detail": "‚áç",
    "documentation": "not implied by"
  },
  "nleftrightarrow": {
    "command": "nleftrightarrow",
    "package": "amssymb",
    "snippet": "nleftrightarrow",
    "detail": "‚ÜÆ",
    "documentation": "not left and right arrow"
  },
  "nLeftrightarrow": {
    "command": "nLeftrightarrow",
    "package": "amssymb",
    "snippet": "nLeftrightarrow",
    "detail": "‚áé",
    "documentation": "not left and right double arrows"
  },
  "nleq": {
    "command": "nleq",
    "package": "amssymb",
    "snippet": "nleq",
    "detail": "‚â∞",
    "documentation": "not less-than-or-equal"
  },
  "nleqq": {
    "command": "nleqq",
    "package": "amssymb",
    "snippet": "nleqq"
  },
  "nleqslant": {
    "command": "nleqslant",
    "package": "amssymb",
    "snippet": "nleqslant",
    "detail": "‚â∞",
    "documentation": "not less-than-or-equal"
  },
  "nless": {
    "command": "nless",
    "package": "amssymb",
    "snippet": "nless",
    "detail": "‚âÆ",
    "documentation": "NOT LESS-THAN"
  },
  "nmid": {
    "command": "nmid",
    "package": "amssymb",
    "snippet": "nmid",
    "detail": "‚à§",
    "documentation": "negated mid, DOES NOT DIVIDE"
  },
  "nparallel": {
    "command": "nparallel",
    "package": "amssymb",
    "snippet": "nparallel",
    "detail": "‚à¶",
    "documentation": "not parallel"
  },
  "nprec": {
    "command": "nprec",
    "package": "amssymb",
    "snippet": "nprec",
    "detail": "‚äÄ",
    "documentation": "not precedes"
  },
  "npreceq": {
    "command": "npreceq",
    "package": "amssymb",
    "snippet": "npreceq",
    "detail": "‚ã†",
    "documentation": "DOES NOT PRECEDE OR EQUAL"
  },
  "nrightarrow": {
    "command": "nrightarrow",
    "package": "amssymb",
    "snippet": "nrightarrow",
    "detail": "‚Üõ",
    "documentation": "not right arrow"
  },
  "nRightarrow": {
    "command": "nRightarrow",
    "package": "amssymb",
    "snippet": "nRightarrow",
    "detail": "‚áè",
    "documentation": "not implies"
  },
  "nshortmid": {
    "command": "nshortmid",
    "package": "amssymb",
    "snippet": "nshortmid"
  },
  "nshortparallel": {
    "command": "nshortparallel",
    "package": "amssymb",
    "snippet": "nshortparallel"
  },
  "nsim": {
    "command": "nsim",
    "package": "amssymb",
    "snippet": "nsim",
    "detail": "‚âÅ",
    "documentation": "not similar"
  },
  "nsubseteq": {
    "command": "nsubseteq",
    "package": "amssymb",
    "snippet": "nsubseteq",
    "detail": "‚äà",
    "documentation": "no equals"
  },
  "nsubseteqq": {
    "command": "nsubseteqq",
    "package": "amssymb",
    "snippet": "nsubseteqq"
  },
  "nsucc": {
    "command": "nsucc",
    "package": "amssymb",
    "snippet": "nsucc",
    "detail": "‚äÅ",
    "documentation": "not succeeds"
  },
  "nsucceq": {
    "command": "nsucceq",
    "package": "amssymb",
    "snippet": "nsucceq",
    "detail": "‚ã°",
    "documentation": "no curly equals"
  },
  "nsupseteq": {
    "command": "nsupseteq",
    "package": "amssymb",
    "snippet": "nsupseteq",
    "detail": "‚äâ",
    "documentation": "no equals"
  },
  "nsupseteqq": {
    "command": "nsupseteqq",
    "package": "amssymb",
    "snippet": "nsupseteqq"
  },
  "ntriangleleft": {
    "command": "ntriangleleft",
    "package": "amssymb",
    "snippet": "ntriangleleft",
    "detail": "‚ã™",
    "documentation": "not left triangle"
  },
  "ntrianglelefteq": {
    "command": "ntrianglelefteq",
    "package": "amssymb",
    "snippet": "ntrianglelefteq",
    "detail": "‚ã¨",
    "documentation": "not lef equals"
  },
  "ntriangleright": {
    "command": "ntriangleright",
    "package": "amssymb",
    "snippet": "ntriangleright",
    "detail": "‚ã´",
    "documentation": "not right triangle"
  },
  "ntrianglerighteq": {
    "command": "ntrianglerighteq",
    "package": "amssymb",
    "snippet": "ntrianglerighteq",
    "detail": "‚ã≠",
    "documentation": "not righ equals"
  },
  "nvdash": {
    "command": "nvdash",
    "package": "amssymb",
    "snippet": "nvdash",
    "detail": "‚ä¨",
    "documentation": "no dash"
  },
  "nvDash": {
    "command": "nvDash",
    "package": "amssymb",
    "snippet": "nvDash",
    "detail": "‚ä≠",
    "documentation": "no double dash"
  },
  "nVdash": {
    "command": "nVdash",
    "package": "amssymb",
    "snippet": "nVdash",
    "detail": "‚äÆ",
    "documentation": "not double ver dash"
  },
  "nVDash": {
    "command": "nVDash",
    "package": "amssymb",
    "snippet": "nVDash",
    "detail": "‚äØ",
    "documentation": "not double vert, double dash"
  },
  "pitchfork": {
    "command": "pitchfork",
    "package": "amssymb",
    "snippet": "pitchfork",
    "detail": "‚ãî",
    "documentation": "PITCHFORK"
  },
  "precapprox": {
    "command": "precapprox",
    "package": "amssymb",
    "snippet": "precapprox",
    "detail": "‚™∑",
    "documentation": "PRECEDES ABOVE ALMOST EQUAL TO"
  },
  "preccurlyeq": {
    "command": "preccurlyeq",
    "package": "amssymb",
    "snippet": "preccurlyeq",
    "detail": "‚âº",
    "documentation": "precedes, curly equals"
  },
  "precnapprox": {
    "command": "precnapprox",
    "package": "amssymb",
    "snippet": "precnapprox",
    "detail": "‚™π",
    "documentation": "PRECEDES ABOVE NOT ALMOST EQUAL TO"
  },
  "precneqq": {
    "command": "precneqq",
    "package": "amssymb",
    "snippet": "precneqq",
    "detail": "‚™µ",
    "documentation": "PRECEDES ABOVE NOT EQUAL TO"
  },
  "precnsim": {
    "command": "precnsim",
    "package": "amssymb",
    "snippet": "precnsim",
    "detail": "‚ã®",
    "documentation": "precedes, not similar"
  },
  "precsim": {
    "command": "precsim",
    "package": "amssymb",
    "snippet": "precsim",
    "detail": "‚âæ",
    "documentation": "precedes, similar"
  },
  "psamsfonts": {
    "command": "psamsfonts",
    "package": "amssymb",
    "snippet": "psamsfonts"
  },
  "rightarrowtail": {
    "command": "rightarrowtail",
    "package": "amssymb",
    "snippet": "rightarrowtail",
    "detail": "‚Ü£",
    "documentation": "righ z notation total injection"
  },
  "rightleftarrows": {
    "command": "rightleftarrows",
    "package": "amssymb",
    "snippet": "rightleftarrows",
    "detail": "‚áÑ",
    "documentation": "right arrow over left arrow"
  },
  "rightrightarrows": {
    "command": "rightrightarrows",
    "package": "amssymb",
    "snippet": "rightrightarrows",
    "detail": "‚áâ",
    "documentation": "two right arrows"
  },
  "rightsquigarrow": {
    "command": "rightsquigarrow",
    "package": "amssymb",
    "snippet": "rightsquigarrow",
    "detail": "‚áù",
    "documentation": "RIGHTWARDS SQUIGGLE ARROW"
  },
  "rightthreetimes": {
    "command": "rightthreetimes",
    "package": "amssymb",
    "snippet": "rightthreetimes",
    "detail": "‚ãå",
    "documentation": "RIGHT SEMIDIRECT PRODUCT"
  },
  "risingdotseq": {
    "command": "risingdotseq",
    "package": "amssymb",
    "snippet": "risingdotseq",
    "detail": "‚âì",
    "documentation": "equals, rising dots"
  },
  "Rrightarrow": {
    "command": "Rrightarrow",
    "package": "amssymb",
    "snippet": "Rrightarrow",
    "detail": "‚áõ",
    "documentation": "right triple arrow"
  },
  "Rsh": {
    "command": "Rsh",
    "package": "amssymb",
    "snippet": "Rsh",
    "detail": "‚Ü±",
    "documentation": "a: UPWARDS ARROW WITH TIP RIGHTWARDS"
  },
  "rtimes": {
    "command": "rtimes",
    "package": "amssymb",
    "snippet": "rtimes",
    "detail": "‚ãä",
    "documentation": "times sign, right closed"
  },
  "shortmid": {
    "command": "shortmid",
    "package": "amssymb",
    "snippet": "shortmid"
  },
  "shortparallel": {
    "command": "shortparallel",
    "package": "amssymb",
    "snippet": "shortparallel"
  },
  "smallfrown": {
    "command": "smallfrown",
    "package": "amssymb",
    "snippet": "smallfrown"
  },
  "smallsetminus": {
    "command": "smallsetminus",
    "package": "amssymb",
    "snippet": "smallsetminus",
    "detail": "‚àñ",
    "documentation": "small SET MINUS (cf. reverse solidus)"
  },
  "smallsmile": {
    "command": "smallsmile",
    "package": "amssymb",
    "snippet": "smallsmile"
  },
  "sphericalangle": {
    "command": "sphericalangle",
    "package": "amssymb",
    "snippet": "sphericalangle",
    "detail": "‚à¢",
    "documentation": "SPHERICAL ANGLE"
  },
  "square": {
    "command": "square",
    "package": "amssymb",
    "snippet": "square",
    "detail": "‚¨ú",
    "documentation": "WHITE LARGE SQUARE"
  },
  "Subset": {
    "command": "Subset",
    "package": "amssymb",
    "snippet": "Subset",
    "detail": "‚ãê",
    "documentation": "DOUBLE SUBSET"
  },
  "subseteqq": {
    "command": "subseteqq",
    "package": "amssymb",
    "snippet": "subseteqq",
    "detail": "‚´Ö",
    "documentation": "SUBSET OF ABOVE EQUALS SIGN"
  },
  "subsetneq": {
    "command": "subsetneq",
    "package": "amssymb",
    "snippet": "subsetneq",
    "detail": "‚ää",
    "documentation": "subset, not equals"
  },
  "subsetneqq": {
    "command": "subsetneqq",
    "package": "amssymb",
    "snippet": "subsetneqq",
    "detail": "‚´ã",
    "documentation": "SUBSET OF ABOVE NOT EQUAL TO"
  },
  "succapprox": {
    "command": "succapprox",
    "package": "amssymb",
    "snippet": "succapprox",
    "detail": "‚™∏",
    "documentation": "SUCCEEDS ABOVE ALMOST EQUAL TO"
  },
  "succcurlyeq": {
    "command": "succcurlyeq",
    "package": "amssymb",
    "snippet": "succcurlyeq",
    "detail": "‚âΩ",
    "documentation": "succeeds, curly equals"
  },
  "succnapprox": {
    "command": "succnapprox",
    "package": "amssymb",
    "snippet": "succnapprox",
    "detail": "‚™∫",
    "documentation": "SUCCEEDS ABOVE NOT ALMOST EQUAL TO"
  },
  "succneqq": {
    "command": "succneqq",
    "package": "amssymb",
    "snippet": "succneqq",
    "detail": "‚™∂",
    "documentation": "SUCCEEDS ABOVE NOT EQUAL TO"
  },
  "succnsim": {
    "command": "succnsim",
    "package": "amssymb",
    "snippet": "succnsim",
    "detail": "‚ã©",
    "documentation": "succeeds, not similar"
  },
  "succsim": {
    "command": "succsim",
    "package": "amssymb",
    "snippet": "succsim",
    "detail": "‚âø",
    "documentation": "succeeds, similar"
  },
  "Supset": {
    "command": "Supset",
    "package": "amssymb",
    "snippet": "Supset",
    "detail": "‚ãë",
    "documentation": "DOUBLE SUPERSET"
  },
  "supseteqq": {
    "command": "supseteqq",
    "package": "amssymb",
    "snippet": "supseteqq",
    "detail": "‚´Ü",
    "documentation": "SUPERSET OF ABOVE EQUALS SIGN"
  },
  "supsetneq": {
    "command": "supsetneq",
    "package": "amssymb",
    "snippet": "supsetneq",
    "detail": "‚äã",
    "documentation": "superset, not equals"
  },
  "supsetneqq": {
    "command": "supsetneqq",
    "package": "amssymb",
    "snippet": "supsetneqq",
    "detail": "‚´å",
    "documentation": "SUPERSET OF ABOVE NOT EQUAL TO"
  },
  "therefore": {
    "command": "therefore",
    "package": "amssymb",
    "snippet": "therefore",
    "detail": "‚à¥",
    "documentation": "THEREFORE"
  },
  "thickapprox": {
    "command": "thickapprox",
    "package": "amssymb",
    "snippet": "thickapprox"
  },
  "thicksim": {
    "command": "thicksim",
    "package": "amssymb",
    "snippet": "thicksim"
  },
  "triangledown": {
    "command": "triangledown",
    "package": "amssymb",
    "snippet": "triangledown",
    "detail": "‚ñø",
    "documentation": "WHITE DOWN-POINTING SMALL TRIANGLE"
  },
  "trianglelefteq": {
    "command": "trianglelefteq",
    "package": "amssymb",
    "snippet": "trianglelefteq",
    "detail": "‚ä¥",
    "documentation": "lef equals"
  },
  "triangleq": {
    "command": "triangleq",
    "package": "amssymb",
    "snippet": "triangleq",
    "detail": "‚âú",
    "documentation": "equals"
  },
  "trianglerighteq": {
    "command": "trianglerighteq",
    "package": "amssymb",
    "snippet": "trianglerighteq",
    "detail": "‚äµ",
    "documentation": "righ equals"
  },
  "twoheadleftarrow": {
    "command": "twoheadleftarrow",
    "package": "amssymb",
    "snippet": "twoheadleftarrow",
    "detail": "‚Üû",
    "documentation": "left two-headed arrow"
  },
  "twoheadrightarrow": {
    "command": "twoheadrightarrow",
    "package": "amssymb",
    "snippet": "twoheadrightarrow",
    "detail": "‚Ü†",
    "documentation": "right two-headed arrow, z notation total surjection"
  },
  "upharpoonleft": {
    "command": "upharpoonleft",
    "package": "amssymb",
    "snippet": "upharpoonleft",
    "detail": "‚Üø",
    "documentation": "up harpoon-left"
  },
  "upharpoonright": {
    "command": "upharpoonright",
    "package": "amssymb",
    "snippet": "upharpoonright",
    "detail": "‚Üæ",
    "documentation": "a: up harpoon-right"
  },
  "upuparrows": {
    "command": "upuparrows",
    "package": "amssymb",
    "snippet": "upuparrows",
    "detail": "‚áà",
    "documentation": "two up arrows"
  },
  "varkappa": {
    "command": "varkappa",
    "package": "amssymb",
    "snippet": "varkappa",
    "detail": "ùúò",
    "documentation": "MATHEMATICAL ITALIC KAPPA SYMBOL"
  },
  "varnothing": {
    "command": "varnothing",
    "package": "amssymb",
    "snippet": "varnothing",
    "detail": "‚àÖ",
    "documentation": "circle, slash"
  },
  "varpropto": {
    "command": "varpropto",
    "package": "amssymb",
    "snippet": "varpropto"
  },
  "varsubsetneq": {
    "command": "varsubsetneq",
    "package": "amssymb",
    "snippet": "varsubsetneq",
    "detail": "‚ää",
    "documentation": "subset, not equals"
  },
  "varsubsetneqq": {
    "command": "varsubsetneqq",
    "package": "amssymb",
    "snippet": "varsubsetneqq"
  },
  "varsupsetneq": {
    "command": "varsupsetneq",
    "package": "amssymb",
    "snippet": "varsupsetneq"
  },
  "varsupsetneqq": {
    "command": "varsupsetneqq",
    "package": "amssymb",
    "snippet": "varsupsetneqq"
  },
  "vartriangle": {
    "command": "vartriangle",
    "package": "amssymb",
    "snippet": "vartriangle",
    "detail": "‚ñµ",
    "documentation": "small up open"
  },
  "vartriangleleft": {
    "command": "vartriangleleft",
    "package": "amssymb",
    "snippet": "vartriangleleft",
    "detail": "‚ä≤",
    "documentation": "lef open, variant"
  },
  "vartriangleright": {
    "command": "vartriangleright",
    "package": "amssymb",
    "snippet": "vartriangleright",
    "detail": "‚ä≥",
    "documentation": "righ open, variant"
  },
  "vDash": {
    "command": "vDash",
    "package": "amssymb",
    "snippet": "vDash",
    "detail": "‚ä®",
    "documentation": "TRUE (ver double dash)"
  },
  "Vdash": {
    "command": "Vdash",
    "package": "amssymb",
    "snippet": "Vdash",
    "detail": "‚ä©",
    "documentation": "double ver dash"
  },
  "veebar": {
    "command": "veebar",
    "package": "amssymb",
    "snippet": "veebar",
    "detail": "‚äª",
    "documentation": "logical or, bar below (large vee); exclusive disjunction"
  },
  "Vvdash": {
    "command": "Vvdash",
    "package": "amssymb",
    "snippet": "Vvdash",
    "detail": "‚ä™",
    "documentation": "triple ver dash"
  }
}
