{
  "AlCapFnt": {
    "command": "AlCapFnt",
    "package": "algorithm2e",
    "snippet": "AlCapFnt"
  },
  "AlCapNameFnt": {
    "command": "AlCapNameFnt",
    "package": "algorithm2e",
    "snippet": "AlCapNameFnt"
  },
  "AlCapNameSty{}": {
    "command": "AlCapNameSty{arg1}",
    "package": "algorithm2e",
    "snippet": "AlCapNameSty{${1:arg1}}"
  },
  "AlCapSty{}": {
    "command": "AlCapSty{arg1}",
    "package": "algorithm2e",
    "snippet": "AlCapSty{${1:arg1}}"
  },
  "AlFnt": {
    "command": "AlFnt",
    "package": "algorithm2e",
    "snippet": "AlFnt"
  },
  "AlTitleFnt": {
    "command": "AlTitleFnt",
    "package": "algorithm2e",
    "snippet": "AlTitleFnt"
  },
  "AlTitleSty{}": {
    "command": "AlTitleSty{arg1}",
    "package": "algorithm2e",
    "snippet": "AlTitleSty{${1:arg1}}"
  },
  "AlgoLineautorefname": {
    "command": "AlgoLineautorefname",
    "package": "algorithm2e",
    "snippet": "AlgoLineautorefname"
  },
  "ArgSty{}": {
    "command": "ArgSty{arg1}",
    "package": "algorithm2e",
    "snippet": "ArgSty{${1:arg1}}"
  },
  "BlankLine": {
    "command": "BlankLine",
    "package": "algorithm2e",
    "snippet": "BlankLine"
  },
  "CommentSty{}": {
    "command": "CommentSty{arg1}",
    "package": "algorithm2e",
    "snippet": "CommentSty{${1:arg1}}"
  },
  "DataSty{}": {
    "command": "DataSty{arg1}",
    "package": "algorithm2e",
    "snippet": "DataSty{${1:arg1}}"
  },
  "DecMargin{}": {
    "command": "DecMargin{arg1}",
    "package": "algorithm2e",
    "snippet": "DecMargin{${1:arg1}}"
  },
  "DontPrintSemicolon": {
    "command": "DontPrintSemicolon",
    "package": "algorithm2e",
    "snippet": "DontPrintSemicolon"
  },
  "FuncSty{}": {
    "command": "FuncSty{arg1}",
    "package": "algorithm2e",
    "snippet": "FuncSty{${1:arg1}}"
  },
  "Hlne": {
    "command": "Hlne",
    "package": "algorithm2e",
    "snippet": "Hlne"
  },
  "InOutSizeDefined": {
    "command": "InOutSizeDefined",
    "package": "algorithm2e",
    "snippet": "InOutSizeDefined"
  },
  "IncMargin{}": {
    "command": "IncMargin{arg1}",
    "package": "algorithm2e",
    "snippet": "IncMargin{${1:arg1}}"
  },
  "Indentp{}": {
    "command": "Indentp{arg1}",
    "package": "algorithm2e",
    "snippet": "Indentp{${1:arg1}}"
  },
  "Indm": {
    "command": "Indm",
    "package": "algorithm2e",
    "snippet": "Indm"
  },
  "Indmm": {
    "command": "Indmm",
    "package": "algorithm2e",
    "snippet": "Indmm"
  },
  "Indp": {
    "command": "Indp",
    "package": "algorithm2e",
    "snippet": "Indp"
  },
  "Indpp": {
    "command": "Indpp",
    "package": "algorithm2e",
    "snippet": "Indpp"
  },
  "KwSty{}": {
    "command": "KwSty{arg1}",
    "package": "algorithm2e",
    "snippet": "KwSty{${1:arg1}}"
  },
  "LinesNotNumbered": {
    "command": "LinesNotNumbered",
    "package": "algorithm2e",
    "snippet": "LinesNotNumbered"
  },
  "LinesNumbered": {
    "command": "LinesNumbered",
    "package": "algorithm2e",
    "snippet": "LinesNumbered"
  },
  "LinesNumberedHidden": {
    "command": "LinesNumberedHidden",
    "package": "algorithm2e",
    "snippet": "LinesNumberedHidden"
  },
  "NlSty{}": {
    "command": "NlSty{arg1}",
    "package": "algorithm2e",
    "snippet": "NlSty{${1:arg1}}"
  },
  "NoCaptionOfAlgo": {
    "command": "NoCaptionOfAlgo",
    "package": "algorithm2e",
    "snippet": "NoCaptionOfAlgo"
  },
  "PrintSemicolon": {
    "command": "PrintSemicolon",
    "package": "algorithm2e",
    "snippet": "PrintSemicolon"
  },
  "ProcArgFnt": {
    "command": "ProcArgFnt",
    "package": "algorithm2e",
    "snippet": "ProcArgFnt"
  },
  "ProcArgSty{}": {
    "command": "ProcArgSty{arg1}",
    "package": "algorithm2e",
    "snippet": "ProcArgSty{${1:arg1}}"
  },
  "ProcFnt": {
    "command": "ProcFnt",
    "package": "algorithm2e",
    "snippet": "ProcFnt"
  },
  "ProcNameFnt": {
    "command": "ProcNameFnt",
    "package": "algorithm2e",
    "snippet": "ProcNameFnt"
  },
  "ProcNameSty{}": {
    "command": "ProcNameSty{arg1}",
    "package": "algorithm2e",
    "snippet": "ProcNameSty{${1:arg1}}"
  },
  "ProcSty{}": {
    "command": "ProcSty{arg1}",
    "package": "algorithm2e",
    "snippet": "ProcSty{${1:arg1}}"
  },
  "ResetInOut{}": {
    "command": "ResetInOut{arg1}",
    "package": "algorithm2e",
    "snippet": "ResetInOut{${1:arg1}}"
  },
  "RestoreCaptionOfAlgo": {
    "command": "RestoreCaptionOfAlgo",
    "package": "algorithm2e",
    "snippet": "RestoreCaptionOfAlgo"
  },
  "RestyleAlgo{}": {
    "command": "RestyleAlgo{arg1}",
    "package": "algorithm2e",
    "snippet": "RestyleAlgo{${1:arg1}}"
  },
  "SetAlCapFnt{}": {
    "command": "SetAlCapFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlCapFnt{${1:arg1}}"
  },
  "SetAlCapHSkip{}": {
    "command": "SetAlCapHSkip{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlCapHSkip{${1:arg1}}"
  },
  "SetAlCapNameFnt{}": {
    "command": "SetAlCapNameFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlCapNameFnt{${1:arg1}}"
  },
  "SetAlCapNameSty{}": {
    "command": "SetAlCapNameSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlCapNameSty{${1:arg1}}"
  },
  "SetAlCapSkip{}": {
    "command": "SetAlCapSkip{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlCapSkip{${1:arg1}}"
  },
  "SetAlCapSty{}": {
    "command": "SetAlCapSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlCapSty{${1:arg1}}"
  },
  "SetAlFnt{}": {
    "command": "SetAlFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlFnt{${1:arg1}}"
  },
  "SetAlTitleFnt{}": {
    "command": "SetAlTitleFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlTitleFnt{${1:arg1}}"
  },
  "SetAlTitleSty{}": {
    "command": "SetAlTitleSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlTitleSty{${1:arg1}}"
  },
  "SetAlgoCaptionLayout{}": {
    "command": "SetAlgoCaptionLayout{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoCaptionLayout{${1:arg1}}"
  },
  "SetAlgoCaptionSeparator{}": {
    "command": "SetAlgoCaptionSeparator{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoCaptionSeparator{${1:arg1}}"
  },
  "SetAlgoFuncName{}{}": {
    "command": "SetAlgoFuncName{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetAlgoFuncName{${1:arg1}}{${2:arg2}}"
  },
  "SetAlgoInsideSkip{}": {
    "command": "SetAlgoInsideSkip{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoInsideSkip{${1:arg1}}"
  },
  "SetAlgoLined": {
    "command": "SetAlgoLined",
    "package": "algorithm2e",
    "snippet": "SetAlgoLined"
  },
  "SetAlgoLongEnd": {
    "command": "SetAlgoLongEnd",
    "package": "algorithm2e",
    "snippet": "SetAlgoLongEnd"
  },
  "SetAlgoNlRelativeSize{}": {
    "command": "SetAlgoNlRelativeSize{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoNlRelativeSize{${1:arg1}}"
  },
  "SetAlgoNoEnd": {
    "command": "SetAlgoNoEnd",
    "package": "algorithm2e",
    "snippet": "SetAlgoNoEnd"
  },
  "SetAlgoNoLine": {
    "command": "SetAlgoNoLine",
    "package": "algorithm2e",
    "snippet": "SetAlgoNoLine"
  },
  "SetAlgoProcName{}{}": {
    "command": "SetAlgoProcName{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetAlgoProcName{${1:arg1}}{${2:arg2}}"
  },
  "SetAlgoRefName{}": {
    "command": "SetAlgoRefName{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoRefName{${1:arg1}}"
  },
  "SetAlgoRefRelativeSize{}": {
    "command": "SetAlgoRefRelativeSize{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoRefRelativeSize{${1:arg1}}"
  },
  "SetAlgoShortEnd": {
    "command": "SetAlgoShortEnd",
    "package": "algorithm2e",
    "snippet": "SetAlgoShortEnd"
  },
  "SetAlgoSkip{}": {
    "command": "SetAlgoSkip{arg1}",
    "package": "algorithm2e",
    "snippet": "SetAlgoSkip{${1:arg1}}"
  },
  "SetAlgoVlined": {
    "command": "SetAlgoVlined",
    "package": "algorithm2e",
    "snippet": "SetAlgoVlined"
  },
  "SetAlgorithmName{}{}{}": {
    "command": "SetAlgorithmName{arg1}{arg2}{arg3}",
    "package": "algorithm2e",
    "snippet": "SetAlgorithmName{${1:arg1}}{${2:arg2}}{${3:arg3}}"
  },
  "SetArgSty{}": {
    "command": "SetArgSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetArgSty{${1:arg1}}"
  },
  "SetCommentSty{}": {
    "command": "SetCommentSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetCommentSty{${1:arg1}}"
  },
  "SetDataSty{}": {
    "command": "SetDataSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetDataSty{${1:arg1}}"
  },
  "SetEndCharOfAlgoLine{}": {
    "command": "SetEndCharOfAlgoLine{arg1}",
    "package": "algorithm2e",
    "snippet": "SetEndCharOfAlgoLine{${1:arg1}}"
  },
  "SetFillComment": {
    "command": "SetFillComment",
    "package": "algorithm2e",
    "snippet": "SetFillComment"
  },
  "SetFuncSty{}": {
    "command": "SetFuncSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetFuncSty{${1:arg1}}"
  },
  "SetInd{}{}": {
    "command": "SetInd{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetInd{${1:arg1}}{${2:arg2}}"
  },
  "SetKwArray{}{}": {
    "command": "SetKwArray{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKwArray{${1:arg1}}{${2:arg2}}"
  },
  "SetKwBlock{}{}{}": {
    "command": "SetKwBlock{arg1}{arg2}{arg3}",
    "package": "algorithm2e",
    "snippet": "SetKwBlock{${1:arg1}}{${2:arg2}}{${3:arg3}}"
  },
  "SetKwComment{}{}{}": {
    "command": "SetKwComment{arg1}{arg2}{arg3}",
    "package": "algorithm2e",
    "snippet": "SetKwComment{${1:arg1}}{${2:arg2}}{${3:arg3}}"
  },
  "SetKwData{}{}": {
    "command": "SetKwData{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKwData{${1:arg1}}{${2:arg2}}"
  },
  "SetKwFor{}{}{}{}": {
    "command": "SetKwFor{arg1}{arg2}{arg3}{arg4}",
    "package": "algorithm2e",
    "snippet": "SetKwFor{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:arg4}}"
  },
  "SetKwFunction{}{}": {
    "command": "SetKwFunction{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKwFunction{${1:arg1}}{${2:arg2}}"
  },
  "SetKwHangingKw{}{}": {
    "command": "SetKwHangingKw{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKwHangingKw{${1:arg1}}{${2:arg2}}"
  },
  "SetKwIF{}{}{}{}{}{}{}{}": {
    "command": "SetKwIF{arg1}{arg2}{arg3}{arg4}{arg5}{arg6}{arg7}{arg8}",
    "package": "algorithm2e",
    "snippet": "SetKwIF{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:arg4}}{${5:arg5}}{${6:arg6}}{${7:arg7}}{${8:arg8}}"
  },
  "SetKwInOut{}{}": {
    "command": "SetKwInOut{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKwInOut{${1:arg1}}{${2:arg2}}"
  },
  "SetKwInput{}{}": {
    "command": "SetKwInput{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKwInput{${1:arg1}}{${2:arg2}}"
  },
  "SetKwRepeat{}{}{}": {
    "command": "SetKwRepeat{arg1}{arg2}{arg3}",
    "package": "algorithm2e",
    "snippet": "SetKwRepeat{${1:arg1}}{${2:arg2}}{${3:arg3}}"
  },
  "SetKwSty{}": {
    "command": "SetKwSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetKwSty{${1:arg1}}"
  },
  "SetKwSwitch{}{}{}{}{}{}{}{}": {
    "command": "SetKwSwitch{arg1}{arg2}{arg3}{arg4}{arg5}{arg6}{arg7}{arg8}",
    "package": "algorithm2e",
    "snippet": "SetKwSwitch{${1:arg1}}{${2:arg2}}{${3:arg3}}{${4:arg4}}{${5:arg5}}{${6:arg6}}{${7:arg7}}{${8:arg8}}"
  },
  "SetKw{}{}": {
    "command": "SetKw{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetKw{${1:arg1}}{${2:arg2}}"
  },
  "SetLine": {
    "command": "SetLine",
    "package": "algorithm2e",
    "snippet": "SetLine"
  },
  "SetNlSkip{}": {
    "command": "SetNlSkip{arg1}",
    "package": "algorithm2e",
    "snippet": "SetNlSkip{${1:arg1}}"
  },
  "SetNlSty{}{}{}": {
    "command": "SetNlSty{arg1}{arg2}{arg3}",
    "package": "algorithm2e",
    "snippet": "SetNlSty{${1:arg1}}{${2:arg2}}{${3:arg3}}"
  },
  "SetNoFillComment": {
    "command": "SetNoFillComment",
    "package": "algorithm2e",
    "snippet": "SetNoFillComment"
  },
  "SetNoLine": {
    "command": "SetNoLine",
    "package": "algorithm2e",
    "snippet": "SetNoLine"
  },
  "SetNothing": {
    "command": "SetNothing",
    "package": "algorithm2e",
    "snippet": "SetNothing"
  },
  "SetProcArgFnt{}": {
    "command": "SetProcArgFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetProcArgFnt{${1:arg1}}"
  },
  "SetProcArgSty{}": {
    "command": "SetProcArgSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetProcArgSty{${1:arg1}}"
  },
  "SetProcFnt{}": {
    "command": "SetProcFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetProcFnt{${1:arg1}}"
  },
  "SetProcNameFnt{}": {
    "command": "SetProcNameFnt{arg1}",
    "package": "algorithm2e",
    "snippet": "SetProcNameFnt{${1:arg1}}"
  },
  "SetProcNameSty{}": {
    "command": "SetProcNameSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetProcNameSty{${1:arg1}}"
  },
  "SetProcSty{}": {
    "command": "SetProcSty{arg1}",
    "package": "algorithm2e",
    "snippet": "SetProcSty{${1:arg1}}"
  },
  "SetSideCommentLeft": {
    "command": "SetSideCommentLeft",
    "package": "algorithm2e",
    "snippet": "SetSideCommentLeft"
  },
  "SetSideCommentRight": {
    "command": "SetSideCommentRight",
    "package": "algorithm2e",
    "snippet": "SetSideCommentRight"
  },
  "SetTitleSty{}{}": {
    "command": "SetTitleSty{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "SetTitleSty{${1:arg1}}{${2:arg2}}"
  },
  "SetVline": {
    "command": "SetVline",
    "package": "algorithm2e",
    "snippet": "SetVline"
  },
  "SetVlineSkip{}": {
    "command": "SetVlineSkip{arg1}",
    "package": "algorithm2e",
    "snippet": "SetVlineSkip{${1:arg1}}"
  },
  "Setnlskip{}": {
    "command": "Setnlskip{arg1}",
    "package": "algorithm2e",
    "snippet": "Setnlskip{${1:arg1}}"
  },
  "Setnlsty{}{}{}": {
    "command": "Setnlsty{arg1}{arg2}{arg3}",
    "package": "algorithm2e",
    "snippet": "Setnlsty{${1:arg1}}{${2:arg2}}{${3:arg3}}"
  },
  "ShowLn": {
    "command": "ShowLn",
    "package": "algorithm2e",
    "snippet": "ShowLn"
  },
  "ShowLnLabel{}": {
    "command": "ShowLnLabel{arg1}",
    "package": "algorithm2e",
    "snippet": "ShowLnLabel{${1:arg1}}"
  },
  "TitleOfAlgo{}": {
    "command": "TitleOfAlgo{arg1}",
    "package": "algorithm2e",
    "snippet": "TitleOfAlgo{${1:arg1}}"
  },
  "TitleSty{}": {
    "command": "TitleSty{arg1}",
    "package": "algorithm2e",
    "snippet": "TitleSty{${1:arg1}}"
  },
  "Titleofalgo{}": {
    "command": "Titleofalgo{arg1}",
    "package": "algorithm2e",
    "snippet": "Titleofalgo{${1:arg1}}"
  },
  "algocfautorefname": {
    "command": "algocfautorefname",
    "package": "algorithm2e",
    "snippet": "algocfautorefname"
  },
  "algocffuncautorefname": {
    "command": "algocffuncautorefname",
    "package": "algorithm2e",
    "snippet": "algocffuncautorefname"
  },
  "algocfprocautorefname": {
    "command": "algocfprocautorefname",
    "package": "algorithm2e",
    "snippet": "algocfprocautorefname"
  },
  "algoendfloat": {
    "command": "algoendfloat",
    "package": "algorithm2e",
    "snippet": "algoendfloat"
  },
  "algoheightrule": {
    "command": "algoheightrule",
    "package": "algorithm2e",
    "snippet": "algoheightrule"
  },
  "algoheightruledefault": {
    "command": "algoheightruledefault",
    "package": "algorithm2e",
    "snippet": "algoheightruledefault"
  },
  "algoplace": {
    "command": "algoplace",
    "package": "algorithm2e",
    "snippet": "algoplace"
  },
  "algorithmautorefname": {
    "command": "algorithmautorefname",
    "package": "algorithm2e",
    "snippet": "algorithmautorefname"
  },
  "algorithmcflinename": {
    "command": "algorithmcflinename",
    "package": "algorithm2e",
    "snippet": "algorithmcflinename"
  },
  "algorithmcfname": {
    "command": "algorithmcfname",
    "package": "algorithm2e",
    "snippet": "algorithmcfname"
  },
  "algotitleheightrule": {
    "command": "algotitleheightrule",
    "package": "algorithm2e",
    "snippet": "algotitleheightrule"
  },
  "algotitleheightruledefault": {
    "command": "algotitleheightruledefault",
    "package": "algorithm2e",
    "snippet": "algotitleheightruledefault"
  },
  "decmargin{}": {
    "command": "decmargin{arg1}",
    "package": "algorithm2e",
    "snippet": "decmargin{${1:arg1}}"
  },
  "dontprintsemicolon": {
    "command": "dontprintsemicolon",
    "package": "algorithm2e",
    "snippet": "dontprintsemicolon"
  },
  "enl": {
    "command": "enl",
    "package": "algorithm2e",
    "snippet": "enl"
  },
  "functionautorefname": {
    "command": "functionautorefname",
    "package": "algorithm2e",
    "snippet": "functionautorefname"
  },
  "incmargin{}": {
    "command": "incmargin{arg1}",
    "package": "algorithm2e",
    "snippet": "incmargin{${1:arg1}}"
  },
  "l": {
    "command": "l",
    "package": "algorithm2e",
    "snippet": "l",
    "detail": "𝑙",
    "documentation": "MATHEMATICAL ITALIC SMALL L"
  },
  "linesnotnumbered": {
    "command": "linesnotnumbered",
    "package": "algorithm2e",
    "snippet": "linesnotnumbered"
  },
  "linesnumbered": {
    "command": "linesnumbered",
    "package": "algorithm2e",
    "snippet": "linesnumbered"
  },
  "linesnumberedhidden": {
    "command": "linesnumberedhidden",
    "package": "algorithm2e",
    "snippet": "linesnumberedhidden"
  },
  "listalgorithmcfname": {
    "command": "listalgorithmcfname",
    "package": "algorithm2e",
    "snippet": "listalgorithmcfname"
  },
  "listofalgocfs": {
    "command": "listofalgocfs",
    "package": "algorithm2e",
    "snippet": "listofalgocfs"
  },
  "lnlset{}{}": {
    "command": "lnlset{arg1}{arg2}",
    "package": "algorithm2e",
    "snippet": "lnlset{${1:arg1}}{${2:arg2}}"
  },
  "lnl{}": {
    "command": "lnl{arg1}",
    "package": "algorithm2e",
    "snippet": "lnl{${1:arg1}}"
  },
  "next": {
    "command": "next",
    "package": "algorithm2e",
    "snippet": "next"
  },
  "nl": {
    "command": "nl",
    "package": "algorithm2e",
    "snippet": "nl"
  },
  "nlSty{}": {
    "command": "nlSty{arg1}",
    "package": "algorithm2e",
    "snippet": "nlSty{${1:arg1}}"
  },
  "nllabel{}": {
    "command": "nllabel{arg1}",
    "package": "algorithm2e",
    "snippet": "nllabel{${1:arg1}}"
  },
  "nlset{}": {
    "command": "nlset{arg1}",
    "package": "algorithm2e",
    "snippet": "nlset{${1:arg1}}"
  },
  "nocaptionofalgo": {
    "command": "nocaptionofalgo",
    "package": "algorithm2e",
    "snippet": "nocaptionofalgo"
  },
  "printsemicolon": {
    "command": "printsemicolon",
    "package": "algorithm2e",
    "snippet": "printsemicolon"
  },
  "procedureautorefname": {
    "command": "procedureautorefname",
    "package": "algorithm2e",
    "snippet": "procedureautorefname"
  },
  "relsize{}": {
    "command": "relsize{arg1}",
    "package": "algorithm2e",
    "snippet": "relsize{${1:arg1}}"
  },
  "restorecaptionofalgo": {
    "command": "restorecaptionofalgo",
    "package": "algorithm2e",
    "snippet": "restorecaptionofalgo"
  },
  "restylealgo{}": {
    "command": "restylealgo{arg1}",
    "package": "algorithm2e",
    "snippet": "restylealgo{${1:arg1}}"
  },
  "setLeftLinesNumbers": {
    "command": "setLeftLinesNumbers",
    "package": "algorithm2e",
    "snippet": "setLeftLinesNumbers"
  },
  "setRightLinesNumbers": {
    "command": "setRightLinesNumbers",
    "package": "algorithm2e",
    "snippet": "setRightLinesNumbers"
  },
  "setalcaphskip{}": {
    "command": "setalcaphskip{arg1}",
    "package": "algorithm2e",
    "snippet": "setalcaphskip{${1:arg1}}"
  },
  "setalcapskip{}": {
    "command": "setalcapskip{arg1}",
    "package": "algorithm2e",
    "snippet": "setalcapskip{${1:arg1}}"
  },
  "setnlskip{}": {
    "command": "setnlskip{arg1}",
    "package": "algorithm2e",
    "snippet": "setnlskip{${1:arg1}}"
  },
  "showln": {
    "command": "showln",
    "package": "algorithm2e",
    "snippet": "showln"
  },
  "showlnlabel{}": {
    "command": "showlnlabel{arg1}",
    "package": "algorithm2e",
    "snippet": "showlnlabel{${1:arg1}}"
  },
  "test": {
    "command": "test",
    "package": "algorithm2e",
    "snippet": "test"
  },
  "theAlgoLine": {
    "command": "theAlgoLine",
    "package": "algorithm2e",
    "snippet": "theAlgoLine"
  },
  "theHAlgoLine": {
    "command": "theHAlgoLine",
    "package": "algorithm2e",
    "snippet": "theHAlgoLine"
  },
  "theHalgocf": {
    "command": "theHalgocf",
    "package": "algorithm2e",
    "snippet": "theHalgocf"
  },
  "theHalgocffunc": {
    "command": "theHalgocffunc",
    "package": "algorithm2e",
    "snippet": "theHalgocffunc"
  },
  "theHalgocfproc": {
    "command": "theHalgocfproc",
    "package": "algorithm2e",
    "snippet": "theHalgocfproc"
  },
  "thealgocf": {
    "command": "thealgocf",
    "package": "algorithm2e",
    "snippet": "thealgocf"
  },
  "thealgocfline": {
    "command": "thealgocfline",
    "package": "algorithm2e",
    "snippet": "thealgocfline"
  },
  "thealgocfproc": {
    "command": "thealgocfproc",
    "package": "algorithm2e",
    "snippet": "thealgocfproc"
  },
  "thepostalgo": {
    "command": "thepostalgo",
    "package": "algorithm2e",
    "snippet": "thepostalgo"
  },
  "vespace": {
    "command": "vespace",
    "package": "algorithm2e",
    "snippet": "vespace"
  },
  "KwIn{}": {
    "command": "KwIn{input}",
    "package": "algorithm2e",
    "snippet": "KwIn{${1:input}}"
  },
  "KwOut{}": {
    "command": "KwOut{output}",
    "package": "algorithm2e",
    "snippet": "KwOut{${1:output}}"
  },
  "KwData{}": {
    "command": "KwData{input}",
    "package": "algorithm2e",
    "snippet": "KwData{${1:input}}"
  },
  "KwResult{}": {
    "command": "KwResult{output}",
    "package": "algorithm2e",
    "snippet": "KwResult{${1:output}}"
  },
  "KwTo": {
    "command": "KwTo",
    "package": "algorithm2e",
    "snippet": "KwTo"
  },
  "KwRet{}": {
    "command": "KwRet{value}",
    "package": "algorithm2e",
    "snippet": "KwRet{${1:value}}"
  },
  "Return{}": {
    "command": "Return{value}",
    "package": "algorithm2e",
    "snippet": "Return{${1:value}}"
  },
  "Begin{}": {
    "command": "Begin{block-inside}",
    "package": "algorithm2e",
    "snippet": "Begin{${1:block-inside}}"
  },
  "Begin(begin-comment){}": {
    "command": "Begin(begin-comment){block-inside}",
    "package": "algorithm2e",
    "snippet": "Begin(begin-comment){${1:block-inside}}"
  },
  "tcc{}": {
    "command": "tcc{lines-of-comments}",
    "package": "algorithm2e",
    "snippet": "tcc{${1:lines-of-comments}}"
  },
  "tcc*{}": {
    "command": "tcc*{right-justified-side-comment}",
    "package": "algorithm2e",
    "snippet": "tcc*{${1:right-justified-side-comment}}"
  },
  "tcc*[]{}": {
    "command": "tcc*[h]{left-justified-side-comment-without-line-ending}",
    "package": "algorithm2e",
    "snippet": "tcc*[${2:h}]{${1:left-justified-side-comment-without-line-ending}}"
  },
  "tcp{}": {
    "command": "tcp{lines-of-comments}",
    "package": "algorithm2e",
    "snippet": "tcp{${1:lines-of-comments}}"
  },
  "tcp*{}": {
    "command": "tcp*{right-justified-side-comment}",
    "package": "algorithm2e",
    "snippet": "tcp*{${1:right-justified-side-comment}}"
  },
  "tcp*[]{}": {
    "command": "tcp*[h]{left-justified-side-comment-without-line-ending}",
    "package": "algorithm2e",
    "snippet": "tcp*[${2:h}]{${1:left-justified-side-comment-without-line-ending}}"
  },
  "If{}{}": {
    "command": "If{condition}{then-block}",
    "package": "algorithm2e",
    "snippet": "If{${1:condition}}{${2:then-block}}"
  },
  "If(then-comment){}{}": {
    "command": "If(then-comment){condition}{then-block}",
    "package": "algorithm2e",
    "snippet": "If(then-comment){${1:condition}}{${2:then-block}}"
  },
  "uIf{}{}": {
    "command": "uIf{condition}{then-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uIf{${1:condition}}{${2:then-block-without-end}}"
  },
  "uIf(then-comment){}{}": {
    "command": "uIf(then-comment){condition}{then-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uIf(then-comment){${1:condition}}{${2:then-block-without-end}}"
  },
  "lIf{}{}": {
    "command": "lIf{condition}{then-line}",
    "package": "algorithm2e",
    "snippet": "lIf{${1:condition}}{${2:then-line}}"
  },
  "lIf(if-comment){}{}": {
    "command": "lIf(if-comment){condition}{then-line}",
    "package": "algorithm2e",
    "snippet": "lIf(if-comment){${1:condition}}{${2:then-line}}"
  },
  "ElseIf{}": {
    "command": "ElseIf{elseif-block}",
    "package": "algorithm2e",
    "snippet": "ElseIf{${1:elseif-block}}"
  },
  "ElseIf(elseif-comment){}": {
    "command": "ElseIf(elseif-comment){elseif-block}",
    "package": "algorithm2e",
    "snippet": "ElseIf(elseif-comment){${1:elseif-block}}"
  },
  "uElseIf{}": {
    "command": "uElseIf{elseif-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uElseIf{${1:elseif-block-without-end}}"
  },
  "uElseIf(elseif-comment){}": {
    "command": "uElseIf(elseif-comment){elseif-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uElseIf(elseif-comment){${1:elseif-block-without-end}}"
  },
  "lElseIf{}": {
    "command": "lElseIf{elseif-line}",
    "package": "algorithm2e",
    "snippet": "lElseIf{${1:elseif-line}}"
  },
  "lElseif(elseif-line){}": {
    "command": "lElseif(elseif-line){elseif-block}",
    "package": "algorithm2e",
    "snippet": "lElseif(elseif-line){${1:elseif-block}}"
  },
  "Else{}": {
    "command": "Else{else-block}",
    "package": "algorithm2e",
    "snippet": "Else{${1:else-block}}"
  },
  "Else(else-comment){}": {
    "command": "Else(else-comment){else-block}",
    "package": "algorithm2e",
    "snippet": "Else(else-comment){${1:else-block}}"
  },
  "uElse{}": {
    "command": "uElse{else-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uElse{${1:else-block-without-end}}"
  },
  "uElse(else-block-comment){}": {
    "command": "uElse(else-block-comment){else-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uElse(else-block-comment){${1:else-block-without-end}}"
  },
  "lElse{}": {
    "command": "lElse{else-line}",
    "package": "algorithm2e",
    "snippet": "lElse{${1:else-line}}"
  },
  "lElse(else-comment){}": {
    "command": "lElse(else-comment){else-line}",
    "package": "algorithm2e",
    "snippet": "lElse(else-comment){${1:else-line}}"
  },
  "eIf{}{}{}": {
    "command": "eIf{condition}{then-block}{else-block}",
    "package": "algorithm2e",
    "snippet": "eIf{${1:condition}}{${2:then-block}}{${3:else-block}}"
  },
  "eIf(then-comment){}{}(else-comment){}": {
    "command": "eIf(then-comment){condition}{then-block}(else-comment){else-block}",
    "package": "algorithm2e",
    "snippet": "eIf(then-comment){${1:condition}}{${2:then-block}}(else-comment){${3:else-block}}"
  },
  "eIf(then-comment){}{}{}": {
    "command": "eIf(then-comment){condition}{then-block}{else-block}",
    "package": "algorithm2e",
    "snippet": "eIf(then-comment){${1:condition}}{${2:then-block}}{${3:else-block}}"
  },
  "eIf{}{}(else-comment){}": {
    "command": "eIf{condition}{then-block}(else-comment){else-block}",
    "package": "algorithm2e",
    "snippet": "eIf{${1:condition}}{${2:then-block}}(else-comment){${3:else-block}}"
  },
  "leIf{}{}{}": {
    "command": "leIf{condition}{then-line}{else-line}",
    "package": "algorithm2e",
    "snippet": "leIf{${1:condition}}{${2:then-line}}{${3:else-line}}"
  },
  "leIf(comment){}{}{}": {
    "command": "leIf(comment){condition}{then-line}{else-line}",
    "package": "algorithm2e",
    "snippet": "leIf(comment){${1:condition}}{${2:then-line}}{${3:else-line}}"
  },
  "Switch(switch-comment){}{}": {
    "command": "Switch(switch-comment){condition}{switch-block}",
    "package": "algorithm2e",
    "snippet": "Switch(switch-comment){${1:condition}}{${2:switch-block}}"
  },
  "Switch{}{}": {
    "command": "Switch{condition}{switch-block}",
    "package": "algorithm2e",
    "snippet": "Switch{${1:condition}}{${2:switch-block}}"
  },
  "Case{}{}": {
    "command": "Case{case}{case-block}",
    "package": "algorithm2e",
    "snippet": "Case{${1:case}}{${2:case-block}}"
  },
  "Case(case-comment){}{}": {
    "command": "Case(case-comment){case}{case-block}",
    "package": "algorithm2e",
    "snippet": "Case(case-comment){${1:case}}{${2:case-block}}"
  },
  "uCase{}{}": {
    "command": "uCase{case}{case-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uCase{${1:case}}{${2:case-block-without-end}}"
  },
  "uCase(case-comment){}{}": {
    "command": "uCase(case-comment){case}{case-block-without-end}",
    "package": "algorithm2e",
    "snippet": "uCase(case-comment){${1:case}}{${2:case-block-without-end}}"
  },
  "lCase{}{}": {
    "command": "lCase{case}{case-line}",
    "package": "algorithm2e",
    "snippet": "lCase{${1:case}}{${2:case-line}}"
  },
  "lCase(case-comment){}{}": {
    "command": "lCase(case-comment){case}{case-line}",
    "package": "algorithm2e",
    "snippet": "lCase(case-comment){${1:case}}{${2:case-line}}"
  },
  "Other{}": {
    "command": "Other{otherwise-block}",
    "package": "algorithm2e",
    "snippet": "Other{${1:otherwise-block}}"
  },
  "Other(otherwise-comment){}": {
    "command": "Other(otherwise-comment){otherwise-block}",
    "package": "algorithm2e",
    "snippet": "Other(otherwise-comment){${1:otherwise-block}}"
  },
  "lOther{}": {
    "command": "lOther{otherwise-line}",
    "package": "algorithm2e",
    "snippet": "lOther{${1:otherwise-line}}"
  },
  "lOther(otherwise-comment){}": {
    "command": "lOther(otherwise-comment){otherwise-line}",
    "package": "algorithm2e",
    "snippet": "lOther(otherwise-comment){${1:otherwise-line}}"
  },
  "For{}{}": {
    "command": "For{condition}{for-block}",
    "package": "algorithm2e",
    "snippet": "For{${1:condition}}{${2:for-block}}"
  },
  "For(for-comment){}{}": {
    "command": "For(for-comment){condition}{for-block}",
    "package": "algorithm2e",
    "snippet": "For(for-comment){${1:condition}}{${2:for-block}}"
  },
  "lFor{}{}": {
    "command": "lFor{condition}{for-line}",
    "package": "algorithm2e",
    "snippet": "lFor{${1:condition}}{${2:for-line}}"
  },
  "lFor(for-comment){}{}": {
    "command": "lFor(for-comment){condition}{for-line}",
    "package": "algorithm2e",
    "snippet": "lFor(for-comment){${1:condition}}{${2:for-line}}"
  },
  "While{}{}": {
    "command": "While{condition}{while-block}",
    "package": "algorithm2e",
    "snippet": "While{${1:condition}}{${2:while-block}}"
  },
  "While(while-comment){}{}": {
    "command": "While(while-comment){condition}{while-block}",
    "package": "algorithm2e",
    "snippet": "While(while-comment){${1:condition}}{${2:while-block}}"
  },
  "lWhile{}{}": {
    "command": "lWhile{condition}{while-line}",
    "package": "algorithm2e",
    "snippet": "lWhile{${1:condition}}{${2:while-line}}"
  },
  "lWhile(while-comment){}{}": {
    "command": "lWhile(while-comment){condition}{while-line}",
    "package": "algorithm2e",
    "snippet": "lWhile(while-comment){${1:condition}}{${2:while-line}}"
  },
  "ForEach{}{}": {
    "command": "ForEach{condition}{foreach-block}",
    "package": "algorithm2e",
    "snippet": "ForEach{${1:condition}}{${2:foreach-block}}"
  },
  "ForEach(foreach-comment){}{}": {
    "command": "ForEach(foreach-comment){condition}{foreach-block}",
    "package": "algorithm2e",
    "snippet": "ForEach(foreach-comment){${1:condition}}{${2:foreach-block}}"
  },
  "lForEach{}{}": {
    "command": "lForEach{condition}{foreach-line}",
    "package": "algorithm2e",
    "snippet": "lForEach{${1:condition}}{${2:foreach-line}}"
  },
  "lForEach(foreach-comment){}{}": {
    "command": "lForEach(foreach-comment){condition}{foreach-line}",
    "package": "algorithm2e",
    "snippet": "lForEach(foreach-comment){${1:condition}}{${2:foreach-line}}"
  },
  "ForAll{}{}": {
    "command": "ForAll{condition}{forall-block}",
    "package": "algorithm2e",
    "snippet": "ForAll{${1:condition}}{${2:forall-block}}"
  },
  "ForAll(forall-comment){}{}": {
    "command": "ForAll(forall-comment){condition}{forall-block}",
    "package": "algorithm2e",
    "snippet": "ForAll(forall-comment){${1:condition}}{${2:forall-block}}"
  },
  "lForAll{}{}": {
    "command": "lForAll{condition}{forall-line}",
    "package": "algorithm2e",
    "snippet": "lForAll{${1:condition}}{${2:forall-line}}"
  },
  "lForAll(forall-comment){}{}": {
    "command": "lForAll(forall-comment){condition}{forall-line}",
    "package": "algorithm2e",
    "snippet": "lForAll(forall-comment){${1:condition}}{${2:forall-line}}"
  },
  "Repeat{}{}": {
    "command": "Repeat{end-condition}{repeat-block}",
    "package": "algorithm2e",
    "snippet": "Repeat{${1:end-condition}}{${2:repeat-block}}"
  },
  "Repeat(repeat-comment){}{}(until-comment)": {
    "command": "Repeat(repeat-comment){end-condition}{repeat-block}(until-comment)",
    "package": "algorithm2e",
    "snippet": "Repeat(repeat-comment){${1:end-condition}}{${2:repeat-block}}(until-comment)"
  },
  "Repeat(repeat-comment){}{}": {
    "command": "Repeat(repeat-comment){end-condition}{repeat-block}",
    "package": "algorithm2e",
    "snippet": "Repeat(repeat-comment){${1:end-condition}}{${2:repeat-block}}"
  },
  "Repeat{}{}(until-comment)": {
    "command": "Repeat{end-condition}{repeat-block}(until-comment)",
    "package": "algorithm2e",
    "snippet": "Repeat{${1:end-condition}}{${2:repeat-block}}(until-comment)"
  },
  "lRepeat{}{}": {
    "command": "lRepeat{end-condition}{repeat-line}",
    "package": "algorithm2e",
    "snippet": "lRepeat{${1:end-condition}}{${2:repeat-line}}"
  },
  "lRepeat(repeat-comment){}{}": {
    "command": "lRepeat(repeat-comment){end-condition}{repeat-line}",
    "package": "algorithm2e",
    "snippet": "lRepeat(repeat-comment){${1:end-condition}}{${2:repeat-line}}"
  }
}
