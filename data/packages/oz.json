{
  "includes": [
    "calc"
  ],
  "cmds": {
    "also": {
      "command": "also",
      "snippet": "also",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Also": {
      "command": "Also",
      "snippet": "Also",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ALSO": {
      "command": "ALSO",
      "snippet": "ALSO",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "comment*{}": {
      "command": "comment*{}",
      "snippet": "comment*{${1:text}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "comment{}": {
      "command": "comment{}",
      "snippet": "comment{${1:text}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "derive": {
      "command": "derive",
      "snippet": "derive",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "derive[]": {
      "command": "derive[]",
      "snippet": "derive[${1:condition}]",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftschemas": {
      "command": "leftschemas",
      "snippet": "leftschemas",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "M": {
      "command": "M",
      "snippet": "M",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "ùëÄ",
      "documentation": "MATHEMATICAL ITALIC CAPITAL M"
    },
    "nextside": {
      "command": "nextside",
      "snippet": "nextside",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ST": {
      "command": "ST",
      "snippet": "ST",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "where": {
      "command": "where",
      "snippet": "where",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zbreak": {
      "command": "zbreak",
      "snippet": "zbreak",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Zbreak": {
      "command": "Zbreak",
      "snippet": "Zbreak",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ZBREAK": {
      "command": "ZBREAK",
      "snippet": "ZBREAK",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedbar": {
      "command": "zedbar",
      "snippet": "zedbar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedbaselinestretch": {
      "command": "zedbaselinestretch",
      "snippet": "zedbaselinestretch",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedcornerheight": {
      "command": "zedcornerheight",
      "snippet": "zedcornerheight",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedindent": {
      "command": "zedindent",
      "snippet": "zedindent",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedleftsep": {
      "command": "zedleftsep",
      "snippet": "zedleftsep",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedlinethickness": {
      "command": "zedlinethickness",
      "snippet": "zedlinethickness",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedsize{}": {
      "command": "zedsize{}",
      "snippet": "zedsize{${1:size cmd}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedtab": {
      "command": "zedtab",
      "snippet": "zedtab",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "znewpage": {
      "command": "znewpage",
      "snippet": "znewpage",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "checkmark": {
      "command": "checkmark",
      "snippet": "checkmark",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚úì",
      "documentation": "CHECK MARK"
    },
    "circledR": {
      "command": "circledR",
      "snippet": "circledR",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "¬Æ",
      "documentation": "REGISTERED SIGN"
    },
    "intern": {
      "command": "intern",
      "snippet": "intern",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "maltese": {
      "command": "maltese",
      "snippet": "maltese",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ú†",
      "documentation": "MALTESE CROSS"
    },
    "sectionsymbol": {
      "command": "sectionsymbol",
      "snippet": "sectionsymbol",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "String{}": {
      "command": "String{}",
      "snippet": "String{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "STRING{}": {
      "command": "STRING{}",
      "snippet": "STRING{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varemptyset": {
      "command": "varemptyset",
      "snippet": "varemptyset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "yen": {
      "command": "yen",
      "snippet": "yen",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "¬•",
      "documentation": "YEN SIGN"
    },
    "all": {
      "command": "all",
      "snippet": "all",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "always": {
      "command": "always",
      "snippet": "always",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "approxeq": {
      "command": "approxeq",
      "snippet": "approxeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âä",
      "documentation": "appro equals"
    },
    "atlast": {
      "command": "atlast",
      "snippet": "atlast",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "atnext": {
      "command": "atnext",
      "snippet": "atnext",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "backepsilon": {
      "command": "backepsilon",
      "snippet": "backepsilon",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œ∂",
      "documentation": "GREEK REVERSED LUNATE EPSILON SYMBOL"
    },
    "backprime": {
      "command": "backprime",
      "snippet": "backprime",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Äµ",
      "documentation": "reverse prime, not superscripted"
    },
    "backsim": {
      "command": "backsim",
      "snippet": "backsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àΩ",
      "documentation": "reverse similar"
    },
    "backsimeq": {
      "command": "backsimeq",
      "snippet": "backsimeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãç",
      "documentation": "reverse similar, equals"
    },
    "bag": {
      "command": "bag",
      "snippet": "bag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "bagcount": {
      "command": "bagcount",
      "snippet": "bagcount",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "barwedge": {
      "command": "barwedge",
      "snippet": "barwedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äº",
      "documentation": "logical NAND (bar over wedge)"
    },
    "bbar": {
      "command": "bbar",
      "snippet": "bbar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "because": {
      "command": "because",
      "snippet": "because",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àµ",
      "documentation": "BECAUSE"
    },
    "beth": {
      "command": "beth",
      "snippet": "beth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ∂",
      "documentation": "be hebrew"
    },
    "between": {
      "command": "between",
      "snippet": "between",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â¨",
      "documentation": "BETWEEN"
    },
    "bigstar": {
      "command": "bigstar",
      "snippet": "bigstar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚òÖ",
      "documentation": "s filled"
    },
    "bij": {
      "command": "bij",
      "snippet": "bij",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§ñ",
      "documentation": "RIGHTWARDS TWO-HEADED ARROW WITH TAIL, z notation bijection"
    },
    "blacklozenge": {
      "command": "blacklozenge",
      "snippet": "blacklozenge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ß´",
      "documentation": "BLACK LOZENGE"
    },
    "BLACKQED": {
      "command": "BLACKQED",
      "snippet": "BLACKQED",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "blacksquare": {
      "command": "blacksquare",
      "snippet": "blacksquare",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¨õ",
      "documentation": "BLACK LARGE SQUARE"
    },
    "blacktriangle": {
      "command": "blacktriangle",
      "snippet": "blacktriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñ¥",
      "documentation": "up filled"
    },
    "blacktriangledown": {
      "command": "blacktriangledown",
      "snippet": "blacktriangledown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñæ",
      "documentation": "BLACK DOWN-POINTING SMALL TRIANGLE"
    },
    "blacktriangleleft": {
      "command": "blacktriangleleft",
      "snippet": "blacktriangleleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óÇ",
      "documentation": "lef filled"
    },
    "blacktriangleright": {
      "command": "blacktriangleright",
      "snippet": "blacktriangleright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñ∏",
      "documentation": "righ filled"
    },
    "boldword{}": {
      "command": "boldword{}",
      "snippet": "boldword{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "bool": {
      "command": "bool",
      "snippet": "bool",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Box": {
      "command": "Box",
      "snippet": "Box",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boxdot": {
      "command": "boxdot",
      "snippet": "boxdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä°",
      "documentation": "/dotsquare /boxdot b: small dot in box"
    },
    "boxminus": {
      "command": "boxminus",
      "snippet": "boxminus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äü",
      "documentation": "minus sign in box"
    },
    "boxplus": {
      "command": "boxplus",
      "snippet": "boxplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äû",
      "documentation": "plus sign in box"
    },
    "boxtimes": {
      "command": "boxtimes",
      "snippet": "boxtimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä†",
      "documentation": "multiply sign in box"
    },
    "bumpeq": {
      "command": "bumpeq",
      "snippet": "bumpeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âè",
      "documentation": "bumpy equals, equals"
    },
    "Bumpeq": {
      "command": "Bumpeq",
      "snippet": "Bumpeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âé",
      "documentation": "bumpy equals"
    },
    "buni": {
      "command": "buni",
      "snippet": "buni",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äé",
      "documentation": "plus sign in union"
    },
    "Cap": {
      "command": "Cap",
      "snippet": "Cap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãí",
      "documentation": "/cap /doublecap b: DOUBLE INTERSECTION"
    },
    "cat": {
      "command": "cat",
      "snippet": "cat",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ÅÄ",
      "documentation": "CHARACTER TIE, z notation sequence concatenation"
    },
    "cbar": {
      "command": "cbar",
      "snippet": "cbar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "centerdot": {
      "command": "centerdot",
      "snippet": "centerdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "circeq": {
      "command": "circeq",
      "snippet": "circeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âó",
      "documentation": "circle, equals"
    },
    "circlearrowleft": {
      "command": "circlearrowleft",
      "snippet": "circlearrowleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∫",
      "documentation": "ANTICLOCKWISE OPEN CIRCLE ARROW"
    },
    "circlearrowright": {
      "command": "circlearrowright",
      "snippet": "circlearrowright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üª",
      "documentation": "CLOCKWISE OPEN CIRCLE ARROW"
    },
    "circledast": {
      "command": "circledast",
      "snippet": "circledast",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äõ",
      "documentation": "asterisk in circle"
    },
    "circledcirc": {
      "command": "circledcirc",
      "snippet": "circledcirc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äö",
      "documentation": "small circle in circle"
    },
    "circleddash": {
      "command": "circleddash",
      "snippet": "circleddash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äù",
      "documentation": "hyphen in circle"
    },
    "circledS": {
      "command": "circledS",
      "snippet": "circledS",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "cmp": {
      "command": "cmp",
      "snippet": "cmp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "comp": {
      "command": "comp",
      "snippet": "comp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®æ",
      "documentation": "Z NOTATION RELATIONAL COMPOSITION"
    },
    "complement": {
      "command": "complement",
      "snippet": "complement",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÅ",
      "documentation": "COMPLEMENT sign"
    },
    "cross": {
      "command": "cross",
      "snippet": "cross",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Cup": {
      "command": "Cup",
      "snippet": "Cup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãì",
      "documentation": "/cup /doublecup b: DOUBLE UNION"
    },
    "curlyeqprec": {
      "command": "curlyeqprec",
      "snippet": "curlyeqprec",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãû",
      "documentation": "curly equals, precedes"
    },
    "curlyeqsucc": {
      "command": "curlyeqsucc",
      "snippet": "curlyeqsucc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãü",
      "documentation": "curly equals, succeeds"
    },
    "curlyvee": {
      "command": "curlyvee",
      "snippet": "curlyvee",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãé",
      "documentation": "CURLY LOGICAL OR"
    },
    "curlywedge": {
      "command": "curlywedge",
      "snippet": "curlywedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãè",
      "documentation": "CURLY LOGICAL AND"
    },
    "curvearrowleft": {
      "command": "curvearrowleft",
      "snippet": "curvearrowleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∂",
      "documentation": "left curved arrow"
    },
    "curvearrowright": {
      "command": "curvearrowright",
      "snippet": "curvearrowright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∑",
      "documentation": "right curved arrow"
    },
    "daleth": {
      "command": "daleth",
      "snippet": "daleth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ∏",
      "documentation": "dale hebrew"
    },
    "dcat": {
      "command": "dcat",
      "snippet": "dcat",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dcmp": {
      "command": "dcmp",
      "snippet": "dcmp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ddef": {
      "command": "ddef",
      "snippet": "ddef",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "defs": {
      "command": "defs",
      "snippet": "defs",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Diamond": {
      "command": "Diamond",
      "snippet": "Diamond",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óá",
      "documentation": "WHITE DIAMOND; diamond, open"
    },
    "digamma": {
      "command": "digamma",
      "snippet": "digamma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œù",
      "documentation": "GREEK SMALL LETTER DIGAMMA"
    },
    "dint": {
      "command": "dint",
      "snippet": "dint",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãÇ",
      "documentation": "\\dinter (oz), intersection operator"
    },
    "dinter": {
      "command": "dinter",
      "snippet": "dinter",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "disjoint": {
      "command": "disjoint",
      "snippet": "disjoint",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "divideontimes": {
      "command": "divideontimes",
      "snippet": "divideontimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãá",
      "documentation": "division on times"
    },
    "divides": {
      "command": "divides",
      "snippet": "divides",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dom": {
      "command": "dom",
      "snippet": "dom",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dotaccent{}": {
      "command": "dotaccent{}",
      "snippet": "dotaccent{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Doteq": {
      "command": "Doteq",
      "snippet": "Doteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âë",
      "documentation": "/doteq r: equals, even dots"
    },
    "doteqdot": {
      "command": "doteqdot",
      "snippet": "doteqdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âë",
      "documentation": "/doteq r: equals, even dots"
    },
    "dotplus": {
      "command": "dotplus",
      "snippet": "dotplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àî",
      "documentation": "plus sign, dot above"
    },
    "doublebarwedge": {
      "command": "doublebarwedge",
      "snippet": "doublebarwedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©û",
      "documentation": "LOGICAL AND WITH DOUBLE OVERBAR"
    },
    "doublecap": {
      "command": "doublecap",
      "snippet": "doublecap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "doublecup": {
      "command": "doublecup",
      "snippet": "doublecup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dovr": {
      "command": "dovr",
      "snippet": "dovr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "downdownarrows": {
      "command": "downdownarrows",
      "snippet": "downdownarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áä",
      "documentation": "two down arrows"
    },
    "downharpoonleft": {
      "command": "downharpoonleft",
      "snippet": "downharpoonleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÉ",
      "documentation": "down harpoon-left"
    },
    "downharpoonright": {
      "command": "downharpoonright",
      "snippet": "downharpoonright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÇ",
      "documentation": "down harpoon-right"
    },
    "dres": {
      "command": "dres",
      "snippet": "dres",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óÅ",
      "documentation": "(large) lef open; z notation domain restriction"
    },
    "dsub": {
      "command": "dsub",
      "snippet": "dsub",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©§",
      "documentation": "Z NOTATION DOMAIN ANTIRESTRICTION"
    },
    "duni": {
      "command": "duni",
      "snippet": "duni",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãÉ",
      "documentation": "\\dunion (oz), union operator"
    },
    "dunion": {
      "command": "dunion",
      "snippet": "dunion",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "emptybag": {
      "command": "emptybag",
      "snippet": "emptybag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "emptyseq": {
      "command": "emptyseq",
      "snippet": "emptyseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "eqcirc": {
      "command": "eqcirc",
      "snippet": "eqcirc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âñ",
      "documentation": "circle on equals sign"
    },
    "eqsim": {
      "command": "eqsim",
      "snippet": "eqsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âÇ",
      "documentation": "equals, similar"
    },
    "eqslantgtr": {
      "command": "eqslantgtr",
      "snippet": "eqslantgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ñ",
      "documentation": "SLANTED EQUAL TO OR GREATER-THAN"
    },
    "eqslantless": {
      "command": "eqslantless",
      "snippet": "eqslantless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ï",
      "documentation": "SLANTED EQUAL TO OR LESS-THAN"
    },
    "ETH": {
      "command": "ETH",
      "snippet": "ETH",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "eth": {
      "command": "eth",
      "snippet": "eth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "√∞",
      "documentation": "eth"
    },
    "eventually": {
      "command": "eventually",
      "snippet": "eventually",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "exi": {
      "command": "exi",
      "snippet": "exi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÉ",
      "documentation": "at least one exists"
    },
    "exione": {
      "command": "exione",
      "snippet": "exione",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Exit": {
      "command": "Exit",
      "snippet": "Exit",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "expon": {
      "command": "expon",
      "snippet": "expon",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fallingdotseq": {
      "command": "fallingdotseq",
      "snippet": "fallingdotseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âí",
      "documentation": "equals, falling dots"
    },
    "false": {
      "command": "false",
      "snippet": "false",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fcmp": {
      "command": "fcmp",
      "snippet": "fcmp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®æ",
      "documentation": "Z NOTATION RELATIONAL COMPOSITION"
    },
    "ffun": {
      "command": "ffun",
      "snippet": "ffun",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áª",
      "documentation": "RIGHTWARDS ARROW WITH DOUBLE VERTICAL STROKE, z notation finite function"
    },
    "filter": {
      "command": "filter",
      "snippet": "filter",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "finj": {
      "command": "finj",
      "snippet": "finj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§ï",
      "documentation": "RIGHTWARDS ARROW WITH TAIL WITH DOUBLE VERTICAL STROKE, z notation finite injection"
    },
    "finset": {
      "command": "finset",
      "snippet": "finset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fovr": {
      "command": "fovr",
      "snippet": "fovr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "front": {
      "command": "front",
      "snippet": "front",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fset": {
      "command": "fset",
      "snippet": "fset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fsetone": {
      "command": "fsetone",
      "snippet": "fsetone",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fun": {
      "command": "fun",
      "snippet": "fun",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üí",
      "documentation": "rightward arrow, z notation total function"
    },
    "geqq": {
      "command": "geqq",
      "snippet": "geqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âß",
      "documentation": "grea double equals"
    },
    "geqslant": {
      "command": "geqslant",
      "snippet": "geqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©æ",
      "documentation": "GREATER-THAN OR SLANTED EQUAL TO"
    },
    "ggg": {
      "command": "ggg",
      "snippet": "ggg",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™¢",
      "documentation": "DOUBLE NESTED GREATER-THAN"
    },
    "gggtr": {
      "command": "gggtr",
      "snippet": "gggtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "gimel": {
      "command": "gimel",
      "snippet": "gimel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ∑",
      "documentation": "gimel, hebrew"
    },
    "gnapprox": {
      "command": "gnapprox",
      "snippet": "gnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ä",
      "documentation": "GREATER-THAN AND NOT APPROXIMATE"
    },
    "gneq": {
      "command": "gneq",
      "snippet": "gneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™à",
      "documentation": "GREATER-THAN AND SINGLE-LINE NOT EQUAL TO"
    },
    "gneqq": {
      "command": "gneqq",
      "snippet": "gneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â©",
      "documentation": "grea not double equals"
    },
    "gnsim": {
      "command": "gnsim",
      "snippet": "gnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãß",
      "documentation": "grea not similar"
    },
    "gtrapprox": {
      "command": "gtrapprox",
      "snippet": "gtrapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™Ü",
      "documentation": "GREATER-THAN OR APPROXIMATE"
    },
    "gtrdot": {
      "command": "gtrdot",
      "snippet": "gtrdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãó",
      "documentation": "greater with dot"
    },
    "gtreqless": {
      "command": "gtreqless",
      "snippet": "gtreqless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãõ",
      "documentation": "grea equals, less"
    },
    "gtreqqless": {
      "command": "gtreqqless",
      "snippet": "gtreqqless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™å",
      "documentation": "GREATER-THAN ABOVE DOUBLE-LINE EQUAL ABOVE LESS-THAN"
    },
    "gtrless": {
      "command": "gtrless",
      "snippet": "gtrless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∑",
      "documentation": "grea less"
    },
    "gtrsim": {
      "command": "gtrsim",
      "snippet": "gtrsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â≥",
      "documentation": "grea similar"
    },
    "gvertneqq": {
      "command": "gvertneqq",
      "snippet": "gvertneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "hasa": {
      "command": "hasa",
      "snippet": "hasa",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "head": {
      "command": "head",
      "snippet": "head",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "henceforth": {
      "command": "henceforth",
      "snippet": "henceforth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "hide": {
      "command": "hide",
      "snippet": "hide",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßπ",
      "documentation": "BIG REVERSE SOLIDUS, z notation schema hiding"
    },
    "hslash": {
      "command": "hslash",
      "snippet": "hslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñè",
      "documentation": "Planck's h over 2pi"
    },
    "id": {
      "command": "id",
      "snippet": "id",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "imp": {
      "command": "imp",
      "snippet": "imp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "implies": {
      "command": "implies",
      "snippet": "implies",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚üπ",
      "documentation": "LONG RIGHTWARDS DOUBLE ARROW"
    },
    "inbag": {
      "command": "inbag",
      "snippet": "inbag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "infix{}": {
      "command": "infix{}",
      "snippet": "infix{${1:rel}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Init": {
      "command": "Init",
      "snippet": "Init",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "inj": {
      "command": "inj",
      "snippet": "inj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü£",
      "documentation": "righ z notation total injection"
    },
    "inseq": {
      "command": "inseq",
      "snippet": "inseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "instancein": {
      "command": "instancein",
      "snippet": "instancein",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "instantiates": {
      "command": "instantiates",
      "snippet": "instantiates",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "integer": {
      "command": "integer",
      "snippet": "integer",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "integral": {
      "command": "integral",
      "snippet": "integral",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "inter": {
      "command": "inter",
      "snippet": "inter",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "intercal": {
      "command": "intercal",
      "snippet": "intercal",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∫",
      "documentation": "intercal"
    },
    "interleave": {
      "command": "interleave",
      "snippet": "interleave",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´¥",
      "documentation": "TRIPLE VERTICAL BAR BINARY RELATION"
    },
    "inv": {
      "command": "inv",
      "snippet": "inv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ires": {
      "command": "ires",
      "snippet": "ires",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "isa": {
      "command": "isa",
      "snippet": "isa",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "islikea": {
      "command": "islikea",
      "snippet": "islikea",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "items": {
      "command": "items",
      "snippet": "items",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "iter": {
      "command": "iter",
      "snippet": "iter",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Join": {
      "command": "Join",
      "snippet": "Join",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®ù",
      "documentation": "JOIN"
    },
    "keyword{}": {
      "command": "keyword{}",
      "snippet": "keyword{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lang": {
      "command": "lang",
      "snippet": "lang",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ü™",
      "documentation": "MATHEMATICAL LEFT DOUBLE ANGLE BRACKET, z notation left chevron bracket"
    },
    "last": {
      "command": "last",
      "snippet": "last",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lbag": {
      "command": "lbag",
      "snippet": "lbag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ü¶",
      "documentation": "MATHEMATICAL LEFT WHITE SQUARE BRACKET"
    },
    "lblot": {
      "command": "lblot",
      "snippet": "lblot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶â",
      "documentation": "Z NOTATION LEFT BINDING BRACKET"
    },
    "LE": {
      "command": "LE",
      "snippet": "LE",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leadsto": {
      "command": "leadsto",
      "snippet": "leadsto",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§≥",
      "documentation": "WAVE ARROW POINTING DIRECTLY RIGHT"
    },
    "leftarrowtail": {
      "command": "leftarrowtail",
      "snippet": "leftarrowtail",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü¢",
      "documentation": "left arrow-tailed"
    },
    "leftleftarrows": {
      "command": "leftleftarrows",
      "snippet": "leftleftarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áá",
      "documentation": "two left arrows"
    },
    "leftrightarrows": {
      "command": "leftrightarrows",
      "snippet": "leftrightarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÜ",
      "documentation": "left arrow over right arrow"
    },
    "leftrightharpoons": {
      "command": "leftrightharpoons",
      "snippet": "leftrightharpoons",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áã",
      "documentation": "left harpoon over right"
    },
    "leftrightsquigarrow": {
      "command": "leftrightsquigarrow",
      "snippet": "leftrightsquigarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü≠",
      "documentation": "left and right arr-wavy"
    },
    "leftthreetimes": {
      "command": "leftthreetimes",
      "snippet": "leftthreetimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãã",
      "documentation": "LEFT SEMIDIRECT PRODUCT"
    },
    "leqq": {
      "command": "leqq",
      "snippet": "leqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â¶",
      "documentation": "less, double equals"
    },
    "leqslant": {
      "command": "leqslant",
      "snippet": "leqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©Ω",
      "documentation": "LESS-THAN OR SLANTED EQUAL TO"
    },
    "lessapprox": {
      "command": "lessapprox",
      "snippet": "lessapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™Ö",
      "documentation": "LESS-THAN OR APPROXIMATE"
    },
    "lessdot": {
      "command": "lessdot",
      "snippet": "lessdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãñ",
      "documentation": "less with dot"
    },
    "lesseqgtr": {
      "command": "lesseqgtr",
      "snippet": "lesseqgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãö",
      "documentation": "less, equals, greater"
    },
    "lesseqqgtr": {
      "command": "lesseqqgtr",
      "snippet": "lesseqqgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ã",
      "documentation": "LESS-THAN ABOVE DOUBLE-LINE EQUAL ABOVE GREATER-THAN"
    },
    "lessgtr": {
      "command": "lessgtr",
      "snippet": "lessgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∂",
      "documentation": "less, greater"
    },
    "lesssim": {
      "command": "lesssim",
      "snippet": "lesssim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â≤",
      "documentation": "less, similar"
    },
    "lhd": {
      "command": "lhd",
      "snippet": "lhd",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óÅ",
      "documentation": "(large) lef open; z notation domain restriction"
    },
    "limg": {
      "command": "limg",
      "snippet": "limg",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶á",
      "documentation": "Z NOTATION LEFT IMAGE BRACKET"
    },
    "llcorner": {
      "command": "llcorner",
      "snippet": "llcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åû",
      "documentation": "lower left corner"
    },
    "Lleftarrow": {
      "command": "Lleftarrow",
      "snippet": "Lleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áö",
      "documentation": "left triple arrow"
    },
    "lll": {
      "command": "lll",
      "snippet": "lll",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™°",
      "documentation": "DOUBLE NESTED LESS-THAN"
    },
    "llless": {
      "command": "llless",
      "snippet": "llless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lnapprox": {
      "command": "lnapprox",
      "snippet": "lnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™â",
      "documentation": "LESS-THAN AND NOT APPROXIMATE"
    },
    "lneq": {
      "command": "lneq",
      "snippet": "lneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™á",
      "documentation": "LESS-THAN AND SINGLE-LINE NOT EQUAL TO"
    },
    "lneqq": {
      "command": "lneqq",
      "snippet": "lneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â®",
      "documentation": "less, not double equals"
    },
    "lnsim": {
      "command": "lnsim",
      "snippet": "lnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã¶",
      "documentation": "less, not similar"
    },
    "looparrowleft": {
      "command": "looparrowleft",
      "snippet": "looparrowleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü´",
      "documentation": "left arrow-looped"
    },
    "looparrowright": {
      "command": "looparrowright",
      "snippet": "looparrowright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü¨",
      "documentation": "right arrow-looped"
    },
    "lozenge": {
      "command": "lozenge",
      "snippet": "lozenge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óä",
      "documentation": "LOZENGE or total mark"
    },
    "lrcorner": {
      "command": "lrcorner",
      "snippet": "lrcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åü",
      "documentation": "lower right corner"
    },
    "lsch": {
      "command": "lsch",
      "snippet": "lsch",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lseq": {
      "command": "lseq",
      "snippet": "lseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Lsh": {
      "command": "Lsh",
      "snippet": "Lsh",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∞",
      "documentation": "a: UPWARDS ARROW WITH TIP LEFTWARDS"
    },
    "ltimes": {
      "command": "ltimes",
      "snippet": "ltimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãâ",
      "documentation": "times sign, left closed"
    },
    "lvertneqq": {
      "command": "lvertneqq",
      "snippet": "lvertneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "map": {
      "command": "map",
      "snippet": "map",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "measuredangle": {
      "command": "measuredangle",
      "snippet": "measuredangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à°",
      "documentation": "MEASURED ANGLE"
    },
    "mem": {
      "command": "mem",
      "snippet": "mem",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "mho": {
      "command": "mho",
      "snippet": "mho",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñß",
      "documentation": "conductance"
    },
    "mod": {
      "command": "mod",
      "snippet": "mod",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "mono": {
      "command": "mono",
      "snippet": "mono",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimap": {
      "command": "multimap",
      "snippet": "multimap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∏",
      "documentation": "/MULTIMAP a:"
    },
    "napprox": {
      "command": "napprox",
      "snippet": "napprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ââ",
      "documentation": "not approximate"
    },
    "nat": {
      "command": "nat",
      "snippet": "nat",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "natone": {
      "command": "natone",
      "snippet": "natone",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ncong": {
      "command": "ncong",
      "snippet": "ncong",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âá",
      "documentation": "not congruent with"
    },
    "ndres": {
      "command": "ndres",
      "snippet": "ndres",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©§",
      "documentation": "Z NOTATION DOMAIN ANTIRESTRICTION"
    },
    "nem": {
      "command": "nem",
      "snippet": "nem",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nexi": {
      "command": "nexi",
      "snippet": "nexi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÑ",
      "documentation": "negated exists"
    },
    "nexists": {
      "command": "nexists",
      "snippet": "nexists",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÑ",
      "documentation": "negated exists"
    },
    "next": {
      "command": "next",
      "snippet": "next",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ngeq": {
      "command": "ngeq",
      "snippet": "ngeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â±",
      "documentation": "not greater-than-or-equal"
    },
    "ngeqq": {
      "command": "ngeqq",
      "snippet": "ngeqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ngeqslant": {
      "command": "ngeqslant",
      "snippet": "ngeqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â±",
      "documentation": "not greater-than-or-equal"
    },
    "ngtr": {
      "command": "ngtr",
      "snippet": "ngtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âØ",
      "documentation": "NOT GREATER-THAN"
    },
    "nleftarrow": {
      "command": "nleftarrow",
      "snippet": "nleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üö",
      "documentation": "not left arrow"
    },
    "nLeftarrow": {
      "command": "nLeftarrow",
      "snippet": "nLeftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áç",
      "documentation": "not implied by"
    },
    "nLeftrightarrow": {
      "command": "nLeftrightarrow",
      "snippet": "nLeftrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áé",
      "documentation": "not left and right double arrows"
    },
    "nleftrightarrow": {
      "command": "nleftrightarrow",
      "snippet": "nleftrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ÜÆ",
      "documentation": "not left and right arrow"
    },
    "nleq": {
      "command": "nleq",
      "snippet": "nleq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∞",
      "documentation": "not less-than-or-equal"
    },
    "nleqq": {
      "command": "nleqq",
      "snippet": "nleqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nleqslant": {
      "command": "nleqslant",
      "snippet": "nleqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∞",
      "documentation": "not less-than-or-equal"
    },
    "nless": {
      "command": "nless",
      "snippet": "nless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âÆ",
      "documentation": "NOT LESS-THAN"
    },
    "nmem": {
      "command": "nmem",
      "snippet": "nmem",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nmid": {
      "command": "nmid",
      "snippet": "nmid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à§",
      "documentation": "negated mid, DOES NOT DIVIDE"
    },
    "nparallel": {
      "command": "nparallel",
      "snippet": "nparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à¶",
      "documentation": "not parallel"
    },
    "nplus": {
      "command": "nplus",
      "snippet": "nplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nprec": {
      "command": "nprec",
      "snippet": "nprec",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÄ",
      "documentation": "not precedes"
    },
    "npreceq": {
      "command": "npreceq",
      "snippet": "npreceq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã†",
      "documentation": "DOES NOT PRECEDE OR EQUAL"
    },
    "nrightarrow": {
      "command": "nrightarrow",
      "snippet": "nrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üõ",
      "documentation": "not right arrow"
    },
    "nRightarrow": {
      "command": "nRightarrow",
      "snippet": "nRightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áè",
      "documentation": "not implies"
    },
    "nrres": {
      "command": "nrres",
      "snippet": "nrres",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©•",
      "documentation": "Z NOTATION RANGE ANTIRESTRICTION"
    },
    "nshortmid": {
      "command": "nshortmid",
      "snippet": "nshortmid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nshortparallel": {
      "command": "nshortparallel",
      "snippet": "nshortparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nsim": {
      "command": "nsim",
      "snippet": "nsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âÅ",
      "documentation": "not similar"
    },
    "nsubseteq": {
      "command": "nsubseteq",
      "snippet": "nsubseteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äà",
      "documentation": "no equals"
    },
    "nsubseteqq": {
      "command": "nsubseteqq",
      "snippet": "nsubseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nsucc": {
      "command": "nsucc",
      "snippet": "nsucc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÅ",
      "documentation": "not succeeds"
    },
    "nsucceq": {
      "command": "nsucceq",
      "snippet": "nsucceq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã°",
      "documentation": "no curly equals"
    },
    "nsupseteq": {
      "command": "nsupseteq",
      "snippet": "nsupseteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äâ",
      "documentation": "no equals"
    },
    "nsupseteqq": {
      "command": "nsupseteqq",
      "snippet": "nsupseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ntriangleleft": {
      "command": "ntriangleleft",
      "snippet": "ntriangleleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã™",
      "documentation": "not left triangle"
    },
    "ntrianglelefteq": {
      "command": "ntrianglelefteq",
      "snippet": "ntrianglelefteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã¨",
      "documentation": "not lef equals"
    },
    "ntriangleright": {
      "command": "ntriangleright",
      "snippet": "ntriangleright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã´",
      "documentation": "not right triangle"
    },
    "ntrianglerighteq": {
      "command": "ntrianglerighteq",
      "snippet": "ntrianglerighteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã≠",
      "documentation": "not righ equals"
    },
    "num": {
      "command": "num",
      "snippet": "num",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nvdash": {
      "command": "nvdash",
      "snippet": "nvdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä¨",
      "documentation": "no dash"
    },
    "nVdash": {
      "command": "nVdash",
      "snippet": "nVdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÆ",
      "documentation": "not double ver dash"
    },
    "nvDash": {
      "command": "nvDash",
      "snippet": "nvDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä≠",
      "documentation": "no double dash"
    },
    "nVDash": {
      "command": "nVDash",
      "snippet": "nVDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äØ",
      "documentation": "not double vert, double dash"
    },
    "partitions": {
      "command": "partitions",
      "snippet": "partitions",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "pfun": {
      "command": "pfun",
      "snippet": "pfun",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á∏",
      "documentation": "RIGHTWARDS ARROW WITH VERTICAL STROKE, z notation partial function"
    },
    "pinj": {
      "command": "pinj",
      "snippet": "pinj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§î",
      "documentation": "RIGHTWARDS ARROW WITH TAIL WITH VERTICAL STROKE, z notation partial injection"
    },
    "pitchfork": {
      "command": "pitchfork",
      "snippet": "pitchfork",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãî",
      "documentation": "PITCHFORK"
    },
    "porder": {
      "command": "porder",
      "snippet": "porder",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "post": {
      "command": "post",
      "snippet": "post",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "power": {
      "command": "power",
      "snippet": "power",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "PR": {
      "command": "PR",
      "snippet": "PR",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "pre": {
      "command": "pre",
      "snippet": "pre",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "precapprox": {
      "command": "precapprox",
      "snippet": "precapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∑",
      "documentation": "PRECEDES ABOVE ALMOST EQUAL TO"
    },
    "preccurlyeq": {
      "command": "preccurlyeq",
      "snippet": "preccurlyeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âº",
      "documentation": "precedes, curly equals"
    },
    "precnapprox": {
      "command": "precnapprox",
      "snippet": "precnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™π",
      "documentation": "PRECEDES ABOVE NOT ALMOST EQUAL TO"
    },
    "precneqq": {
      "command": "precneqq",
      "snippet": "precneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™µ",
      "documentation": "PRECEDES ABOVE NOT EQUAL TO"
    },
    "precnsim": {
      "command": "precnsim",
      "snippet": "precnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã®",
      "documentation": "precedes, not similar"
    },
    "precsim": {
      "command": "precsim",
      "snippet": "precsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âæ",
      "documentation": "precedes, similar"
    },
    "pred": {
      "command": "pred",
      "snippet": "pred",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "prefix": {
      "command": "prefix",
      "snippet": "prefix",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "previously": {
      "command": "previously",
      "snippet": "previously",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "product": {
      "command": "product",
      "snippet": "product",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "project": {
      "command": "project",
      "snippet": "project",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®°",
      "documentation": "Z NOTATION SCHEMA PROJECTION"
    },
    "pset": {
      "command": "pset",
      "snippet": "pset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "psetone": {
      "command": "psetone",
      "snippet": "psetone",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "psubs": {
      "command": "psubs",
      "snippet": "psubs",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "psups": {
      "command": "psups",
      "snippet": "psups",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "psur": {
      "command": "psur",
      "snippet": "psur",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§Ä",
      "documentation": "RIGHTWARDS TWO-HEADED ARROW WITH VERTICAL STROKE, z notation partial surjection"
    },
    "psurj": {
      "command": "psurj",
      "snippet": "psurj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§Ä",
      "documentation": "RIGHTWARDS TWO-HEADED ARROW WITH VERTICAL STROKE, z notation partial surjection"
    },
    "qed": {
      "command": "qed",
      "snippet": "qed",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Qed": {
      "command": "Qed",
      "snippet": "Qed",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "QED": {
      "command": "QED",
      "snippet": "QED",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àé",
      "documentation": "END OF PROOF"
    },
    "ran": {
      "command": "ran",
      "snippet": "ran",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rang": {
      "command": "rang",
      "snippet": "rang",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ü´",
      "documentation": "MATHEMATICAL RIGHT DOUBLE ANGLE BRACKET, z notation right chevron bracket"
    },
    "rbag": {
      "command": "rbag",
      "snippet": "rbag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚üß",
      "documentation": "MATHEMATICAL RIGHT WHITE SQUARE BRACKET"
    },
    "rblot": {
      "command": "rblot",
      "snippet": "rblot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶ä",
      "documentation": "Z NOTATION RIGHT BINDING BRACKET"
    },
    "refines": {
      "command": "refines",
      "snippet": "refines",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rel": {
      "command": "rel",
      "snippet": "rel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üî",
      "documentation": "LEFT RIGHT ARROW, z notation relation"
    },
    "restriction": {
      "command": "restriction",
      "snippet": "restriction",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üæ",
      "documentation": "a: up harpoon-right"
    },
    "rev": {
      "command": "rev",
      "snippet": "rev",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rhd": {
      "command": "rhd",
      "snippet": "rhd",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñ∑",
      "documentation": "(large) righ open; z notation range restriction"
    },
    "rightarrowtail": {
      "command": "rightarrowtail",
      "snippet": "rightarrowtail",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü£",
      "documentation": "righ z notation total injection"
    },
    "rightleftarrows": {
      "command": "rightleftarrows",
      "snippet": "rightleftarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÑ",
      "documentation": "right arrow over left arrow"
    },
    "rightrightarrows": {
      "command": "rightrightarrows",
      "snippet": "rightrightarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áâ",
      "documentation": "two right arrows"
    },
    "rightsquigarrow": {
      "command": "rightsquigarrow",
      "snippet": "rightsquigarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áù",
      "documentation": "RIGHTWARDS SQUIGGLE ARROW"
    },
    "rightthreetimes": {
      "command": "rightthreetimes",
      "snippet": "rightthreetimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãå",
      "documentation": "RIGHT SEMIDIRECT PRODUCT"
    },
    "rimg": {
      "command": "rimg",
      "snippet": "rimg",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶à",
      "documentation": "Z NOTATION RIGHT IMAGE BRACKET"
    },
    "risingdotseq": {
      "command": "risingdotseq",
      "snippet": "risingdotseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âì",
      "documentation": "equals, rising dots"
    },
    "rres": {
      "command": "rres",
      "snippet": "rres",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñ∑",
      "documentation": "(large) righ open; z notation range restriction"
    },
    "Rrightarrow": {
      "command": "Rrightarrow",
      "snippet": "Rrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áõ",
      "documentation": "right triple arrow"
    },
    "rsch": {
      "command": "rsch",
      "snippet": "rsch",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rseq": {
      "command": "rseq",
      "snippet": "rseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Rsh": {
      "command": "Rsh",
      "snippet": "Rsh",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü±",
      "documentation": "a: UPWARDS ARROW WITH TIP RIGHTWARDS"
    },
    "rsub": {
      "command": "rsub",
      "snippet": "rsub",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©•",
      "documentation": "Z NOTATION RANGE ANTIRESTRICTION"
    },
    "rtcl": {
      "command": "rtcl",
      "snippet": "rtcl",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rtimes": {
      "command": "rtimes",
      "snippet": "rtimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãä",
      "documentation": "times sign, right closed"
    },
    "sdef": {
      "command": "sdef",
      "snippet": "sdef",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âô",
      "documentation": "corresponds to (wedge over equals)"
    },
    "semi": {
      "command": "semi",
      "snippet": "semi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®ü",
      "documentation": "Z NOTATION SCHEMA COMPOSITION"
    },
    "seq": {
      "command": "seq",
      "snippet": "seq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "seqone": {
      "command": "seqone",
      "snippet": "seqone",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "shortinterleave": {
      "command": "shortinterleave",
      "snippet": "shortinterleave",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "shortmid": {
      "command": "shortmid",
      "snippet": "shortmid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "shortparallel": {
      "command": "shortparallel",
      "snippet": "shortparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "shows": {
      "command": "shows",
      "snippet": "shows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "smallfrown": {
      "command": "smallfrown",
      "snippet": "smallfrown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "smallsetminus": {
      "command": "smallsetminus",
      "snippet": "smallsetminus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àñ",
      "documentation": "small SET MINUS (cf. reverse solidus)"
    },
    "smallsmile": {
      "command": "smallsmile",
      "snippet": "smallsmile",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sphericalangle": {
      "command": "sphericalangle",
      "snippet": "sphericalangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à¢",
      "documentation": "SPHERICAL ANGLE"
    },
    "spot": {
      "command": "spot",
      "snippet": "spot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶Å",
      "documentation": "Z NOTATION SPOT"
    },
    "sqsubset": {
      "command": "sqsubset",
      "snippet": "sqsubset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äè",
      "documentation": "square subset"
    },
    "sqsupset": {
      "command": "sqsupset",
      "snippet": "sqsupset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äê",
      "documentation": "square superset"
    },
    "square": {
      "command": "square",
      "snippet": "square",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¨ú",
      "documentation": "WHITE LARGE SQUARE"
    },
    "squash": {
      "command": "squash",
      "snippet": "squash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sres": {
      "command": "sres",
      "snippet": "sres",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "subclass": {
      "command": "subclass",
      "snippet": "subclass",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "subs": {
      "command": "subs",
      "snippet": "subs",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Subset": {
      "command": "Subset",
      "snippet": "Subset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãê",
      "documentation": "DOUBLE SUBSET"
    },
    "subseteqq": {
      "command": "subseteqq",
      "snippet": "subseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´Ö",
      "documentation": "SUBSET OF ABOVE EQUALS SIGN"
    },
    "subsetneq": {
      "command": "subsetneq",
      "snippet": "subsetneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ää",
      "documentation": "subset, not equals"
    },
    "subsetneqq": {
      "command": "subsetneqq",
      "snippet": "subsetneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´ã",
      "documentation": "SUBSET OF ABOVE NOT EQUAL TO"
    },
    "subtype": {
      "command": "subtype",
      "snippet": "subtype",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "subtypeeq": {
      "command": "subtypeeq",
      "snippet": "subtypeeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "succapprox": {
      "command": "succapprox",
      "snippet": "succapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∏",
      "documentation": "SUCCEEDS ABOVE ALMOST EQUAL TO"
    },
    "succcurlyeq": {
      "command": "succcurlyeq",
      "snippet": "succcurlyeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âΩ",
      "documentation": "succeeds, curly equals"
    },
    "succnapprox": {
      "command": "succnapprox",
      "snippet": "succnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∫",
      "documentation": "SUCCEEDS ABOVE NOT ALMOST EQUAL TO"
    },
    "succneqq": {
      "command": "succneqq",
      "snippet": "succneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∂",
      "documentation": "SUCCEEDS ABOVE NOT EQUAL TO"
    },
    "succnsim": {
      "command": "succnsim",
      "snippet": "succnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã©",
      "documentation": "succeeds, not similar"
    },
    "succsim": {
      "command": "succsim",
      "snippet": "succsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âø",
      "documentation": "succeeds, similar"
    },
    "suffix": {
      "command": "suffix",
      "snippet": "suffix",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "supclass": {
      "command": "supclass",
      "snippet": "supclass",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sups": {
      "command": "sups",
      "snippet": "sups",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Supset": {
      "command": "Supset",
      "snippet": "Supset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãë",
      "documentation": "DOUBLE SUPERSET"
    },
    "supseteqq": {
      "command": "supseteqq",
      "snippet": "supseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´Ü",
      "documentation": "SUPERSET OF ABOVE EQUALS SIGN"
    },
    "supsetneq": {
      "command": "supsetneq",
      "snippet": "supsetneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äã",
      "documentation": "superset, not equals"
    },
    "supsetneqq": {
      "command": "supsetneqq",
      "snippet": "supsetneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´å",
      "documentation": "SUPERSET OF ABOVE NOT EQUAL TO"
    },
    "suptype": {
      "command": "suptype",
      "snippet": "suptype",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "suptypeeq": {
      "command": "suptypeeq",
      "snippet": "suptypeeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "surj": {
      "command": "surj",
      "snippet": "surj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü†",
      "documentation": "right two-headed arrow, z notation total surjection"
    },
    "tail": {
      "command": "tail",
      "snippet": "tail",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "tcl": {
      "command": "tcl",
      "snippet": "tcl",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "tfun": {
      "command": "tfun",
      "snippet": "tfun",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üí",
      "documentation": "rightward arrow, z notation total function"
    },
    "TH": {
      "command": "TH",
      "snippet": "TH",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "therefore": {
      "command": "therefore",
      "snippet": "therefore",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à¥",
      "documentation": "THEREFORE"
    },
    "thickapprox": {
      "command": "thickapprox",
      "snippet": "thickapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "thicksim": {
      "command": "thicksim",
      "snippet": "thicksim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "thrm": {
      "command": "thrm",
      "snippet": "thrm",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "tinj": {
      "command": "tinj",
      "snippet": "tinj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü£",
      "documentation": "righ z notation total injection"
    },
    "torder": {
      "command": "torder",
      "snippet": "torder",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "triangledown": {
      "command": "triangledown",
      "snippet": "triangledown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñø",
      "documentation": "WHITE DOWN-POINTING SMALL TRIANGLE"
    },
    "trianglelefteq": {
      "command": "trianglelefteq",
      "snippet": "trianglelefteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä¥",
      "documentation": "lef equals"
    },
    "triangleq": {
      "command": "triangleq",
      "snippet": "triangleq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âú",
      "documentation": "equals"
    },
    "trianglerighteq": {
      "command": "trianglerighteq",
      "snippet": "trianglerighteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äµ",
      "documentation": "righ equals"
    },
    "true": {
      "command": "true",
      "snippet": "true",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "tsur": {
      "command": "tsur",
      "snippet": "tsur",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü†",
      "documentation": "right two-headed arrow, z notation total surjection"
    },
    "twoheadleftarrow": {
      "command": "twoheadleftarrow",
      "snippet": "twoheadleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üû",
      "documentation": "left two-headed arrow"
    },
    "twoheadrightarrow": {
      "command": "twoheadrightarrow",
      "snippet": "twoheadrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü†",
      "documentation": "right two-headed arrow, z notation total surjection"
    },
    "ulcorner": {
      "command": "ulcorner",
      "snippet": "ulcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åú",
      "documentation": "upper left corner"
    },
    "underboldword{}": {
      "command": "underboldword{}",
      "snippet": "underboldword{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "underkeyword{}": {
      "command": "underkeyword{}",
      "snippet": "underkeyword{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "underword{}": {
      "command": "underword{}",
      "snippet": "underword{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "uni": {
      "command": "uni",
      "snippet": "uni",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "union": {
      "command": "union",
      "snippet": "union",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "unlhd": {
      "command": "unlhd",
      "snippet": "unlhd",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä¥",
      "documentation": "lef equals"
    },
    "unrhd": {
      "command": "unrhd",
      "snippet": "unrhd",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äµ",
      "documentation": "righ equals"
    },
    "upharpoonleft": {
      "command": "upharpoonleft",
      "snippet": "upharpoonleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üø",
      "documentation": "up harpoon-left"
    },
    "upharpoonright": {
      "command": "upharpoonright",
      "snippet": "upharpoonright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üæ",
      "documentation": "a: up harpoon-right"
    },
    "uptilnow": {
      "command": "uptilnow",
      "snippet": "uptilnow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "upto": {
      "command": "upto",
      "snippet": "upto",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "upuparrows": {
      "command": "upuparrows",
      "snippet": "upuparrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áà",
      "documentation": "two up arrows"
    },
    "urcorner": {
      "command": "urcorner",
      "snippet": "urcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åù",
      "documentation": "upper right corner"
    },
    "varkappa": {
      "command": "varkappa",
      "snippet": "varkappa",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "ùúò",
      "documentation": "MATHEMATICAL ITALIC KAPPA SYMBOL"
    },
    "varnothing": {
      "command": "varnothing",
      "snippet": "varnothing",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÖ",
      "documentation": "circle, slash"
    },
    "varpropto": {
      "command": "varpropto",
      "snippet": "varpropto",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsdef": {
      "command": "varsdef",
      "snippet": "varsdef",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âú",
      "documentation": "equals"
    },
    "vartriangle": {
      "command": "vartriangle",
      "snippet": "vartriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñµ",
      "documentation": "small up open"
    },
    "vartriangleleft": {
      "command": "vartriangleleft",
      "snippet": "vartriangleleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä≤",
      "documentation": "lef open, variant"
    },
    "vartriangleright": {
      "command": "vartriangleright",
      "snippet": "vartriangleright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä≥",
      "documentation": "righ open, variant"
    },
    "Vdash": {
      "command": "Vdash",
      "snippet": "Vdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä©",
      "documentation": "double ver dash"
    },
    "vDash": {
      "command": "vDash",
      "snippet": "vDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä®",
      "documentation": "TRUE (ver double dash)"
    },
    "veebar": {
      "command": "veebar",
      "snippet": "veebar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äª",
      "documentation": "logical or, bar below (large vee); exclusive disjunction"
    },
    "Vvdash": {
      "command": "Vvdash",
      "snippet": "Vvdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä™",
      "documentation": "triple ver dash"
    },
    "weakrefine": {
      "command": "weakrefine",
      "snippet": "weakrefine",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "weaksubclass": {
      "command": "weaksubclass",
      "snippet": "weaksubclass",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "weaksupclass": {
      "command": "weaksupclass",
      "snippet": "weaksupclass",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "word{}": {
      "command": "word{}",
      "snippet": "word{${1:word}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "xprec": {
      "command": "xprec",
      "snippet": "xprec",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "xsucc": {
      "command": "xsucc",
      "snippet": "xsucc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zall": {
      "command": "zall",
      "snippet": "zall",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zand": {
      "command": "zand",
      "snippet": "zand",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zbar": {
      "command": "zbar",
      "snippet": "zbar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zbig{}": {
      "command": "zbig{}",
      "snippet": "zbig{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zBig{}": {
      "command": "zBig{}",
      "snippet": "zBig{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zBIG{}": {
      "command": "zBIG{}",
      "snippet": "zBIG{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zcmp": {
      "command": "zcmp",
      "snippet": "zcmp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®ü",
      "documentation": "Z NOTATION SCHEMA COMPOSITION"
    },
    "zeq": {
      "command": "zeq",
      "snippet": "zeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zexi": {
      "command": "zexi",
      "snippet": "zexi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zfor": {
      "command": "zfor",
      "snippet": "zfor",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zhide": {
      "command": "zhide",
      "snippet": "zhide",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßπ",
      "documentation": "BIG REVERSE SOLIDUS, z notation schema hiding"
    },
    "zimp": {
      "command": "zimp",
      "snippet": "zimp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zin": {
      "command": "zin",
      "snippet": "zin",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zlet": {
      "command": "zlet",
      "snippet": "zlet",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "znot": {
      "command": "znot",
      "snippet": "znot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zor": {
      "command": "zor",
      "snippet": "zor",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zovr": {
      "command": "zovr",
      "snippet": "zovr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zpipe": {
      "command": "zpipe",
      "snippet": "zpipe",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®†",
      "documentation": "Z NOTATION SCHEMA PIPING"
    },
    "zproject": {
      "command": "zproject",
      "snippet": "zproject",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®°",
      "documentation": "Z NOTATION SCHEMA PROJECTION"
    },
    "zsmall{}": {
      "command": "zsmall{}",
      "snippet": "zsmall{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zSmall{}": {
      "command": "zSmall{}",
      "snippet": "zSmall{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zwhere": {
      "command": "zwhere",
      "snippet": "zwhere",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Aux": {
      "command": "Aux",
      "snippet": "Aux",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "bbold{}": {
      "command": "bbold{}",
      "snippet": "bbold{${1:text%plain}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "childof": {
      "command": "childof",
      "snippet": "childof",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "cid": {
      "command": "cid",
      "snippet": "cid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "classbreak": {
      "command": "classbreak",
      "snippet": "classbreak",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "classuni": {
      "command": "classuni",
      "snippet": "classuni",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "cnj": {
      "command": "cnj",
      "snippet": "cnj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "cond": {
      "command": "cond",
      "snippet": "cond",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "contained": {
      "command": "contained",
      "snippet": "contained",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dcnj": {
      "command": "dcnj",
      "snippet": "dcnj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "defines": {
      "command": "defines",
      "snippet": "defines",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Derive": {
      "command": "Derive",
      "snippet": "Derive",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dgch": {
      "command": "dgch",
      "snippet": "dgch",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diff": {
      "command": "diff",
      "snippet": "diff",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "docdate": {
      "command": "docdate",
      "snippet": "docdate",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dparallel": {
      "command": "dparallel",
      "snippet": "dparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dpll": {
      "command": "dpll",
      "snippet": "dpll",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dplo": {
      "command": "dplo",
      "snippet": "dplo",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dsqc": {
      "command": "dsqc",
      "snippet": "dsqc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "eid": {
      "command": "eid",
      "snippet": "eid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "enh": {
      "command": "enh",
      "snippet": "enh",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "env": {
      "command": "env",
      "snippet": "env",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "f{}": {
      "command": "f{}",
      "snippet": "f{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "filedate": {
      "command": "filedate",
      "snippet": "filedate",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fileversion": {
      "command": "fileversion",
      "snippet": "fileversion",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "flushr{}": {
      "command": "flushr{}",
      "snippet": "flushr{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "forcepagepenalty": {
      "command": "forcepagepenalty",
      "snippet": "forcepagepenalty",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fuzzcompatible": {
      "command": "fuzzcompatible",
      "snippet": "fuzzcompatible",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "gch": {
      "command": "gch",
      "snippet": "gch",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "HOLE": {
      "command": "HOLE",
      "snippet": "HOLE",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ifleftnames": {
      "command": "ifleftnames",
      "snippet": "ifleftnames",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "IMP": {
      "command": "IMP",
      "snippet": "IMP",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "import": {
      "command": "import",
      "snippet": "import",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "inherits": {
      "command": "inherits",
      "snippet": "inherits",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Internal": {
      "command": "Internal",
      "snippet": "Internal",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "interzedlinepenalty": {
      "command": "interzedlinepenalty",
      "snippet": "interzedlinepenalty",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "invisibility": {
      "command": "invisibility",
      "snippet": "invisibility",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "iseq": {
      "command": "iseq",
      "snippet": "iseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "isub": {
      "command": "isub",
      "snippet": "isub",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "landd": {
      "command": "landd",
      "snippet": "landd",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ldata": {
      "command": "ldata",
      "snippet": "ldata",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftnamesfalse": {
      "command": "leftnamesfalse",
      "snippet": "leftnamesfalse",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftnamestrue": {
      "command": "leftnamestrue",
      "snippet": "leftnamestrue",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nexim": {
      "command": "nexim",
      "snippet": "nexim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "oid": {
      "command": "oid",
      "snippet": "oid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ozit{}": {
      "command": "ozit{}",
      "snippet": "ozit{${1:text%plain}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "p{}": {
      "command": "p{}",
      "snippet": "p{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "parentof": {
      "command": "parentof",
      "snippet": "parentof",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "partition": {
      "command": "partition",
      "snippet": "partition",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "pll": {
      "command": "pll",
      "snippet": "pll",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "plo": {
      "command": "plo",
      "snippet": "plo",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "poly": {
      "command": "poly",
      "snippet": "poly",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "preboxpenalty": {
      "command": "preboxpenalty",
      "snippet": "preboxpenalty",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "qua": {
      "command": "qua",
      "snippet": "qua",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rdata": {
      "command": "rdata",
      "snippet": "rdata",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "redef": {
      "command": "redef",
      "snippet": "redef",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rename": {
      "command": "rename",
      "snippet": "rename",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sdefs": {
      "command": "sdefs",
      "snippet": "sdefs",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "self": {
      "command": "self",
      "snippet": "self",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "semicolon": {
      "command": "semicolon",
      "snippet": "semicolon",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": ";",
      "documentation": "SEMICOLON p:"
    },
    "semid": {
      "command": "semid",
      "snippet": "semid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "seqi": {
      "command": "seqi",
      "snippet": "seqi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sid": {
      "command": "sid",
      "snippet": "sid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sqc": {
      "command": "sqc",
      "snippet": "sqc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sset": {
      "command": "sset",
      "snippet": "sset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ssub": {
      "command": "ssub",
      "snippet": "ssub",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "subseq": {
      "command": "subseq",
      "snippet": "subseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "visibility": {
      "command": "visibility",
      "snippet": "visibility",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "weakdefine": {
      "command": "weakdefine",
      "snippet": "weakdefine",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "widen{}": {
      "command": "widen{}",
      "snippet": "widen{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "xexists": {
      "command": "xexists",
      "snippet": "xexists",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "xforall": {
      "command": "xforall",
      "snippet": "xforall",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "xlambda": {
      "command": "xlambda",
      "snippet": "xlambda",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "xmu": {
      "command": "xmu",
      "snippet": "xmu",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedbaselineskip": {
      "command": "zedbaselineskip",
      "snippet": "zedbaselineskip",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zedline": {
      "command": "zedline",
      "snippet": "zedline",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zimg{}": {
      "command": "zimg{}",
      "snippet": "zimg{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zimgset{}": {
      "command": "zimgset{}",
      "snippet": "zimgset{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zsch{}": {
      "command": "zsch{}",
      "snippet": "zsch{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zseq{}": {
      "command": "zseq{}",
      "snippet": "zseq{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zset{}": {
      "command": "zset{}",
      "snippet": "zset{${1:arg}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zstrut": {
      "command": "zstrut",
      "snippet": "zstrut",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zstrutbox": {
      "command": "zstrutbox",
      "snippet": "zstrutbox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    }
  },
  "envs": {
    "argue": {
      "name": "argue",
      "detail": "argue",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "axdef": {
      "name": "axdef",
      "detail": "axdef",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "class{}": {
      "name": "class",
      "detail": "class{}",
      "snippet": "{${1:name}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "classcom": {
      "name": "classcom",
      "detail": "classcom",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "gendef{}": {
      "name": "gendef",
      "detail": "gendef{}",
      "snippet": "{${1:term}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "genschema{}{}": {
      "name": "genschema",
      "detail": "genschema{}{}",
      "snippet": "{${1:name}}{${2:resource}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "infrule": {
      "name": "infrule",
      "detail": "infrule",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "init": {
      "name": "init",
      "detail": "init",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "op{}": {
      "name": "op",
      "detail": "op{}",
      "snippet": "{${1:name}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "schema{}": {
      "name": "schema",
      "detail": "schema{}",
      "snippet": "{${1:name}}",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sidebyside": {
      "name": "sidebyside",
      "detail": "sidebyside",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sidebyside[]": {
      "name": "sidebyside",
      "detail": "sidebyside[]",
      "snippet": "[${1:columns}]",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "state": {
      "name": "state",
      "detail": "state",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "syntax": {
      "name": "syntax",
      "detail": "syntax",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "uniqdef": {
      "name": "uniqdef",
      "detail": "uniqdef",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zed": {
      "name": "zed",
      "detail": "zed",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "zpar": {
      "name": "zpar",
      "detail": "zpar",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "const": {
      "name": "const",
      "detail": "const",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "gengendef": {
      "name": "gengendef",
      "detail": "gengendef",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "proof": {
      "name": "proof",
      "detail": "proof",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "qzed": {
      "name": "qzed",
      "detail": "qzed",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "type": {
      "name": "type",
      "detail": "type",
      "snippet": "",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    }
  },
  "options": []
}