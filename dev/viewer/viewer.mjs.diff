diff --git a/../../web/viewer.mjs b/../viewer/viewer.mjs
index 28fdb8765..f327f44d6 100644
--- a/../../web/viewer.mjs
+++ b/../viewer/viewer.mjs
@@ -1121,7 +1121,7 @@ class Localization {
       if (typeof console !== "undefined") {
         const locale = bundle.locales[0];
         const ids = Array.from(missingIds).join(", ");
-        console.warn(`[fluent] Missing translations in ${locale}: ${ids}`);
+        // console.warn(`[fluent] Missing translations in ${locale}: ${ids}`);
       }
     }
     if (!hasAtLeastOneBundle && typeof console !== "undefined") {
@@ -2551,7 +2551,7 @@ const PDFViewerApplication = {
         title = url;
       }
     }
-    this.setTitle(title);
+    // this.setTitle(title);
   },
   setTitle(title = this._title) {
     this._title = title;
@@ -2998,7 +2998,7 @@ const PDFViewerApplication = {
     this.metadata = metadata;
     this._contentDispositionFilename ??= contentDispositionFilename;
     this._contentLength ??= contentLength;
-    console.log(`PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} ` + `${(info.Producer || "-").trim()} / ${(info.Creator || "-").trim()}] ` + `(PDF.js: ${pdfjs_lib__WEBPACK_IMPORTED_MODULE_1__.version || "?"} [${pdfjs_lib__WEBPACK_IMPORTED_MODULE_1__.build || "?"}])`);
+    // console.log(`PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} ` + `${(info.Producer || "-").trim()} / ${(info.Creator || "-").trim()}] ` + `(PDF.js: ${pdfjs_lib__WEBPACK_IMPORTED_MODULE_1__.version || "?"} [${pdfjs_lib__WEBPACK_IMPORTED_MODULE_1__.build || "?"}])`);
     let pdfTitle = info.Title;
     const metadataTitle = metadata?.get("dc:title");
     if (metadataTitle) {
@@ -3129,9 +3129,9 @@ const PDFViewerApplication = {
     this.pdfSidebar?.setInitialView(sidebarView);
     setViewerModes(scrollMode, spreadMode);
     if (this.initialBookmark) {
-      setRotation(this.initialRotation);
+      // setRotation(this.initialRotation);
       delete this.initialRotation;
-      this.pdfLinkService.setHash(this.initialBookmark);
+      // this.pdfLinkService.setHash(this.initialBookmark);
       this.initialBookmark = null;
     } else if (storedHash) {
       setRotation(rotation);
@@ -4558,7 +4558,7 @@ const defaultOptions = {
     kind: OptionKind.API
   },
   cMapUrl: {
-    value: "../web/cmaps/",
+    value: "../cmaps/",
     kind: OptionKind.API
   },
   disableAutoFetch: {
@@ -4606,7 +4606,7 @@ const defaultOptions = {
     kind: OptionKind.API
   },
   standardFontDataUrl: {
-    value: "../web/standard_fonts/",
+    value: "../standard_fonts/",
     kind: OptionKind.API
   },
   verbosity: {
@@ -4618,7 +4618,7 @@ const defaultOptions = {
     kind: OptionKind.WORKER
   },
   workerSrc: {
-    value: "../build/pdf.worker.mjs",
+    value: "./build/pdf.worker.mjs",
     kind: OptionKind.WORKER
   }
 };
@@ -4628,7 +4628,7 @@ const defaultOptions = {
     kind: OptionKind.VIEWER
   };
   defaultOptions.sandboxBundleSrc = {
-    value: "../build/pdf.sandbox.mjs",
+    value: "./build/pdf.sandbox.mjs",
     kind: OptionKind.VIEWER
   };
   defaultOptions.viewerCssTheme = {
@@ -5388,11 +5388,11 @@ var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_gen
 function initCom(app) {}
 class Preferences extends _preferences_js__WEBPACK_IMPORTED_MODULE_1__.BasePreferences {
   async _writeToStorage(prefObj) {
-    localStorage.setItem("pdfjs.preferences", JSON.stringify(prefObj));
+    // localStorage.setItem("pdfjs.preferences", JSON.stringify(prefObj));
   }
   async _readFromStorage(prefObj) {
     return {
-      prefs: JSON.parse(localStorage.getItem("pdfjs.preferences"))
+      prefs: undefined // JSON.parse(localStorage.getItem("pdfjs.preferences"))
     };
   }
 }
@@ -6571,7 +6571,7 @@ const FindState = {
   PENDING: 3
 };
 const FIND_TIMEOUT = 250;
-const MATCH_SCROLL_OFFSET_TOP = -50;
+const MATCH_SCROLL_OFFSET_TOP = -100;
 const MATCH_SCROLL_OFFSET_LEFT = -400;
 const CHARACTERS_TO_NORMALIZE = {
   "\u2010": "-",
@@ -9923,6 +9923,9 @@ function renderProgress(index, total) {
 }
 window.addEventListener("keydown", function (event) {
   if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) {
+    if (window.parent !== window) {
+      return;
+    }
     window.print();
     event.preventDefault();
     event.stopImmediatePropagation();
@@ -10549,7 +10552,7 @@ class PDFSidebar {
       this.#dispatchEvent();
       return;
     }
-    this.switchView(view, true);
+    this.switchView(view, false);
     if (!this.isInitialEventDispatched) {
       this.#dispatchEvent();
     }
@@ -11460,7 +11463,7 @@ class PDFViewer {
     this.#enableHighlightFloatingButton = options.enableHighlightFloatingButton === true;
     this.imageResourcesPath = options.imageResourcesPath || "";
     this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;
-    this.removePageBorders = options.removePageBorders || false;
+    this.removePageBorders = options.removePageBorders || true;
     this.maxCanvasPixels = options.maxCanvasPixels;
     this.l10n = options.l10n;
     this.l10n ||= new web_null_l10n__WEBPACK_IMPORTED_MODULE_2__.GenericL10n();
@@ -11762,6 +11765,7 @@ class PDFViewer {
     }
   }
   setDocument(pdfDocument) {
+    const oldScale = lwRecordRender(this);
     if (this.pdfDocument) {
       this.eventBus.dispatch("pagesdestroy", {
         source: this
@@ -11818,7 +11822,7 @@ class PDFViewer {
       this._onAfterDraw = null;
     };
     this.eventBus._on("pagerendered", this._onAfterDraw);
-    Promise.all([firstPagePromise, permissionsPromise]).then(([firstPdfPage, permissions]) => {
+    Promise.all([firstPagePromise, permissionsPromise]).then(async ([firstPdfPage, permissions]) => {
       if (pdfDocument !== this.pdfDocument) {
         return;
       }
@@ -11852,7 +11856,7 @@ class PDFViewer {
         }
       }
       const viewerElement = this._scrollMode === _ui_utils_js__WEBPACK_IMPORTED_MODULE_1__.ScrollMode.PAGE ? null : this.viewer;
-      const scale = this.currentScale;
+      this._currentScale = oldScale; const scale = oldScale ? oldScale : this.currentScale;
       const viewport = firstPdfPage.getViewport({
         scale: scale * pdfjs_lib__WEBPACK_IMPORTED_MODULE_0__.PixelsPerInch.PDF_TO_CSS_UNITS
       });
@@ -11881,6 +11885,7 @@ class PDFViewer {
         this._pages.push(pageView);
       }
       this._pages[0]?.setPdfPage(firstPdfPage);
+      await lwRenderSync(this, pdfDocument, pagesCount);
       if (this._scrollMode === _ui_utils_js__WEBPACK_IMPORTED_MODULE_1__.ScrollMode.PAGE) {
         this.#ensurePageViewVisible();
       } else if (this._spreadMode !== _ui_utils_js__WEBPACK_IMPORTED_MODULE_1__.SpreadMode.NONE) {
@@ -11969,7 +11974,7 @@ class PDFViewer {
     this._pages = [];
     this._currentPageNumber = 1;
     this._currentScale = _ui_utils_js__WEBPACK_IMPORTED_MODULE_1__.UNKNOWN_SCALE;
-    this._currentScaleValue = null;
+    // this._currentScaleValue = null;
     this._pageLabels = null;
     this.#buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);
     this._location = null;
@@ -11998,7 +12003,7 @@ class PDFViewer {
       document.removeEventListener("visibilitychange", this.#onVisibilityChange);
       this.#onVisibilityChange = null;
     }
-    this.viewer.textContent = "";
+    // this.viewer.textContent = "";
     this._updateScrollMode();
     this.viewer.removeAttribute("lang");
     if (this.#hiddenCopyElement) {
@@ -12174,8 +12179,8 @@ class PDFViewer {
       } else if (this._scrollMode === _ui_utils_js__WEBPACK_IMPORTED_MODULE_1__.ScrollMode.HORIZONTAL) {
         [hPadding, vPadding] = [vPadding, hPadding];
       }
-      const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale / this.#pageWidthScaleFactor;
-      const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;
+      const pageWidthScale = (this.container.clientWidth - hPadding) / Math.max(...this._pages.map(p => p.width)) * currentPage.scale / this.#pageWidthScaleFactor * (1 / (1 - (viewerTrim ?? 0) / 100));
+      const pageHeightScale = (this.container.clientHeight - vPadding) / Math.max(...this._pages.map(p => p.height)) * currentPage.scale * (1 / (1 - (viewerTrim ?? 0) / 100));
       switch (value) {
         case "page-actual":
           scale = 1;
@@ -14951,10 +14956,10 @@ class ViewHistory {
   }
   async _writeToStorage() {
     const databaseStr = JSON.stringify(this.database);
-    localStorage.setItem("pdfjs.history", databaseStr);
+    // localStorage.setItem("pdfjs.history", databaseStr);
   }
   async _readFromStorage() {
-    return localStorage.getItem("pdfjs.history");
+    return // localStorage.getItem("pdfjs.history");
   }
   async set(name, val) {
     await this._initializedPromise;
@@ -15156,7 +15161,7 @@ function webViewerLoad() {
   try {
     parent.document.dispatchEvent(event);
   } catch (ex) {
-    console.error(`webviewerloaded: ${ex}`);
+    // console.error(`webviewerloaded: ${ex}`);
     document.dispatchEvent(event);
   }
   _app_js__WEBPACK_IMPORTED_MODULE_3__.PDFViewerApplication.run(config);
@@ -15379,4 +15384,3 @@ __webpack_async_result__();
 /******/ export { __webpack_exports__PDFViewerApplication as PDFViewerApplication, __webpack_exports__PDFViewerApplicationConstants as PDFViewerApplicationConstants, __webpack_exports__PDFViewerApplicationOptions as PDFViewerApplicationOptions };
 /******/ 
 
-//# sourceMappingURL=viewer.mjs.map
\ No newline at end of file
