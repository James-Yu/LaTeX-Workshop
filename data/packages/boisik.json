{
  "includes": [],
  "cmds": {
    "ifboisikarrows": {
      "command": "ifboisikarrows",
      "snippet": "ifboisikarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boisikarrowstrue": {
      "command": "boisikarrowstrue",
      "snippet": "boisikarrowstrue",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boisikarrowsfalse": {
      "command": "boisikarrowsfalse",
      "snippet": "boisikarrowsfalse",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "maltese": {
      "command": "maltese",
      "snippet": "maltese",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ú†",
      "documentation": "MALTESE CROSS"
    },
    "checkmark": {
      "command": "checkmark",
      "snippet": "checkmark",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚úì",
      "documentation": "CHECK MARK"
    },
    "ac": {
      "command": "ac",
      "snippet": "ac",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "approxeq": {
      "command": "approxeq",
      "snippet": "approxeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âä",
      "documentation": "appro equals"
    },
    "arceq": {
      "command": "arceq",
      "snippet": "arceq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âò",
      "documentation": "arc, equals; CORRESPONDS TO"
    },
    "backepsilon": {
      "command": "backepsilon",
      "snippet": "backepsilon",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œ∂",
      "documentation": "GREEK REVERSED LUNATE EPSILON SYMBOL"
    },
    "backprime": {
      "command": "backprime",
      "snippet": "backprime",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Äµ",
      "documentation": "reverse prime, not superscripted"
    },
    "backsim": {
      "command": "backsim",
      "snippet": "backsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àΩ",
      "documentation": "reverse similar"
    },
    "backsimeq": {
      "command": "backsimeq",
      "snippet": "backsimeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãç",
      "documentation": "reverse similar, equals"
    },
    "bagmember": {
      "command": "bagmember",
      "snippet": "bagmember",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãø",
      "documentation": "Z NOTATION BAG MEMBERSHIP"
    },
    "baro": {
      "command": "baro",
      "snippet": "baro",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "barwedge": {
      "command": "barwedge",
      "snippet": "barwedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äº",
      "documentation": "logical NAND (bar over wedge)"
    },
    "Bbbk": {
      "command": "Bbbk",
      "snippet": "Bbbk",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "ùïú",
      "documentation": "MATHEMATICAL DOUBLE-STRUCK SMALL K"
    },
    "bbslash": {
      "command": "bbslash",
      "snippet": "bbslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "because": {
      "command": "because",
      "snippet": "because",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àµ",
      "documentation": "BECAUSE"
    },
    "beth": {
      "command": "beth",
      "snippet": "beth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ∂",
      "documentation": "be hebrew"
    },
    "between": {
      "command": "between",
      "snippet": "between",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â¨",
      "documentation": "BETWEEN"
    },
    "bigstar": {
      "command": "bigstar",
      "snippet": "bigstar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚òÖ",
      "documentation": "s filled"
    },
    "binampersand": {
      "command": "binampersand",
      "snippet": "binampersand",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "bindnasrepma": {
      "command": "bindnasrepma",
      "snippet": "bindnasrepma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "blackbowtie": {
      "command": "blackbowtie",
      "snippet": "blackbowtie",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "blacklozenge": {
      "command": "blacklozenge",
      "snippet": "blacklozenge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ß´",
      "documentation": "BLACK LOZENGE"
    },
    "blacksquare": {
      "command": "blacksquare",
      "snippet": "blacksquare",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¨õ",
      "documentation": "BLACK LARGE SQUARE"
    },
    "blacktriangle": {
      "command": "blacktriangle",
      "snippet": "blacktriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñ¥",
      "documentation": "up filled"
    },
    "blacktriangledown": {
      "command": "blacktriangledown",
      "snippet": "blacktriangledown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñæ",
      "documentation": "BLACK DOWN-POINTING SMALL TRIANGLE"
    },
    "blacktriangleleft": {
      "command": "blacktriangleleft",
      "snippet": "blacktriangleleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óÇ",
      "documentation": "lef filled"
    },
    "blacktriangleright": {
      "command": "blacktriangleright",
      "snippet": "blacktriangleright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñ∏",
      "documentation": "righ filled"
    },
    "boxast": {
      "command": "boxast",
      "snippet": "boxast",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßÜ",
      "documentation": "SQUARED ASTERISK"
    },
    "boxbar": {
      "command": "boxbar",
      "snippet": "boxbar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ó´",
      "documentation": "vertical bar in box"
    },
    "boxbot": {
      "command": "boxbot",
      "snippet": "boxbot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boxbox": {
      "command": "boxbox",
      "snippet": "boxbox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßà",
      "documentation": "SQUARED SQUARE"
    },
    "boxbslash": {
      "command": "boxbslash",
      "snippet": "boxbslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßÖ",
      "documentation": "SQUARED FALLING DIAGONAL SLASH"
    },
    "boxcircle": {
      "command": "boxcircle",
      "snippet": "boxcircle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßá",
      "documentation": "SQUARED SMALL CIRCLE"
    },
    "boxdivision": {
      "command": "boxdivision",
      "snippet": "boxdivision",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boxdot": {
      "command": "boxdot",
      "snippet": "boxdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä°",
      "documentation": "/dotsquare /boxdot b: small dot in box"
    },
    "boxleft": {
      "command": "boxleft",
      "snippet": "boxleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boxminus": {
      "command": "boxminus",
      "snippet": "boxminus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äü",
      "documentation": "minus sign in box"
    },
    "boxplus": {
      "command": "boxplus",
      "snippet": "boxplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äû",
      "documentation": "plus sign in box"
    },
    "boxright": {
      "command": "boxright",
      "snippet": "boxright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boxslash": {
      "command": "boxslash",
      "snippet": "boxslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßÑ",
      "documentation": "SQUARED RISING DIAGONAL SLASH"
    },
    "boxtimes": {
      "command": "boxtimes",
      "snippet": "boxtimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä†",
      "documentation": "multiply sign in box"
    },
    "boxtop": {
      "command": "boxtop",
      "snippet": "boxtop",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "boxtriangle": {
      "command": "boxtriangle",
      "snippet": "boxtriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "bumpeq": {
      "command": "bumpeq",
      "snippet": "bumpeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âè",
      "documentation": "bumpy equals, equals"
    },
    "Bumpeq": {
      "command": "Bumpeq",
      "snippet": "Bumpeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âé",
      "documentation": "bumpy equals"
    },
    "Cap": {
      "command": "Cap",
      "snippet": "Cap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãí",
      "documentation": "/cap /doublecap b: DOUBLE INTERSECTION"
    },
    "centerdot": {
      "command": "centerdot",
      "snippet": "centerdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "circeq": {
      "command": "circeq",
      "snippet": "circeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âó",
      "documentation": "circle, equals"
    },
    "circlearrowleft": {
      "command": "circlearrowleft",
      "snippet": "circlearrowleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∫",
      "documentation": "ANTICLOCKWISE OPEN CIRCLE ARROW"
    },
    "circlearrowright": {
      "command": "circlearrowright",
      "snippet": "circlearrowright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üª",
      "documentation": "CLOCKWISE OPEN CIRCLE ARROW"
    },
    "circledast": {
      "command": "circledast",
      "snippet": "circledast",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äõ",
      "documentation": "asterisk in circle"
    },
    "circledcirc": {
      "command": "circledcirc",
      "snippet": "circledcirc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äö",
      "documentation": "small circle in circle"
    },
    "circleddash": {
      "command": "circleddash",
      "snippet": "circleddash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äù",
      "documentation": "hyphen in circle"
    },
    "CircledEq": {
      "command": "CircledEq",
      "snippet": "CircledEq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "circplus": {
      "command": "circplus",
      "snippet": "circplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "coAsterisk": {
      "command": "coAsterisk",
      "snippet": "coAsterisk",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "complement": {
      "command": "complement",
      "snippet": "complement",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÅ",
      "documentation": "COMPLEMENT sign"
    },
    "convolution": {
      "command": "convolution",
      "snippet": "convolution",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "corresponds": {
      "command": "corresponds",
      "snippet": "corresponds",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âô",
      "documentation": "corresponds to (wedge over equals)"
    },
    "Cup": {
      "command": "Cup",
      "snippet": "Cup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãì",
      "documentation": "/cup /doublecup b: DOUBLE UNION"
    },
    "cupleftarrow": {
      "command": "cupleftarrow",
      "snippet": "cupleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äå",
      "documentation": "MULTISET"
    },
    "curlyeqprec": {
      "command": "curlyeqprec",
      "snippet": "curlyeqprec",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãû",
      "documentation": "curly equals, precedes"
    },
    "curlyeqsucc": {
      "command": "curlyeqsucc",
      "snippet": "curlyeqsucc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãü",
      "documentation": "curly equals, succeeds"
    },
    "curlyvee": {
      "command": "curlyvee",
      "snippet": "curlyvee",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãé",
      "documentation": "CURLY LOGICAL OR"
    },
    "curlywedge": {
      "command": "curlywedge",
      "snippet": "curlywedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãè",
      "documentation": "CURLY LOGICAL AND"
    },
    "curvearrowleft": {
      "command": "curvearrowleft",
      "snippet": "curvearrowleft",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∂",
      "documentation": "left curved arrow"
    },
    "curvearrowright": {
      "command": "curvearrowright",
      "snippet": "curvearrowright",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∑",
      "documentation": "right curved arrow"
    },
    "dalambert": {
      "command": "dalambert",
      "snippet": "dalambert",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "daleth": {
      "command": "daleth",
      "snippet": "daleth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ∏",
      "documentation": "dale hebrew"
    },
    "dasharrow": {
      "command": "dasharrow",
      "snippet": "dasharrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á¢",
      "documentation": "RIGHTWARDS DASHED ARROW"
    },
    "dashleftarrow": {
      "command": "dashleftarrow",
      "snippet": "dashleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á†",
      "documentation": "LEFTWARDS DASHED ARROW"
    },
    "dashrightarrow": {
      "command": "dashrightarrow",
      "snippet": "dashrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á¢",
      "documentation": "RIGHTWARDS DASHED ARROW"
    },
    "DashV": {
      "command": "DashV",
      "snippet": "DashV",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´•",
      "documentation": "DOUBLE VERTICAL BAR DOUBLE LEFT TURNSTILE"
    },
    "dashV": {
      "command": "dashV",
      "snippet": "dashV",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´£",
      "documentation": "DOUBLE VERTICAL BAR LEFT TURNSTILE"
    },
    "dashVv": {
      "command": "dashVv",
      "snippet": "dashVv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dfourier": {
      "command": "dfourier",
      "snippet": "dfourier",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Dfourier": {
      "command": "Dfourier",
      "snippet": "Dfourier",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diagdown": {
      "command": "diagdown",
      "snippet": "diagdown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diagup": {
      "command": "diagup",
      "snippet": "diagup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondbar": {
      "command": "diamondbar",
      "snippet": "diamondbar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondcircle": {
      "command": "diamondcircle",
      "snippet": "diamondcircle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondminus": {
      "command": "diamondminus",
      "snippet": "diamondminus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondop": {
      "command": "diamondop",
      "snippet": "diamondop",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondplus": {
      "command": "diamondplus",
      "snippet": "diamondplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondtimes": {
      "command": "diamondtimes",
      "snippet": "diamondtimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "diamondtriangle": {
      "command": "diamondtriangle",
      "snippet": "diamondtriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "digamma": {
      "command": "digamma",
      "snippet": "digamma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œù",
      "documentation": "GREEK SMALL LETTER DIGAMMA"
    },
    "Digamma": {
      "command": "Digamma",
      "snippet": "Digamma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œú",
      "documentation": "capital digamma"
    },
    "disin": {
      "command": "disin",
      "snippet": "disin",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã≤",
      "documentation": "ELEMENT OF WITH LONG HORIZONTAL STROKE"
    },
    "divideontimes": {
      "command": "divideontimes",
      "snippet": "divideontimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãá",
      "documentation": "division on times"
    },
    "Doteq": {
      "command": "Doteq",
      "snippet": "Doteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âë",
      "documentation": "/doteq r: equals, even dots"
    },
    "doteqdot": {
      "command": "doteqdot",
      "snippet": "doteqdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âë",
      "documentation": "/doteq r: equals, even dots"
    },
    "dotminus": {
      "command": "dotminus",
      "snippet": "dotminus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à∏",
      "documentation": "minus sign, dot above"
    },
    "dotplus": {
      "command": "dotplus",
      "snippet": "dotplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àî",
      "documentation": "plus sign, dot above"
    },
    "dotsim": {
      "command": "dotsim",
      "snippet": "dotsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©™",
      "documentation": "TILDE OPERATOR WITH DOT ABOVE"
    },
    "dottimes": {
      "command": "dottimes",
      "snippet": "dottimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®∞",
      "documentation": "MULTIPLICATION SIGN WITH DOT ABOVE"
    },
    "doublebarwedge": {
      "command": "doublebarwedge",
      "snippet": "doublebarwedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©û",
      "documentation": "LOGICAL AND WITH DOUBLE OVERBAR"
    },
    "doublecap": {
      "command": "doublecap",
      "snippet": "doublecap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "doublecup": {
      "command": "doublecup",
      "snippet": "doublecup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "downdownarrows": {
      "command": "downdownarrows",
      "snippet": "downdownarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áä",
      "documentation": "two down arrows"
    },
    "downharpoonleft": {
      "command": "downharpoonleft",
      "snippet": "downharpoonleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÉ",
      "documentation": "down harpoon-left"
    },
    "downharpoonright": {
      "command": "downharpoonright",
      "snippet": "downharpoonright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÇ",
      "documentation": "down harpoon-right"
    },
    "eqbumped": {
      "command": "eqbumped",
      "snippet": "eqbumped",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "eqcirc": {
      "command": "eqcirc",
      "snippet": "eqcirc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âñ",
      "documentation": "circle on equals sign"
    },
    "eqsim": {
      "command": "eqsim",
      "snippet": "eqsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âÇ",
      "documentation": "equals, similar"
    },
    "eqslantgtr": {
      "command": "eqslantgtr",
      "snippet": "eqslantgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ñ",
      "documentation": "SLANTED EQUAL TO OR GREATER-THAN"
    },
    "eqslantless": {
      "command": "eqslantless",
      "snippet": "eqslantless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ï",
      "documentation": "SLANTED EQUAL TO OR LESS-THAN"
    },
    "equalparallel": {
      "command": "equalparallel",
      "snippet": "equalparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãï",
      "documentation": "parallel, equal; equal or parallel"
    },
    "fallingdotseq": {
      "command": "fallingdotseq",
      "snippet": "fallingdotseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âí",
      "documentation": "equals, falling dots"
    },
    "fatbslash": {
      "command": "fatbslash",
      "snippet": "fatbslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "fatsemi": {
      "command": "fatsemi",
      "snippet": "fatsemi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®ü",
      "documentation": "Z NOTATION SCHEMA COMPOSITION"
    },
    "fatslash": {
      "command": "fatslash",
      "snippet": "fatslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Finv": {
      "command": "Finv",
      "snippet": "Finv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ≤",
      "documentation": "TURNED CAPITAL F"
    },
    "forkv": {
      "command": "forkv",
      "snippet": "forkv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´ô",
      "documentation": "ELEMENT OF OPENING DOWNWARDS"
    },
    "Game": {
      "command": "Game",
      "snippet": "Game",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ÖÅ",
      "documentation": "TURNED SANS-SERIF CAPITAL G (amssymb has mirrored G)"
    },
    "geqq": {
      "command": "geqq",
      "snippet": "geqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âß",
      "documentation": "grea double equals"
    },
    "geqslant": {
      "command": "geqslant",
      "snippet": "geqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©æ",
      "documentation": "GREATER-THAN OR SLANTED EQUAL TO"
    },
    "ggcurly": {
      "command": "ggcurly",
      "snippet": "ggcurly",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™º",
      "documentation": "DOUBLE SUCCEEDS"
    },
    "ggg": {
      "command": "ggg",
      "snippet": "ggg",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™¢",
      "documentation": "DOUBLE NESTED GREATER-THAN"
    },
    "gggtr": {
      "command": "gggtr",
      "snippet": "gggtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "gimel": {
      "command": "gimel",
      "snippet": "gimel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñ∑",
      "documentation": "gimel, hebrew"
    },
    "glj": {
      "command": "glj",
      "snippet": "glj",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™§",
      "documentation": "GREATER-THAN OVERLAPPING LESS-THAN"
    },
    "gnapprox": {
      "command": "gnapprox",
      "snippet": "gnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ä",
      "documentation": "GREATER-THAN AND NOT APPROXIMATE"
    },
    "gneq": {
      "command": "gneq",
      "snippet": "gneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™à",
      "documentation": "GREATER-THAN AND SINGLE-LINE NOT EQUAL TO"
    },
    "gneqq": {
      "command": "gneqq",
      "snippet": "gneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â©",
      "documentation": "grea not double equals"
    },
    "gnsim": {
      "command": "gnsim",
      "snippet": "gnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãß",
      "documentation": "grea not similar"
    },
    "Gt": {
      "command": "Gt",
      "snippet": "Gt",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™¢",
      "documentation": "DOUBLE NESTED GREATER-THAN"
    },
    "gtcir": {
      "command": "gtcir",
      "snippet": "gtcir",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©∫",
      "documentation": "GREATER-THAN WITH CIRCLE INSIDE"
    },
    "gtrapprox": {
      "command": "gtrapprox",
      "snippet": "gtrapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™Ü",
      "documentation": "GREATER-THAN OR APPROXIMATE"
    },
    "gtrdot": {
      "command": "gtrdot",
      "snippet": "gtrdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãó",
      "documentation": "greater with dot"
    },
    "gtreqless": {
      "command": "gtreqless",
      "snippet": "gtreqless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãõ",
      "documentation": "grea equals, less"
    },
    "gtreqqless": {
      "command": "gtreqqless",
      "snippet": "gtreqqless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™å",
      "documentation": "GREATER-THAN ABOVE DOUBLE-LINE EQUAL ABOVE LESS-THAN"
    },
    "gtrless": {
      "command": "gtrless",
      "snippet": "gtrless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∑",
      "documentation": "grea less"
    },
    "gtrsim": {
      "command": "gtrsim",
      "snippet": "gtrsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â≥",
      "documentation": "grea similar"
    },
    "gvertneqq": {
      "command": "gvertneqq",
      "snippet": "gvertneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "hash": {
      "command": "hash",
      "snippet": "hash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãï",
      "documentation": "parallel, equal; equal or parallel"
    },
    "hermitmatrix": {
      "command": "hermitmatrix",
      "snippet": "hermitmatrix",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äπ",
      "documentation": "HERMITIAN CONJUGATE MATRIX"
    },
    "heta": {
      "command": "heta",
      "snippet": "heta",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Heta": {
      "command": "Heta",
      "snippet": "Heta",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "hslash": {
      "command": "hslash",
      "snippet": "hslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ñè",
      "documentation": "Planck's h over 2pi"
    },
    "iinfin": {
      "command": "iinfin",
      "snippet": "iinfin",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßú",
      "documentation": "INCOMPLETE INFINITY"
    },
    "inplus": {
      "command": "inplus",
      "snippet": "inplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "intercal": {
      "command": "intercal",
      "snippet": "intercal",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∫",
      "documentation": "intercal"
    },
    "intup": {
      "command": "intup",
      "snippet": "intup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "invnot": {
      "command": "invnot",
      "snippet": "invnot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åê",
      "documentation": "reverse not"
    },
    "kernelcontraction": {
      "command": "kernelcontraction",
      "snippet": "kernelcontraction",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àª",
      "documentation": "HOMOTHETIC"
    },
    "lambdabar": {
      "command": "lambdabar",
      "snippet": "lambdabar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lambdaslash": {
      "command": "lambdaslash",
      "snippet": "lambdaslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lbag": {
      "command": "lbag",
      "snippet": "lbag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ü¶",
      "documentation": "MATHEMATICAL LEFT WHITE SQUARE BRACKET"
    },
    "lblackbowtie": {
      "command": "lblackbowtie",
      "snippet": "lblackbowtie",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftarrowtail": {
      "command": "leftarrowtail",
      "snippet": "leftarrowtail",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü¢",
      "documentation": "left arrow-tailed"
    },
    "leftleftarrows": {
      "command": "leftleftarrows",
      "snippet": "leftleftarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áá",
      "documentation": "two left arrows"
    },
    "leftrightarrows": {
      "command": "leftrightarrows",
      "snippet": "leftrightarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÜ",
      "documentation": "left arrow over right arrow"
    },
    "leftrightharpoons": {
      "command": "leftrightharpoons",
      "snippet": "leftrightharpoons",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áã",
      "documentation": "left harpoon over right"
    },
    "leftrightsquigarrow": {
      "command": "leftrightsquigarrow",
      "snippet": "leftrightsquigarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü≠",
      "documentation": "left and right arr-wavy"
    },
    "leftslice": {
      "command": "leftslice",
      "snippet": "leftslice",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™¶",
      "documentation": "LESS-THAN CLOSED BY CURVE"
    },
    "leftthreetimes": {
      "command": "leftthreetimes",
      "snippet": "leftthreetimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãã",
      "documentation": "LEFT SEMIDIRECT PRODUCT"
    },
    "leqq": {
      "command": "leqq",
      "snippet": "leqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â¶",
      "documentation": "less, double equals"
    },
    "leqslant": {
      "command": "leqslant",
      "snippet": "leqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©Ω",
      "documentation": "LESS-THAN OR SLANTED EQUAL TO"
    },
    "lessapprox": {
      "command": "lessapprox",
      "snippet": "lessapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™Ö",
      "documentation": "LESS-THAN OR APPROXIMATE"
    },
    "lessdot": {
      "command": "lessdot",
      "snippet": "lessdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãñ",
      "documentation": "less with dot"
    },
    "lesseqgtr": {
      "command": "lesseqgtr",
      "snippet": "lesseqgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãö",
      "documentation": "less, equals, greater"
    },
    "lesseqqgtr": {
      "command": "lesseqqgtr",
      "snippet": "lesseqqgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ã",
      "documentation": "LESS-THAN ABOVE DOUBLE-LINE EQUAL ABOVE GREATER-THAN"
    },
    "lessgtr": {
      "command": "lessgtr",
      "snippet": "lessgtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∂",
      "documentation": "less, greater"
    },
    "lesssim": {
      "command": "lesssim",
      "snippet": "lesssim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â≤",
      "documentation": "less, similar"
    },
    "llcorner": {
      "command": "llcorner",
      "snippet": "llcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åû",
      "documentation": "lower left corner"
    },
    "llcurly": {
      "command": "llcurly",
      "snippet": "llcurly",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ª",
      "documentation": "DOUBLE PRECEDES"
    },
    "Lleftarrow": {
      "command": "Lleftarrow",
      "snippet": "Lleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áö",
      "documentation": "left triple arrow"
    },
    "lll": {
      "command": "lll",
      "snippet": "lll",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™°",
      "documentation": "DOUBLE NESTED LESS-THAN"
    },
    "llless": {
      "command": "llless",
      "snippet": "llless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lnapprox": {
      "command": "lnapprox",
      "snippet": "lnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™â",
      "documentation": "LESS-THAN AND NOT APPROXIMATE"
    },
    "lneq": {
      "command": "lneq",
      "snippet": "lneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™á",
      "documentation": "LESS-THAN AND SINGLE-LINE NOT EQUAL TO"
    },
    "lneqq": {
      "command": "lneqq",
      "snippet": "lneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â®",
      "documentation": "less, not double equals"
    },
    "lnsim": {
      "command": "lnsim",
      "snippet": "lnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã¶",
      "documentation": "less, not similar"
    },
    "looparrowleft": {
      "command": "looparrowleft",
      "snippet": "looparrowleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü´",
      "documentation": "left arrow-looped"
    },
    "looparrowright": {
      "command": "looparrowright",
      "snippet": "looparrowright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü¨",
      "documentation": "right arrow-looped"
    },
    "lozenge": {
      "command": "lozenge",
      "snippet": "lozenge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚óä",
      "documentation": "LOZENGE or total mark"
    },
    "lozengedot": {
      "command": "lozengedot",
      "snippet": "lozengedot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lrcorner": {
      "command": "lrcorner",
      "snippet": "lrcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åü",
      "documentation": "lower right corner"
    },
    "Lsh": {
      "command": "Lsh",
      "snippet": "Lsh",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∞",
      "documentation": "a: UPWARDS ARROW WITH TIP LEFTWARDS"
    },
    "Lt": {
      "command": "Lt",
      "snippet": "Lt",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™°",
      "documentation": "DOUBLE NESTED LESS-THAN"
    },
    "ltcir": {
      "command": "ltcir",
      "snippet": "ltcir",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©π",
      "documentation": "LESS-THAN WITH CIRCLE INSIDE"
    },
    "ltimes": {
      "command": "ltimes",
      "snippet": "ltimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãâ",
      "documentation": "times sign, left closed"
    },
    "ltimesblack": {
      "command": "ltimesblack",
      "snippet": "ltimesblack",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "lvertneqq": {
      "command": "lvertneqq",
      "snippet": "lvertneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "measuredangle": {
      "command": "measuredangle",
      "snippet": "measuredangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à°",
      "documentation": "MEASURED ANGLE"
    },
    "measuredrightangle": {
      "command": "measuredrightangle",
      "snippet": "measuredrightangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äæ",
      "documentation": "right angle-measured [with arc]"
    },
    "merge": {
      "command": "merge",
      "snippet": "merge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "minuso": {
      "command": "minuso",
      "snippet": "minuso",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "moo": {
      "command": "moo",
      "snippet": "moo",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimap": {
      "command": "multimap",
      "snippet": "multimap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∏",
      "documentation": "/MULTIMAP a:"
    },
    "multimapboth": {
      "command": "multimapboth",
      "snippet": "multimapboth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßü",
      "documentation": "DOUBLE-ENDED MULTIMAP"
    },
    "multimapbothvert": {
      "command": "multimapbothvert",
      "snippet": "multimapbothvert",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapdot": {
      "command": "multimapdot",
      "snippet": "multimapdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapdotboth": {
      "command": "multimapdotboth",
      "snippet": "multimapdotboth",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapdotbothA": {
      "command": "multimapdotbothA",
      "snippet": "multimapdotbothA",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∂",
      "documentation": "ORIGINAL OF"
    },
    "multimapdotbothAvert": {
      "command": "multimapdotbothAvert",
      "snippet": "multimapdotbothAvert",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapdotbothB": {
      "command": "multimapdotbothB",
      "snippet": "multimapdotbothB",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∑",
      "documentation": "IMAGE OF"
    },
    "multimapdotbothBvert": {
      "command": "multimapdotbothBvert",
      "snippet": "multimapdotbothBvert",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapdotbothvert": {
      "command": "multimapdotbothvert",
      "snippet": "multimapdotbothvert",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapdotinv": {
      "command": "multimapdotinv",
      "snippet": "multimapdotinv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "multimapinv": {
      "command": "multimapinv",
      "snippet": "multimapinv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚üú",
      "documentation": "LEFT MULTIMAP"
    },
    "ncong": {
      "command": "ncong",
      "snippet": "ncong",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âá",
      "documentation": "not congruent with"
    },
    "nequiv": {
      "command": "nequiv",
      "snippet": "nequiv",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â¢",
      "documentation": "not identical with"
    },
    "nexists": {
      "command": "nexists",
      "snippet": "nexists",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÑ",
      "documentation": "negated exists"
    },
    "ngeq": {
      "command": "ngeq",
      "snippet": "ngeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â±",
      "documentation": "not greater-than-or-equal"
    },
    "ngeqq": {
      "command": "ngeqq",
      "snippet": "ngeqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ngeqslant": {
      "command": "ngeqslant",
      "snippet": "ngeqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â±",
      "documentation": "not greater-than-or-equal"
    },
    "ngtr": {
      "command": "ngtr",
      "snippet": "ngtr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âØ",
      "documentation": "NOT GREATER-THAN"
    },
    "niplus": {
      "command": "niplus",
      "snippet": "niplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nisd": {
      "command": "nisd",
      "snippet": "nisd",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã∫",
      "documentation": "CONTAINS WITH LONG HORIZONTAL STROKE"
    },
    "nleftarrow": {
      "command": "nleftarrow",
      "snippet": "nleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üö",
      "documentation": "not left arrow"
    },
    "nLeftarrow": {
      "command": "nLeftarrow",
      "snippet": "nLeftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áç",
      "documentation": "not implied by"
    },
    "nleftrightarrow": {
      "command": "nleftrightarrow",
      "snippet": "nleftrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ÜÆ",
      "documentation": "not left and right arrow"
    },
    "nLeftrightarrow": {
      "command": "nLeftrightarrow",
      "snippet": "nLeftrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áé",
      "documentation": "not left and right double arrows"
    },
    "nLeftrightarroW": {
      "command": "nLeftrightarroW",
      "snippet": "nLeftrightarroW",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nleq": {
      "command": "nleq",
      "snippet": "nleq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∞",
      "documentation": "not less-than-or-equal"
    },
    "nleqq": {
      "command": "nleqq",
      "snippet": "nleqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nleqslant": {
      "command": "nleqslant",
      "snippet": "nleqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚â∞",
      "documentation": "not less-than-or-equal"
    },
    "nless": {
      "command": "nless",
      "snippet": "nless",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âÆ",
      "documentation": "NOT LESS-THAN"
    },
    "nmid": {
      "command": "nmid",
      "snippet": "nmid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à§",
      "documentation": "negated mid, DOES NOT DIVIDE"
    },
    "notbot": {
      "command": "notbot",
      "snippet": "notbot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nottop": {
      "command": "nottop",
      "snippet": "nottop",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nparallel": {
      "command": "nparallel",
      "snippet": "nparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à¶",
      "documentation": "not parallel"
    },
    "nplus": {
      "command": "nplus",
      "snippet": "nplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nprec": {
      "command": "nprec",
      "snippet": "nprec",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÄ",
      "documentation": "not precedes"
    },
    "npreceq": {
      "command": "npreceq",
      "snippet": "npreceq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã†",
      "documentation": "DOES NOT PRECEDE OR EQUAL"
    },
    "nrightarrow": {
      "command": "nrightarrow",
      "snippet": "nrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üõ",
      "documentation": "not right arrow"
    },
    "nRightarrow": {
      "command": "nRightarrow",
      "snippet": "nRightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áè",
      "documentation": "not implies"
    },
    "nshortmid": {
      "command": "nshortmid",
      "snippet": "nshortmid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nshortparallel": {
      "command": "nshortparallel",
      "snippet": "nshortparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nsim": {
      "command": "nsim",
      "snippet": "nsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âÅ",
      "documentation": "not similar"
    },
    "nsubset": {
      "command": "nsubset",
      "snippet": "nsubset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÑ",
      "documentation": "no variant [slash negation]"
    },
    "nsubseteq": {
      "command": "nsubseteq",
      "snippet": "nsubseteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äà",
      "documentation": "no equals"
    },
    "nsubseteqq": {
      "command": "nsubseteqq",
      "snippet": "nsubseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nsucc": {
      "command": "nsucc",
      "snippet": "nsucc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÅ",
      "documentation": "not succeeds"
    },
    "nsucceq": {
      "command": "nsucceq",
      "snippet": "nsucceq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã°",
      "documentation": "no curly equals"
    },
    "nsupset": {
      "command": "nsupset",
      "snippet": "nsupset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÖ",
      "documentation": "no variant [slash negation]"
    },
    "nsupseteq": {
      "command": "nsupseteq",
      "snippet": "nsupseteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äâ",
      "documentation": "no equals"
    },
    "nsupseteqq": {
      "command": "nsupseteqq",
      "snippet": "nsupseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ntriangleleft": {
      "command": "ntriangleleft",
      "snippet": "ntriangleleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã™",
      "documentation": "not left triangle"
    },
    "ntrianglelefteq": {
      "command": "ntrianglelefteq",
      "snippet": "ntrianglelefteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã¨",
      "documentation": "not lef equals"
    },
    "ntriangleright": {
      "command": "ntriangleright",
      "snippet": "ntriangleright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã´",
      "documentation": "not right triangle"
    },
    "ntrianglerighteq": {
      "command": "ntrianglerighteq",
      "snippet": "ntrianglerighteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã≠",
      "documentation": "not righ equals"
    },
    "nvdash": {
      "command": "nvdash",
      "snippet": "nvdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä¨",
      "documentation": "no dash"
    },
    "nVdash": {
      "command": "nVdash",
      "snippet": "nVdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äÆ",
      "documentation": "not double ver dash"
    },
    "nvDash": {
      "command": "nvDash",
      "snippet": "nvDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä≠",
      "documentation": "no double dash"
    },
    "nVDash": {
      "command": "nVDash",
      "snippet": "nVDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äØ",
      "documentation": "not double vert, double dash"
    },
    "obar": {
      "command": "obar",
      "snippet": "obar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åΩ",
      "documentation": "APL FUNCTIONAL SYMBOL CIRCLE STILE, circle with vertical bar"
    },
    "oblong": {
      "command": "oblong",
      "snippet": "oblong",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "obot": {
      "command": "obot",
      "snippet": "obot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶∫",
      "documentation": "CIRCLE DIVIDED BY HORIZONTAL BAR AND TOP HALF DIVIDED BY VERTICAL BAR"
    },
    "obslash": {
      "command": "obslash",
      "snippet": "obslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶∏",
      "documentation": "CIRCLED REVERSE SOLIDUS"
    },
    "ogreaterthan": {
      "command": "ogreaterthan",
      "snippet": "ogreaterthan",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßÅ",
      "documentation": "CIRCLED GREATER-THAN"
    },
    "oleft": {
      "command": "oleft",
      "snippet": "oleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "olessthan": {
      "command": "olessthan",
      "snippet": "olessthan",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ßÄ",
      "documentation": "CIRCLED LESS-THAN"
    },
    "oright": {
      "command": "oright",
      "snippet": "oright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "otop": {
      "command": "otop",
      "snippet": "otop",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "otriangle": {
      "command": "otriangle",
      "snippet": "otriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "ovee": {
      "command": "ovee",
      "snippet": "ovee",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "owedge": {
      "command": "owedge",
      "snippet": "owedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Perp": {
      "command": "Perp",
      "snippet": "Perp",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´´",
      "documentation": "DOUBLE UP TACK"
    },
    "pitchfork": {
      "command": "pitchfork",
      "snippet": "pitchfork",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãî",
      "documentation": "PITCHFORK"
    },
    "pluscirc": {
      "command": "pluscirc",
      "snippet": "pluscirc",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "plustrif": {
      "command": "plustrif",
      "snippet": "plustrif",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®®",
      "documentation": "PLUS SIGN WITH BLACK TRIANGLE"
    },
    "precapprox": {
      "command": "precapprox",
      "snippet": "precapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∑",
      "documentation": "PRECEDES ABOVE ALMOST EQUAL TO"
    },
    "preccurlyeq": {
      "command": "preccurlyeq",
      "snippet": "preccurlyeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âº",
      "documentation": "precedes, curly equals"
    },
    "precnapprox": {
      "command": "precnapprox",
      "snippet": "precnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™π",
      "documentation": "PRECEDES ABOVE NOT ALMOST EQUAL TO"
    },
    "precneqq": {
      "command": "precneqq",
      "snippet": "precneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™µ",
      "documentation": "PRECEDES ABOVE NOT EQUAL TO"
    },
    "precnsim": {
      "command": "precnsim",
      "snippet": "precnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã®",
      "documentation": "precedes, not similar"
    },
    "precsim": {
      "command": "precsim",
      "snippet": "precsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âæ",
      "documentation": "precedes, similar"
    },
    "prurel": {
      "command": "prurel",
      "snippet": "prurel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä∞",
      "documentation": "element PRECEDES UNDER RELATION"
    },
    "qoppa": {
      "command": "qoppa",
      "snippet": "qoppa",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œô",
      "documentation": "GREEK SMALL LETTER ARCHAIC KOPPA"
    },
    "Qoppa": {
      "command": "Qoppa",
      "snippet": "Qoppa",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œò",
      "documentation": "GREEK LETTER ARCHAIC KOPPA"
    },
    "rbag": {
      "command": "rbag",
      "snippet": "rbag",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚üß",
      "documentation": "MATHEMATICAL RIGHT WHITE SQUARE BRACKET"
    },
    "rblackbowtie": {
      "command": "rblackbowtie",
      "snippet": "rblackbowtie",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rightangle": {
      "command": "rightangle",
      "snippet": "rightangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àü",
      "documentation": "right (90 degree) angle"
    },
    "rightanglemdot": {
      "command": "rightanglemdot",
      "snippet": "rightanglemdot",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶ù",
      "documentation": "MEASURED RIGHT ANGLE WITH DOT"
    },
    "rightanglesqr": {
      "command": "rightanglesqr",
      "snippet": "rightanglesqr",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¶ú",
      "documentation": "RIGHT ANGLE VARIANT WITH SQUARE"
    },
    "rightarrowtail": {
      "command": "rightarrowtail",
      "snippet": "rightarrowtail",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü£",
      "documentation": "righ z notation total injection"
    },
    "rightleftarrows": {
      "command": "rightleftarrows",
      "snippet": "rightleftarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áÑ",
      "documentation": "right arrow over left arrow"
    },
    "rightrightarrows": {
      "command": "rightrightarrows",
      "snippet": "rightrightarrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áâ",
      "documentation": "two right arrows"
    },
    "rightslice": {
      "command": "rightslice",
      "snippet": "rightslice",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ß",
      "documentation": "GREATER-THAN CLOSED BY CURVE"
    },
    "rightsquigarrow": {
      "command": "rightsquigarrow",
      "snippet": "rightsquigarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áù",
      "documentation": "RIGHTWARDS SQUIGGLE ARROW"
    },
    "rightthreetimes": {
      "command": "rightthreetimes",
      "snippet": "rightthreetimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãå",
      "documentation": "RIGHT SEMIDIRECT PRODUCT"
    },
    "riota": {
      "command": "riota",
      "snippet": "riota",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "risingdotseq": {
      "command": "risingdotseq",
      "snippet": "risingdotseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âì",
      "documentation": "equals, rising dots"
    },
    "Rrightarrow": {
      "command": "Rrightarrow",
      "snippet": "Rrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áõ",
      "documentation": "right triple arrow"
    },
    "Rsh": {
      "command": "Rsh",
      "snippet": "Rsh",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü±",
      "documentation": "a: UPWARDS ARROW WITH TIP RIGHTWARDS"
    },
    "rtimes": {
      "command": "rtimes",
      "snippet": "rtimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãä",
      "documentation": "times sign, right closed"
    },
    "rtimesblack": {
      "command": "rtimesblack",
      "snippet": "rtimesblack",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sampi": {
      "command": "sampi",
      "snippet": "sampi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œ°",
      "documentation": "GREEK SMALL LETTER SAMPI"
    },
    "Sampi": {
      "command": "Sampi",
      "snippet": "Sampi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œ†",
      "documentation": "capital sampi"
    },
    "scurel": {
      "command": "scurel",
      "snippet": "scurel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä±",
      "documentation": "SUCCEEDS UNDER RELATION"
    },
    "shortmid": {
      "command": "shortmid",
      "snippet": "shortmid",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "shortparallel": {
      "command": "shortparallel",
      "snippet": "shortparallel",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "simrdots": {
      "command": "simrdots",
      "snippet": "simrdots",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©´",
      "documentation": "TILDE OPERATOR WITH RISING DOTS"
    },
    "sinewave": {
      "command": "sinewave",
      "snippet": "sinewave",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àø",
      "documentation": "SINE WAVE, alternating current"
    },
    "smallfrown": {
      "command": "smallfrown",
      "snippet": "smallfrown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "smallsetminus": {
      "command": "smallsetminus",
      "snippet": "smallsetminus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àñ",
      "documentation": "small SET MINUS (cf. reverse solidus)"
    },
    "smallsmile": {
      "command": "smallsmile",
      "snippet": "smallsmile",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "smashtimes": {
      "command": "smashtimes",
      "snippet": "smashtimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚®≥",
      "documentation": "SMASH PRODUCT"
    },
    "sphericalangle": {
      "command": "sphericalangle",
      "snippet": "sphericalangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à¢",
      "documentation": "SPHERICAL ANGLE"
    },
    "sqsubset": {
      "command": "sqsubset",
      "snippet": "sqsubset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äè",
      "documentation": "square subset"
    },
    "sqSubset": {
      "command": "sqSubset",
      "snippet": "sqSubset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sqsupset": {
      "command": "sqsupset",
      "snippet": "sqsupset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äê",
      "documentation": "square superset"
    },
    "sqSupset": {
      "command": "sqSupset",
      "snippet": "sqSupset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "square": {
      "command": "square",
      "snippet": "square",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚¨ú",
      "documentation": "WHITE LARGE SQUARE"
    },
    "squplus": {
      "command": "squplus",
      "snippet": "squplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sslash": {
      "command": "sslash",
      "snippet": "sslash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´Ω",
      "documentation": "DOUBLE SOLIDUS OPERATOR"
    },
    "stigma": {
      "command": "stigma",
      "snippet": "stigma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œõ",
      "documentation": "GREEK SMALL LETTER STIGMA"
    },
    "Stigma": {
      "command": "Stigma",
      "snippet": "Stigma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œö",
      "documentation": "capital stigma"
    },
    "strictfi": {
      "command": "strictfi",
      "snippet": "strictfi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚•º",
      "documentation": "LEFT FISH TAIL"
    },
    "strictif": {
      "command": "strictif",
      "snippet": "strictif",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚•Ω",
      "documentation": "RIGHT FISH TAIL"
    },
    "Subset": {
      "command": "Subset",
      "snippet": "Subset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãê",
      "documentation": "DOUBLE SUBSET"
    },
    "subseteqq": {
      "command": "subseteqq",
      "snippet": "subseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´Ö",
      "documentation": "SUBSET OF ABOVE EQUALS SIGN"
    },
    "subsetneq": {
      "command": "subsetneq",
      "snippet": "subsetneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ää",
      "documentation": "subset, not equals"
    },
    "subsetneqq": {
      "command": "subsetneqq",
      "snippet": "subsetneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´ã",
      "documentation": "SUBSET OF ABOVE NOT EQUAL TO"
    },
    "subsetplus": {
      "command": "subsetplus",
      "snippet": "subsetplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™ø",
      "documentation": "SUBSET WITH PLUS SIGN BELOW"
    },
    "subsetpluseq": {
      "command": "subsetpluseq",
      "snippet": "subsetpluseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "succapprox": {
      "command": "succapprox",
      "snippet": "succapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∏",
      "documentation": "SUCCEEDS ABOVE ALMOST EQUAL TO"
    },
    "succcurlyeq": {
      "command": "succcurlyeq",
      "snippet": "succcurlyeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âΩ",
      "documentation": "succeeds, curly equals"
    },
    "succnapprox": {
      "command": "succnapprox",
      "snippet": "succnapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∫",
      "documentation": "SUCCEEDS ABOVE NOT ALMOST EQUAL TO"
    },
    "succneqq": {
      "command": "succneqq",
      "snippet": "succneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚™∂",
      "documentation": "SUCCEEDS ABOVE NOT EQUAL TO"
    },
    "succnsim": {
      "command": "succnsim",
      "snippet": "succnsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã©",
      "documentation": "succeeds, not similar"
    },
    "succsim": {
      "command": "succsim",
      "snippet": "succsim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âø",
      "documentation": "succeeds, similar"
    },
    "Supset": {
      "command": "Supset",
      "snippet": "Supset",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãë",
      "documentation": "DOUBLE SUPERSET"
    },
    "supseteqq": {
      "command": "supseteqq",
      "snippet": "supseteqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´Ü",
      "documentation": "SUPERSET OF ABOVE EQUALS SIGN"
    },
    "supsetneq": {
      "command": "supsetneq",
      "snippet": "supsetneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äã",
      "documentation": "superset, not equals"
    },
    "supsetneqq": {
      "command": "supsetneqq",
      "snippet": "supsetneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´å",
      "documentation": "SUPERSET OF ABOVE NOT EQUAL TO"
    },
    "supsetplus": {
      "command": "supsetplus",
      "snippet": "supsetplus",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´Ä",
      "documentation": "SUPERSET WITH PLUS SIGN BELOW"
    },
    "supsetpluseq": {
      "command": "supsetpluseq",
      "snippet": "supsetpluseq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "talloblong": {
      "command": "talloblong",
      "snippet": "talloblong",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´æ",
      "documentation": "WHITE VERTICAL BAR"
    },
    "therefore": {
      "command": "therefore",
      "snippet": "therefore",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚à¥",
      "documentation": "THEREFORE"
    },
    "thickapprox": {
      "command": "thickapprox",
      "snippet": "thickapprox",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "thicksim": {
      "command": "thicksim",
      "snippet": "thicksim",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "topfork": {
      "command": "topfork",
      "snippet": "topfork",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚´ö",
      "documentation": "PITCHFORK WITH TEE TOP"
    },
    "triangledown": {
      "command": "triangledown",
      "snippet": "triangledown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñø",
      "documentation": "WHITE DOWN-POINTING SMALL TRIANGLE"
    },
    "trianglelefteq": {
      "command": "trianglelefteq",
      "snippet": "trianglelefteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä¥",
      "documentation": "lef equals"
    },
    "trianglelefteqslant": {
      "command": "trianglelefteqslant",
      "snippet": "trianglelefteqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "triangleq": {
      "command": "triangleq",
      "snippet": "triangleq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âú",
      "documentation": "equals"
    },
    "trianglerighteq": {
      "command": "trianglerighteq",
      "snippet": "trianglerighteq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äµ",
      "documentation": "righ equals"
    },
    "trianglerighteqslant": {
      "command": "trianglerighteqslant",
      "snippet": "trianglerighteqslant",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "twoheadleftarrow": {
      "command": "twoheadleftarrow",
      "snippet": "twoheadleftarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üû",
      "documentation": "left two-headed arrow"
    },
    "twoheadrightarrow": {
      "command": "twoheadrightarrow",
      "snippet": "twoheadrightarrow",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü†",
      "documentation": "right two-headed arrow, z notation total surjection"
    },
    "ulcorner": {
      "command": "ulcorner",
      "snippet": "ulcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åú",
      "documentation": "upper left corner"
    },
    "upharpoonleft": {
      "command": "upharpoonleft",
      "snippet": "upharpoonleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üø",
      "documentation": "up harpoon-left"
    },
    "upharpoonright": {
      "command": "upharpoonright",
      "snippet": "upharpoonright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üæ",
      "documentation": "a: up harpoon-right"
    },
    "upuparrows": {
      "command": "upuparrows",
      "snippet": "upuparrows",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áà",
      "documentation": "two up arrows"
    },
    "urcorner": {
      "command": "urcorner",
      "snippet": "urcorner",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚åù",
      "documentation": "upper right corner"
    },
    "varbeta": {
      "command": "varbeta",
      "snippet": "varbeta",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "œê",
      "documentation": "rounded be greek"
    },
    "varcap": {
      "command": "varcap",
      "snippet": "varcap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varcup": {
      "command": "varcup",
      "snippet": "varcup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "vardigamma": {
      "command": "vardigamma",
      "snippet": "vardigamma",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varg": {
      "command": "varg",
      "snippet": "varg",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varhash": {
      "command": "varhash",
      "snippet": "varhash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varintercal": {
      "command": "varintercal",
      "snippet": "varintercal",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varisins": {
      "command": "varisins",
      "snippet": "varisins",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ã≥",
      "documentation": "ELEMENT OF WITH VERTICAL BAR AT END OF HORIZONTAL STROKE"
    },
    "varkappa": {
      "command": "varkappa",
      "snippet": "varkappa",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "ùúò",
      "documentation": "MATHEMATICAL ITALIC KAPPA SYMBOL"
    },
    "varlrttriangle": {
      "command": "varlrttriangle",
      "snippet": "varlrttriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varnis": {
      "command": "varnis",
      "snippet": "varnis",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ãª",
      "documentation": "CONTAINS WITH VERTICAL BAR AT END OF HORIZONTAL STROKE"
    },
    "varnothing": {
      "command": "varnothing",
      "snippet": "varnothing",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚àÖ",
      "documentation": "circle, slash"
    },
    "varpropto": {
      "command": "varpropto",
      "snippet": "varpropto",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsampi": {
      "command": "varsampi",
      "snippet": "varsampi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Varsampi": {
      "command": "Varsampi",
      "snippet": "Varsampi",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsqcap": {
      "command": "varsqcap",
      "snippet": "varsqcap",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsqcup": {
      "command": "varsqcup",
      "snippet": "varsqcup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsubsetneq": {
      "command": "varsubsetneq",
      "snippet": "varsubsetneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ää",
      "documentation": "subset, not equals"
    },
    "varsubsetneqq": {
      "command": "varsubsetneqq",
      "snippet": "varsubsetneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsupsetneq": {
      "command": "varsupsetneq",
      "snippet": "varsupsetneq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "varsupsetneqq": {
      "command": "varsupsetneqq",
      "snippet": "varsupsetneqq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "vartimes": {
      "command": "vartimes",
      "snippet": "vartimes",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "vartriangle": {
      "command": "vartriangle",
      "snippet": "vartriangle",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ñµ",
      "documentation": "small up open"
    },
    "vartriangleleft": {
      "command": "vartriangleleft",
      "snippet": "vartriangleleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä≤",
      "documentation": "lef open, variant"
    },
    "vartriangleright": {
      "command": "vartriangleright",
      "snippet": "vartriangleright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä≥",
      "documentation": "righ open, variant"
    },
    "Vdash": {
      "command": "Vdash",
      "snippet": "Vdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä©",
      "documentation": "double ver dash"
    },
    "VDash": {
      "command": "VDash",
      "snippet": "VDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä´",
      "documentation": "double vert, double dash"
    },
    "vDash": {
      "command": "vDash",
      "snippet": "vDash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä®",
      "documentation": "TRUE (ver double dash)"
    },
    "Vee": {
      "command": "Vee",
      "snippet": "Vee",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©î",
      "documentation": "DOUBLE LOGICAL OR"
    },
    "veebar": {
      "command": "veebar",
      "snippet": "veebar",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚äª",
      "documentation": "logical or, bar below (large vee); exclusive disjunction"
    },
    "veeeq": {
      "command": "veeeq",
      "snippet": "veeeq",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚âö",
      "documentation": "logical or, equals"
    },
    "veeonvee": {
      "command": "veeonvee",
      "snippet": "veeonvee",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©ñ",
      "documentation": "TWO INTERSECTING LOGICAL OR"
    },
    "Vvdash": {
      "command": "Vvdash",
      "snippet": "Vvdash",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ä™",
      "documentation": "triple ver dash"
    },
    "Wedge": {
      "command": "Wedge",
      "snippet": "Wedge",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚©ì",
      "documentation": "DOUBLE LOGICAL AND"
    },
    "Ydown": {
      "command": "Ydown",
      "snippet": "Ydown",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Yleft": {
      "command": "Yleft",
      "snippet": "Yleft",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Yright": {
      "command": "Yright",
      "snippet": "Yright",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Yup": {
      "command": "Yup",
      "snippet": "Yup",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ÖÑ",
      "documentation": "TURNED SANS-SERIF CAPITAL Y"
    },
    "ztransf": {
      "command": "ztransf",
      "snippet": "ztransf",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Ztransf": {
      "command": "Ztransf",
      "snippet": "Ztransf",
      "option": "",
      "keyvals": [],
      "keyvalindex": -1
    },
    "barleftarrow": {
      "command": "barleftarrow",
      "snippet": "barleftarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á§",
      "documentation": "LEFTWARDS ARROW TO BAR"
    },
    "barleftarrowrightarrowbar": {
      "command": "barleftarrowrightarrowbar",
      "snippet": "barleftarrowrightarrowbar",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "barovernorthwestarrow": {
      "command": "barovernorthwestarrow",
      "snippet": "barovernorthwestarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü∏",
      "documentation": "NORTH WEST ARROW TO LONG BAR"
    },
    "carriagereturn": {
      "command": "carriagereturn",
      "snippet": "carriagereturn",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üµ",
      "documentation": "downwards arrow with corner leftward = carriage return"
    },
    "curlyveedownarrow": {
      "command": "curlyveedownarrow",
      "snippet": "curlyveedownarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curlyveeuparrow": {
      "command": "curlyveeuparrow",
      "snippet": "curlyveeuparrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curlywedgedownarrow": {
      "command": "curlywedgedownarrow",
      "snippet": "curlywedgedownarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curlywedgeuparrow": {
      "command": "curlywedgeuparrow",
      "snippet": "curlywedgeuparrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curvearrowbotleft": {
      "command": "curvearrowbotleft",
      "snippet": "curvearrowbotleft",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curvearrowbotleftright": {
      "command": "curvearrowbotleftright",
      "snippet": "curvearrowbotleftright",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curvearrowbotright": {
      "command": "curvearrowbotright",
      "snippet": "curvearrowbotright",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "curvearrowleftright": {
      "command": "curvearrowleftright",
      "snippet": "curvearrowleftright",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "dlsh": {
      "command": "dlsh",
      "snippet": "dlsh",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü≤",
      "documentation": "left down angled arrow"
    },
    "downblackarrow": {
      "command": "downblackarrow",
      "snippet": "downblackarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "downdasharrow": {
      "command": "downdasharrow",
      "snippet": "downdasharrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á£",
      "documentation": "DOWNWARDS DASHED ARROW"
    },
    "downtouparrow": {
      "command": "downtouparrow",
      "snippet": "downtouparrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "downwhitearrow": {
      "command": "downwhitearrow",
      "snippet": "downwhitearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á©",
      "documentation": "DOWNWARDS WHITE ARROW"
    },
    "downzigzagarrow": {
      "command": "downzigzagarrow",
      "snippet": "downzigzagarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚ÜØ",
      "documentation": "DOWNWARDS ZIGZAG ARROW"
    },
    "drsh": {
      "command": "drsh",
      "snippet": "drsh",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü≥",
      "documentation": "right down angled arrow"
    },
    "eqleftrightarrow": {
      "command": "eqleftrightarrow",
      "snippet": "eqleftrightarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "hookleftarrow": {
      "command": "hookleftarrow",
      "snippet": "hookleftarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü©",
      "documentation": "left arrow-hooked"
    },
    "hookrightarrow": {
      "command": "hookrightarrow",
      "snippet": "hookrightarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü™",
      "documentation": "right arrow-hooked"
    },
    "leftarrowTriangle": {
      "command": "leftarrowTriangle",
      "snippet": "leftarrowTriangle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftarrowtriangle": {
      "command": "leftarrowtriangle",
      "snippet": "leftarrowtriangle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áΩ",
      "documentation": "LEFTWARDS OPEN-HEADED ARROW"
    },
    "leftblackarrow": {
      "command": "leftblackarrow",
      "snippet": "leftblackarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftdasharrow": {
      "command": "leftdasharrow",
      "snippet": "leftdasharrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á†",
      "documentation": "LEFTWARDS DASHED ARROW"
    },
    "leftrightarroweq": {
      "command": "leftrightarroweq",
      "snippet": "leftrightarroweq",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftrightarrowTriangle": {
      "command": "leftrightarrowTriangle",
      "snippet": "leftrightarrowTriangle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftrightarrowtriangle": {
      "command": "leftrightarrowtriangle",
      "snippet": "leftrightarrowtriangle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áø",
      "documentation": "LEFT RIGHT OPEN-HEADED ARROW"
    },
    "leftrightblackarrow": {
      "command": "leftrightblackarrow",
      "snippet": "leftrightblackarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftsquigarrow": {
      "command": "leftsquigarrow",
      "snippet": "leftsquigarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áú",
      "documentation": "LEFTWARDS SQUIGGLE ARROW"
    },
    "lefttorightarrow": {
      "command": "lefttorightarrow",
      "snippet": "lefttorightarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftwhitearrow": {
      "command": "leftwhitearrow",
      "snippet": "leftwhitearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á¶",
      "documentation": "LEFTWARDS WHITE ARROW"
    },
    "leftwhiteroundarrow": {
      "command": "leftwhiteroundarrow",
      "snippet": "leftwhiteroundarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "leftzigzagarrow": {
      "command": "leftzigzagarrow",
      "snippet": "leftzigzagarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "linefeed": {
      "command": "linefeed",
      "snippet": "linefeed",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü¥",
      "documentation": "RIGHTWARDS ARROW WITH CORNER DOWNWARDS"
    },
    "looparrowdownleft": {
      "command": "looparrowdownleft",
      "snippet": "looparrowdownleft",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "looparrowdownright": {
      "command": "looparrowdownright",
      "snippet": "looparrowdownright",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "mapsdown": {
      "command": "mapsdown",
      "snippet": "mapsdown",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üß",
      "documentation": "maps downward"
    },
    "mapsfrom": {
      "command": "mapsfrom",
      "snippet": "mapsfrom",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü§",
      "documentation": "maps leftward"
    },
    "Mapsfrom": {
      "command": "Mapsfrom",
      "snippet": "Mapsfrom",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§Ü",
      "documentation": "LEFTWARDS DOUBLE ARROW FROM BAR"
    },
    "Mapsto": {
      "command": "Mapsto",
      "snippet": "Mapsto",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚§á",
      "documentation": "RIGHTWARDS DOUBLE ARROW FROM BAR"
    },
    "mapsup": {
      "command": "mapsup",
      "snippet": "mapsup",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü•",
      "documentation": "maps upward"
    },
    "Nearrow": {
      "command": "Nearrow",
      "snippet": "Nearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áó",
      "documentation": "ne pointing double arrow"
    },
    "nearrowcorner": {
      "command": "nearrowcorner",
      "snippet": "nearrowcorner",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nHdownarrow": {
      "command": "nHdownarrow",
      "snippet": "nHdownarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áü",
      "documentation": "DOWNWARDS ARROW WITH DOUBLE STROKE"
    },
    "nHuparrow": {
      "command": "nHuparrow",
      "snippet": "nHuparrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áû",
      "documentation": "UPWARDS ARROW WITH DOUBLE STROKE"
    },
    "nnearrow": {
      "command": "nnearrow",
      "snippet": "nnearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nnwarrow": {
      "command": "nnwarrow",
      "snippet": "nnwarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "nVleftarrow": {
      "command": "nVleftarrow",
      "snippet": "nVleftarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á∫",
      "documentation": "LEFTWARDS ARROW WITH DOUBLE VERTICAL STROKE"
    },
    "nVrightarrow": {
      "command": "nVrightarrow",
      "snippet": "nVrightarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áª",
      "documentation": "RIGHTWARDS ARROW WITH DOUBLE VERTICAL STROKE, z notation finite function"
    },
    "Nwarrow": {
      "command": "Nwarrow",
      "snippet": "Nwarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áñ",
      "documentation": "nw pointing double arrow"
    },
    "nwarrowcorner": {
      "command": "nwarrowcorner",
      "snippet": "nwarrowcorner",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rightarrowbar": {
      "command": "rightarrowbar",
      "snippet": "rightarrowbar",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á•",
      "documentation": "RIGHTWARDS ARROW TO BAR"
    },
    "rightarrowcircle": {
      "command": "rightarrowcircle",
      "snippet": "rightarrowcircle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rightarrowTriangle": {
      "command": "rightarrowTriangle",
      "snippet": "rightarrowTriangle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rightarrowtriangle": {
      "command": "rightarrowtriangle",
      "snippet": "rightarrowtriangle",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áæ",
      "documentation": "RIGHTWARDS OPEN-HEADED ARROW"
    },
    "rightblackarrow": {
      "command": "rightblackarrow",
      "snippet": "rightblackarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rightdasharrow": {
      "command": "rightdasharrow",
      "snippet": "rightdasharrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á¢",
      "documentation": "RIGHTWARDS DASHED ARROW"
    },
    "rightthreearrows": {
      "command": "rightthreearrows",
      "snippet": "rightthreearrows",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á∂",
      "documentation": "THREE RIGHTWARDS ARROWS"
    },
    "righttoleftarrow": {
      "command": "righttoleftarrow",
      "snippet": "righttoleftarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "rightwhitearrow": {
      "command": "rightwhitearrow",
      "snippet": "rightwhitearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á®",
      "documentation": "RIGHTWARDS WHITE ARROW"
    },
    "rightwhiteroundarrow": {
      "command": "rightwhiteroundarrow",
      "snippet": "rightwhiteroundarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Searrow": {
      "command": "Searrow",
      "snippet": "Searrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áò",
      "documentation": "se pointing double arrow"
    },
    "ssearrow": {
      "command": "ssearrow",
      "snippet": "ssearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "sswarrow": {
      "command": "sswarrow",
      "snippet": "sswarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "Swarrow": {
      "command": "Swarrow",
      "snippet": "Swarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áô",
      "documentation": "sw pointing double arrow"
    },
    "twoheaddownarrow": {
      "command": "twoheaddownarrow",
      "snippet": "twoheaddownarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü°",
      "documentation": "down two-headed arrow"
    },
    "twoheaduparrow": {
      "command": "twoheaduparrow",
      "snippet": "twoheaduparrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Üü",
      "documentation": "up two-headed arrow"
    },
    "twoheadwhiteuparrow": {
      "command": "twoheadwhiteuparrow",
      "snippet": "twoheadwhiteuparrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "twoheadwhiteuparrowpedestal": {
      "command": "twoheadwhiteuparrowpedestal",
      "snippet": "twoheadwhiteuparrowpedestal",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "upblackarrow": {
      "command": "upblackarrow",
      "snippet": "upblackarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "updasharrow": {
      "command": "updasharrow",
      "snippet": "updasharrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á°",
      "documentation": "UPWARDS DASHED ARROW"
    },
    "updownarrowbar": {
      "command": "updownarrowbar",
      "snippet": "updownarrowbar",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚Ü®",
      "documentation": "UP DOWN ARROW WITH BASE (perpendicular)"
    },
    "updownblackarrow": {
      "command": "updownblackarrow",
      "snippet": "updownblackarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "updownwhitearrow": {
      "command": "updownwhitearrow",
      "snippet": "updownwhitearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "uptodownarrow": {
      "command": "uptodownarrow",
      "snippet": "uptodownarrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "upwhitearrow": {
      "command": "upwhitearrow",
      "snippet": "upwhitearrow",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚áß",
      "documentation": "UPWARDS WHITE ARROW"
    },
    "whitearrowupfrombar": {
      "command": "whitearrowupfrombar",
      "snippet": "whitearrowupfrombar",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1,
      "detail": "‚á™",
      "documentation": "UPWARDS WHITE ARROW FROM BAR"
    },
    "whitearrowuppedestal": {
      "command": "whitearrowuppedestal",
      "snippet": "whitearrowuppedestal",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "whitearrowuppedestalhbar": {
      "command": "whitearrowuppedestalhbar",
      "snippet": "whitearrowuppedestalhbar",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    },
    "whitearrowuppedestalvbar": {
      "command": "whitearrowuppedestalvbar",
      "snippet": "whitearrowuppedestalvbar",
      "option": "arrows",
      "keyvals": [],
      "keyvalindex": -1
    }
  },
  "envs": {},
  "options": [
    "czech",
    "arrows"
  ]
}